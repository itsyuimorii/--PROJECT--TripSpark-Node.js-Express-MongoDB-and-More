self["HeapSnapshotModel"]=self["HeapSnapshotModel"]||{};HeapSnapshotModel.HeapSnapshotProgressEvent={Update:"ProgressUpdate",BrokenSnapshot:"BrokenSnapshot"};HeapSnapshotModel.baseSystemDistance=1e8;HeapSnapshotModel.AllocationNodeCallers=class{constructor(s,t){this.nodesWithSingleCaller=s;this.branchingCallers=t}};HeapSnapshotModel.SerializedAllocationNode=class{constructor(s,t,e,i,o,a,h,d,n,c,l){this.id=s;this.name=t;this.scriptName=e;this.scriptId=i;this.line=o;this.column=a;this.count=h;this.size=d;this.liveCount=n;this.liveSize=c;this.hasChildren=l}};HeapSnapshotModel.AllocationStackFrame=class{constructor(s,t,e,i,o){this.functionName=s;this.scriptName=t;this.scriptId=e;this.line=i;this.column=o}};HeapSnapshotModel.Node=class{constructor(s,t,e,i,o,a,h){this.id=s;this.name=t;this.distance=e;this.nodeIndex=i;this.retainedSize=o;this.selfSize=a;this.type=h;this.canBeQueried=false;this.detachedDOMTreeNode=false}};HeapSnapshotModel.Edge=class{constructor(s,t,e,i){this.name=s;this.node=t;this.type=e;this.edgeIndex=i}};HeapSnapshotModel.Aggregate=class{constructor(){this.count;this.distance;this.self;this.maxRet;this.type;this.name;this.idxs}};HeapSnapshotModel.AggregateForDiff=class{constructor(){this.indexes=[];this.ids=[];this.selfSizes=[]}};HeapSnapshotModel.Diff=class{constructor(){this.addedCount=0;this.removedCount=0;this.addedSize=0;this.removedSize=0;this.deletedIndexes=[];this.addedIndexes=[]}};HeapSnapshotModel.DiffForClass=class{constructor(){this.addedCount;this.removedCount;this.addedSize;this.removedSize;this.deletedIndexes;this.addedIndexes;this.countDelta;this.sizeDelta}};HeapSnapshotModel.ComparatorConfig=class{constructor(){this.fieldName1;this.ascending1;this.fieldName2;this.ascending2}};HeapSnapshotModel.WorkerCommand=class{constructor(){this.callId;this.disposition;this.objectId;this.newObjectId;this.methodName;this.methodArguments;this.source}};HeapSnapshotModel.ItemsRange=class{constructor(s,t,e,i){this.startPosition=s;this.endPosition=t;this.totalLength=e;this.items=i}};HeapSnapshotModel.StaticData=class{constructor(s,t,e,i){this.nodeCount=s;this.rootNodeIndex=t;this.totalSize=e;this.maxJSObjectId=i}};HeapSnapshotModel.Statistics=class{constructor(){this.total;this.v8heap;this.native;this.code;this.jsArrays;this.strings;this.system}};HeapSnapshotModel.NodeFilter=class{constructor(s,t){this.minNodeId=s;this.maxNodeId=t;this.allocationNodeId}equals(s){return this.minNodeId===s.minNodeId&&this.maxNodeId===s.maxNodeId&&this.allocationNodeId===s.allocationNodeId}};HeapSnapshotModel.SearchConfig=class{constructor(s,t,e,i,o){this.query=s;this.caseSensitive=t;this.isRegex=e;this.shouldJump=i;this.jumpBackward=o}};HeapSnapshotModel.Samples=class{constructor(s,t,e){this.timestamps=s;this.lastAssignedIds=t;this.sizes=e}};HeapSnapshotModel.Location=class{constructor(s,t,e){this.scriptId=s;this.lineNumber=t;this.columnNumber=e}};