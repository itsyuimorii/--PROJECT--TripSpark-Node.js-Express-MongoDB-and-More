self["Profiler"]=self["Profiler"]||{};Profiler.ProfileType=class extends Common.Object{constructor(e,t){super();this._id=e;this._name=t;this._profiles=[];this._profileBeingRecorded=null;this._nextProfileUid=1;if(!window.opener)window.addEventListener("unload",this._clearTempStorage.bind(this),false)}typeName(){return""}nextProfileUid(){return this._nextProfileUid}incrementProfileUid(){return this._nextProfileUid++}hasTemporaryView(){return false}fileExtension(){return null}get buttonTooltip(){return""}get id(){return this._id}get treeItemTitle(){return this._name}get name(){return this._name}buttonClicked(){return false}get description(){return""}isInstantProfile(){return false}isEnabled(){return true}getProfiles(){function e(e){return this._profileBeingRecorded!==e}return this._profiles.filter(e.bind(this))}customContent(){return null}setCustomContentEnabled(e){}getProfile(e){for(let t=0;t<this._profiles.length;++t){if(this._profiles[t].uid===e)return this._profiles[t]}return null}loadFromFile(e){let t=e.name;const i=this.fileExtension();if(i&&t.endsWith(i))t=t.substr(0,t.length-i.length);const r=this.createProfileLoadedFromFile(t);r.setFromFile();this.setProfileBeingRecorded(r);this.addProfile(r);return r.loadFromFile(e)}createProfileLoadedFromFile(e){throw new Error("Needs implemented.")}addProfile(e){this._profiles.push(e);this.dispatchEventToListeners(Profiler.ProfileType.Events.AddProfileHeader,e)}removeProfile(e){const t=this._profiles.indexOf(e);if(t===-1)return;this._profiles.splice(t,1);this._disposeProfile(e)}_clearTempStorage(){for(let e=0;e<this._profiles.length;++e)this._profiles[e].removeTempFile()}profileBeingRecorded(){return this._profileBeingRecorded}setProfileBeingRecorded(e){this._profileBeingRecorded=e}profileBeingRecordedRemoved(){}reset(){for(const e of this._profiles.slice())this._disposeProfile(e);this._profiles=[];this._nextProfileUid=1}_disposeProfile(e){this.dispatchEventToListeners(Profiler.ProfileType.Events.RemoveProfileHeader,e);e.dispose();if(this._profileBeingRecorded===e){this.profileBeingRecordedRemoved();this.setProfileBeingRecorded(null)}}};Profiler.ProfileType.Events={AddProfileHeader:Symbol("add-profile-header"),ProfileComplete:Symbol("profile-complete"),RemoveProfileHeader:Symbol("remove-profile-header"),ViewUpdated:Symbol("view-updated")};Profiler.ProfileType.DataDisplayDelegate=function(){};Profiler.ProfileType.DataDisplayDelegate.prototype={showProfile(e){},showObject(e,t){},async linkifyObject(e){}};Profiler.ProfileHeader=class extends Common.Object{constructor(e,t){super();this._profileType=e;this.title=t;this.uid=e.incrementProfileUid();this._fromFile=false}setTitle(e){this.title=e;this.dispatchEventToListeners(Profiler.ProfileHeader.Events.ProfileTitleChanged,this)}profileType(){return this._profileType}updateStatus(e,t){this.dispatchEventToListeners(Profiler.ProfileHeader.Events.UpdateStatus,new Profiler.ProfileHeader.StatusUpdate(e,t))}createSidebarTreeElement(e){throw new Error("Not implemented.")}createView(e){throw new Error("Not implemented.")}removeTempFile(){if(this._tempFile)this._tempFile.remove()}dispose(){}canSaveToFile(){return false}saveToFile(){throw new Error("Not implemented")}loadFromFile(e){throw new Error("Not implemented")}fromFile(){return this._fromFile}setFromFile(){this._fromFile=true}setProfile(e){}};Profiler.ProfileHeader.StatusUpdate=class{constructor(e,t){this.subtitle=e;this.wait=t}};Profiler.ProfileHeader.Events={UpdateStatus:Symbol("UpdateStatus"),ProfileReceived:Symbol("ProfileReceived"),ProfileTitleChanged:Symbol("ProfileTitleChanged")};Profiler.ProfilesPanel=class extends UI.PanelWithSidebar{constructor(e,t,i){super(e);this._profileTypes=t;this.registerRequiredCSS("profiler/heapProfiler.css");this.registerRequiredCSS("profiler/profilesPanel.css");this.registerRequiredCSS("object_ui/objectValue.css");const r=new UI.VBox;this.splitWidget().setMainWidget(r);this.profilesItemTreeElement=new Profiler.ProfilesSidebarTreeElement(this);this._sidebarTree=new UI.TreeOutlineInShadow;this._sidebarTree.registerRequiredCSS("profiler/profilesSidebarTree.css");this._sidebarTree.element.classList.add("profiles-sidebar-tree-box");this.panelSidebarElement().appendChild(this._sidebarTree.element);this._sidebarTree.appendChild(this.profilesItemTreeElement);this.profileViews=createElement("div");this.profileViews.id="profile-views";this.profileViews.classList.add("vbox");r.element.appendChild(this.profileViews);this._toolbarElement=createElementWithClass("div","profiles-toolbar");r.element.insertBefore(this._toolbarElement,r.element.firstChild);this.panelSidebarElement().classList.add("profiles-tree-sidebar");const s=createElementWithClass("div","profiles-toolbar");this.panelSidebarElement().insertBefore(s,this.panelSidebarElement().firstChild);const o=new UI.Toolbar("",s);this._toggleRecordAction=UI.actionRegistry.action(i);this._toggleRecordButton=UI.Toolbar.createActionButton(this._toggleRecordAction);o.appendToolbarItem(this._toggleRecordButton);this.clearResultsButton=new UI.ToolbarButton(Common.UIString("Clear all profiles"),"largeicon-clear");this.clearResultsButton.addEventListener(UI.ToolbarButton.Events.Click,this._reset,this);o.appendToolbarItem(this.clearResultsButton);o.appendSeparator();o.appendToolbarItem(UI.Toolbar.createActionButtonForId("components.collect-garbage"));this._profileViewToolbar=new UI.Toolbar("",this._toolbarElement);this._profileGroups={};this._launcherView=new Profiler.ProfileLauncherView(this);this._launcherView.addEventListener(Profiler.ProfileLauncherView.Events.ProfileTypeSelected,this._onProfileTypeSelected,this);this._profileToView=[];this._typeIdToSidebarSection={};const n=this._profileTypes;for(let e=0;e<n.length;e++)this._registerProfileType(n[e]);this._launcherView.restoreSelectedProfileType();this.profilesItemTreeElement.select();this._showLauncherView();this._createFileSelectorElement();this.element.addEventListener("contextmenu",this._handleContextMenuEvent.bind(this),false);this.contentElement.addEventListener("keydown",this._onKeyDown.bind(this),false);SDK.targetManager.addEventListener(SDK.TargetManager.Events.SuspendStateChanged,this._onSuspendStateChanged,this);UI.context.addFlavorChangeListener(SDK.CPUProfilerModel,this._updateProfileTypeSpecificUI,this);UI.context.addFlavorChangeListener(SDK.HeapProfilerModel,this._updateProfileTypeSpecificUI,this)}_onKeyDown(e){let t=false;if(e.key==="ArrowDown"&&!e.altKey)t=this._sidebarTree.selectNext();else if(e.key==="ArrowUp"&&!e.altKey)t=this._sidebarTree.selectPrevious();if(t)e.consume(true)}searchableView(){return this.visibleView&&this.visibleView.searchableView?this.visibleView.searchableView():null}_createFileSelectorElement(){if(this._fileSelectorElement)this.element.removeChild(this._fileSelectorElement);this._fileSelectorElement=UI.createFileSelectorElement(this._loadFromFile.bind(this));Profiler.ProfilesPanel._fileSelectorElement=this._fileSelectorElement;this.element.appendChild(this._fileSelectorElement)}_findProfileTypeByExtension(e){return this._profileTypes.find(t=>!!t.fileExtension()&&e.endsWith(t.fileExtension()||""))||null}async _loadFromFile(e){this._createFileSelectorElement();const t=this._findProfileTypeByExtension(e.name);if(!t){const e=new Set(this._profileTypes.map(e=>e.fileExtension()).filter(e=>e));Common.console.error(Common.UIString(`Can't load file. Supported file extensions: '%s'.`,Array.from(e).join(`', '`)));return}if(!!t.profileBeingRecorded()){Common.console.error(Common.UIString(`Can't load profile while another profile is being recorded.`));return}const i=await t.loadFromFile(e);if(i)UI.MessageDialog.show(Common.UIString("Profile loading failed: %s.",i.message))}toggleRecord(){if(!this._toggleRecordAction.enabled())return true;const e=this._selectedProfileType;const t=e.buttonClicked();this._updateToggleRecordAction(t);if(t){this._launcherView.profileStarted();if(e.hasTemporaryView())this.showProfile(e.profileBeingRecorded())}else{this._launcherView.profileFinished()}return true}_onSuspendStateChanged(){this._updateToggleRecordAction(this._toggleRecordAction.toggled())}_updateToggleRecordAction(e){const t=!!(UI.context.flavor(SDK.CPUProfilerModel)||UI.context.flavor(SDK.HeapProfilerModel));const i=e||!SDK.targetManager.allTargetsSuspended()&&t;this._toggleRecordAction.setEnabled(i);this._toggleRecordAction.setToggled(e);if(i)this._toggleRecordButton.setTitle(this._selectedProfileType?this._selectedProfileType.buttonTooltip:"");else this._toggleRecordButton.setTitle(UI.anotherProfilerActiveLabel());if(this._selectedProfileType)this._launcherView.updateProfileType(this._selectedProfileType,i)}_profileBeingRecordedRemoved(){this._updateToggleRecordAction(false);this._launcherView.profileFinished()}_onProfileTypeSelected(e){this._selectedProfileType=e.data;this._updateProfileTypeSpecificUI()}_updateProfileTypeSpecificUI(){this._updateToggleRecordAction(this._toggleRecordAction.toggled())}_reset(){this._profileTypes.forEach(e=>e.reset());delete this.visibleView;this._profileGroups={};this._updateToggleRecordAction(false);this._launcherView.profileFinished();this._sidebarTree.element.classList.remove("some-expandable");this._launcherView.detach();this.profileViews.removeChildren();this._profileViewToolbar.removeToolbarItems();this.clearResultsButton.element.classList.remove("hidden");this.profilesItemTreeElement.select();this._showLauncherView()}_showLauncherView(){this.closeVisibleView();this._profileViewToolbar.removeToolbarItems();this._launcherView.show(this.profileViews);this.visibleView=this._launcherView;this._toolbarElement.classList.add("hidden")}_registerProfileType(e){this._launcherView.addProfileType(e);const t=new Profiler.ProfileTypeSidebarSection(this,e);this._typeIdToSidebarSection[e.id]=t;this._sidebarTree.appendChild(t);t.childrenListElement.addEventListener("contextmenu",this._handleContextMenuEvent.bind(this),false);function i(e){this._addProfileHeader(e.data)}function r(e){this._removeProfileHeader(e.data)}function s(e){this.showProfile(e.data)}e.addEventListener(Profiler.ProfileType.Events.ViewUpdated,this._updateProfileTypeSpecificUI,this);e.addEventListener(Profiler.ProfileType.Events.AddProfileHeader,i,this);e.addEventListener(Profiler.ProfileType.Events.RemoveProfileHeader,r,this);e.addEventListener(Profiler.ProfileType.Events.ProfileComplete,s,this);const o=e.getProfiles();for(let e=0;e<o.length;e++)this._addProfileHeader(o[e])}_handleContextMenuEvent(e){const t=new UI.ContextMenu(e);if(this.panelSidebarElement().isSelfOrAncestor(e.srcElement)){t.defaultSection().appendItem(Common.UIString("Load…"),this._fileSelectorElement.click.bind(this._fileSelectorElement))}t.show()}showLoadFromFileDialog(){this._fileSelectorElement.click()}_addProfileHeader(e){const t=e.profileType();const i=t.id;this._typeIdToSidebarSection[i].addProfileHeader(e);if(!this.visibleView||this.visibleView===this._launcherView)this.showProfile(e)}_removeProfileHeader(e){if(e.profileType().profileBeingRecorded()===e)this._profileBeingRecordedRemoved();const t=this._indexOfViewForProfile(e);if(t!==-1)this._profileToView.splice(t,1);const i=e.profileType().id;const r=this._typeIdToSidebarSection[i].removeProfileHeader(e);if(r){this.profilesItemTreeElement.select();this._showLauncherView()}}showProfile(e){if(!e||e.profileType().profileBeingRecorded()===e&&!e.profileType().hasTemporaryView())return null;const t=this.viewForProfile(e);if(t===this.visibleView)return t;this.closeVisibleView();t.show(this.profileViews);t.focus();this._toolbarElement.classList.remove("hidden");this.visibleView=t;const i=this._typeIdToSidebarSection[e.profileType().id];const r=i.sidebarElementForProfile(e);r.revealAndSelect();this._profileViewToolbar.removeToolbarItems();const s=t.syncToolbarItems();for(let e=0;e<s.length;++e)this._profileViewToolbar.appendToolbarItem(s[e]);return t}showObject(e,t){}async linkifyObject(e){return null}viewForProfile(e){const t=this._indexOfViewForProfile(e);if(t!==-1)return this._profileToView[t].view;const i=e.createView(this);i.element.classList.add("profile-view");this._profileToView.push({profile:e,view:i});return i}_indexOfViewForProfile(e){return this._profileToView.findIndex(t=>t.profile===e)}closeVisibleView(){if(this.visibleView)this.visibleView.detach();delete this.visibleView}focus(){this._sidebarTree.focus()}};Profiler.ProfileTypeSidebarSection=class extends UI.TreeElement{constructor(e,t){super(t.treeItemTitle.escapeHTML(),true);this.selectable=false;this._dataDisplayDelegate=e;this._profileTreeElements=[];this._profileGroups={};this.expand();this.hidden=true;this.setCollapsible(false)}addProfileHeader(e){this.hidden=false;const t=e.profileType();let i=this;const r=e.createSidebarTreeElement(this._dataDisplayDelegate);this._profileTreeElements.push(r);if(!e.fromFile()&&t.profileBeingRecorded()!==e){const t=e.title;let s=this._profileGroups[t];if(!s){s=new Profiler.ProfileTypeSidebarSection.ProfileGroup;this._profileGroups[t]=s}s.profileSidebarTreeElements.push(r);const o=s.profileSidebarTreeElements.length;if(o===2){s.sidebarTreeElement=new Profiler.ProfileGroupSidebarTreeElement(this._dataDisplayDelegate,e.title);const t=s.profileSidebarTreeElements[0];const i=this.children().indexOf(t);this.insertChild(s.sidebarTreeElement,i);const r=t.selected;this.removeChild(t);s.sidebarTreeElement.appendChild(t);if(r)t.revealAndSelect();t.setSmall(true);t.setMainTitle(Common.UIString("Run %d",1));this.treeOutline.element.classList.add("some-expandable")}if(o>=2){i=s.sidebarTreeElement;r.setSmall(true);r.setMainTitle(Common.UIString("Run %d",o))}}i.appendChild(r)}removeProfileHeader(e){const t=this._sidebarElementIndex(e);if(t===-1)return false;const i=this._profileTreeElements[t];this._profileTreeElements.splice(t,1);let r=this;const s=this._profileGroups[e.title];if(s){const t=s.profileSidebarTreeElements;t.splice(t.indexOf(i),1);if(t.length===1){const i=r.children().indexOf(s.sidebarTreeElement);s.sidebarTreeElement.removeChild(t[0]);this.insertChild(t[0],i);t[0].setSmall(false);t[0].setMainTitle(e.title);this.removeChild(s.sidebarTreeElement)}if(t.length!==0)r=s.sidebarTreeElement}r.removeChild(i);i.dispose();if(this.childCount())return false;this.hidden=true;return true}sidebarElementForProfile(e){const t=this._sidebarElementIndex(e);return t===-1?null:this._profileTreeElements[t]}_sidebarElementIndex(e){const t=this._profileTreeElements;for(let i=0;i<t.length;i++){if(t[i].profile===e)return i}return-1}onattach(){this.listItemElement.classList.add("profiles-tree-section")}};Profiler.ProfileTypeSidebarSection.ProfileGroup=class{constructor(){this.profileSidebarTreeElements=[];this.sidebarTreeElement=null}};Profiler.ProfileSidebarTreeElement=class extends UI.TreeElement{constructor(e,t,i){super("",false);this._iconElement=createElementWithClass("div","icon");this._titlesElement=createElementWithClass("div","titles no-subtitle");this._titleContainer=this._titlesElement.createChild("span","title-container");this._titleElement=this._titleContainer.createChild("span","title");this._subtitleElement=this._titlesElement.createChild("span","subtitle");this._titleElement.textContent=t.title;this._className=i;this._small=false;this._dataDisplayDelegate=e;this.profile=t;t.addEventListener(Profiler.ProfileHeader.Events.UpdateStatus,this._updateStatus,this);if(t.canSaveToFile())this._createSaveLink();else t.addEventListener(Profiler.ProfileHeader.Events.ProfileReceived,this._onProfileReceived,this)}_createSaveLink(){this._saveLinkElement=this._titleContainer.createChild("span","save-link");this._saveLinkElement.textContent=Common.UIString("Save");this._saveLinkElement.addEventListener("click",this._saveProfile.bind(this),false)}_onProfileReceived(e){this._createSaveLink()}_updateStatus(e){const t=e.data;if(t.subtitle!==null){this._subtitleElement.textContent=t.subtitle||"";this._titlesElement.classList.toggle("no-subtitle",!t.subtitle)}if(typeof t.wait==="boolean"&&this.listItemElement)this.listItemElement.classList.toggle("wait",t.wait)}ondblclick(e){if(!this._editing)this._startEditing(e.target);return false}_startEditing(e){const t=e.enclosingNodeOrSelfWithClass("title");if(!t)return;const i=new UI.InplaceEditor.Config(this._editingCommitted.bind(this),this._editingCancelled.bind(this));this._editing=UI.InplaceEditor.startEditing(t,i)}_editingCommitted(e,t){delete this._editing;this.profile.setTitle(t)}_editingCancelled(){delete this._editing}dispose(){this.profile.removeEventListener(Profiler.ProfileHeader.Events.UpdateStatus,this._updateStatus,this);this.profile.removeEventListener(Profiler.ProfileHeader.Events.ProfileReceived,this._onProfileReceived,this)}onselect(){this._dataDisplayDelegate.showProfile(this.profile);return true}ondelete(){this.profile.profileType().removeProfile(this.profile);return true}onattach(){if(this._className)this.listItemElement.classList.add(this._className);if(this._small)this.listItemElement.classList.add("small");this.listItemElement.appendChildren(this._iconElement,this._titlesElement);this.listItemElement.addEventListener("contextmenu",this._handleContextMenuEvent.bind(this),true)}_handleContextMenuEvent(e){const t=this.profile;const i=new UI.ContextMenu(e);i.headerSection().appendItem(Common.UIString("Load…"),Profiler.ProfilesPanel._fileSelectorElement.click.bind(Profiler.ProfilesPanel._fileSelectorElement));if(t.canSaveToFile())i.saveSection().appendItem(Common.UIString("Save…"),t.saveToFile.bind(t));i.footerSection().appendItem(Common.UIString("Delete"),this.ondelete.bind(this));i.show()}_saveProfile(e){this.profile.saveToFile()}setSmall(e){this._small=e;if(this.listItemElement)this.listItemElement.classList.toggle("small",this._small)}setMainTitle(e){this._titleElement.textContent=e}};Profiler.ProfileGroupSidebarTreeElement=class extends UI.TreeElement{constructor(e,t){super("",true);this.selectable=false;this._dataDisplayDelegate=e;this._title=t;this.expand();this.toggleOnClick=true}onselect(){const e=this.childCount()>0;if(e)this._dataDisplayDelegate.showProfile(this.lastChild().profile);return e}onattach(){this.listItemElement.classList.add("profile-group-sidebar-tree-item");this.listItemElement.createChild("div","icon");this.listItemElement.createChild("div","titles no-subtitle").createChild("span","title-container").createChild("span","title").textContent=this._title}};Profiler.ProfilesSidebarTreeElement=class extends UI.TreeElement{constructor(e){super("",false);this.selectable=true;this._panel=e}onselect(){this._panel._showLauncherView();return true}onattach(){this.listItemElement.classList.add("profile-launcher-view-tree-item");this.listItemElement.createChild("div","icon");this.listItemElement.createChild("div","titles no-subtitle").createChild("span","title-container").createChild("span","title").textContent=Common.UIString("Profiles")}};Profiler.JSProfilerPanel=class extends Profiler.ProfilesPanel{constructor(){const e=Profiler.ProfileTypeRegistry.instance;super("js_profiler",[e.cpuProfileType],"profiler.js-toggle-recording")}wasShown(){UI.context.setFlavor(Profiler.JSProfilerPanel,this)}willHide(){UI.context.setFlavor(Profiler.JSProfilerPanel,null)}handleAction(e,t){const i=UI.context.flavor(Profiler.JSProfilerPanel);console.assert(i&&i instanceof Profiler.JSProfilerPanel);i.toggleRecord();return true}};Profiler.ProfileView=class extends UI.SimpleView{constructor(){super(Common.UIString("Profile"));this._profile=null;this._searchableView=new UI.SearchableView(this);this._searchableView.setPlaceholder(Common.UIString("Find by cost (>50ms), name or file"));this._searchableView.show(this.element);const e=[];e.push({id:"self",title:this.columnHeader("self"),width:"120px",fixedWidth:true,sortable:true,sort:DataGrid.DataGrid.Order.Descending});e.push({id:"total",title:this.columnHeader("total"),width:"120px",fixedWidth:true,sortable:true});e.push({id:"function",title:Common.UIString("Function"),disclosure:true,sortable:true});this.dataGrid=new DataGrid.DataGrid(e);this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged,this._sortProfile,this);this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode,this._nodeSelected.bind(this,true));this.dataGrid.addEventListener(DataGrid.DataGrid.Events.DeselectedNode,this._nodeSelected.bind(this,false));this.viewSelectComboBox=new UI.ToolbarComboBox(this._changeView.bind(this));this.focusButton=new UI.ToolbarButton(Common.UIString("Focus selected function"),"largeicon-visibility");this.focusButton.setEnabled(false);this.focusButton.addEventListener(UI.ToolbarButton.Events.Click,this._focusClicked,this);this.excludeButton=new UI.ToolbarButton(Common.UIString("Exclude selected function"),"largeicon-delete");this.excludeButton.setEnabled(false);this.excludeButton.addEventListener(UI.ToolbarButton.Events.Click,this._excludeClicked,this);this.resetButton=new UI.ToolbarButton(Common.UIString("Restore all functions"),"largeicon-refresh");this.resetButton.setEnabled(false);this.resetButton.addEventListener(UI.ToolbarButton.Events.Click,this._resetClicked,this);this._linkifier=new Components.Linkifier(Profiler.ProfileView._maxLinkLength)}static buildPopoverTable(e){const t=createElement("table");for(const i of e){const e=t.createChild("tr");e.createChild("td").textContent=i.title;e.createChild("td").textContent=i.value}return t}setProfile(e){this._profile=e;this._bottomUpProfileDataGridTree=null;this._topDownProfileDataGridTree=null;this._changeView();this.refresh()}profile(){return this._profile}initialize(e,t){this._nodeFormatter=e;this._viewType=Common.settings.createSetting("profileView",Profiler.ProfileView.ViewTypes.Heavy);t=t||[Profiler.ProfileView.ViewTypes.Flame,Profiler.ProfileView.ViewTypes.Heavy,Profiler.ProfileView.ViewTypes.Tree];const i=new Map([[Profiler.ProfileView.ViewTypes.Flame,ls`Chart`],[Profiler.ProfileView.ViewTypes.Heavy,ls`Heavy (Bottom Up)`],[Profiler.ProfileView.ViewTypes.Tree,ls`Tree (Top Down)`],[Profiler.ProfileView.ViewTypes.Text,ls`Text (Top Down)`]]);const r=new Map(t.map(e=>[e,this.viewSelectComboBox.createOption(i.get(e),"",e)]));const s=this._viewType.get()||t[0];const o=r.get(s)||r.get(t[0]);this.viewSelectComboBox.select(o);this._changeView();if(this._flameChart)this._flameChart.update()}focus(){if(this._flameChart)this._flameChart.focus();else super.focus()}columnHeader(e){throw"Not implemented"}selectRange(e,t){if(!this._flameChart)return;this._flameChart.selectRange(e,t)}syncToolbarItems(){return[this.viewSelectComboBox,this.focusButton,this.excludeButton,this.resetButton]}_getBottomUpProfileDataGridTree(){if(!this._bottomUpProfileDataGridTree){this._bottomUpProfileDataGridTree=new Profiler.BottomUpProfileDataGridTree(this._nodeFormatter,this._searchableView,this._profile.root,this.adjustedTotal)}return this._bottomUpProfileDataGridTree}_getTopDownProfileDataGridTree(){if(!this._topDownProfileDataGridTree){this._topDownProfileDataGridTree=new Profiler.TopDownProfileDataGridTree(this._nodeFormatter,this._searchableView,this._profile.root,this.adjustedTotal)}return this._topDownProfileDataGridTree}willHide(){this._currentSearchResultIndex=-1}refresh(){if(!this.profileDataGridTree)return;const e=this.dataGrid.selectedNode?this.dataGrid.selectedNode.profileNode:null;this.dataGrid.rootNode().removeChildren();const t=this.profileDataGridTree.children;const i=t.length;for(let e=0;e<i;++e)this.dataGrid.rootNode().appendChild(t[e]);if(e)e.selected=true}refreshVisibleData(){let e=this.dataGrid.rootNode().children[0];while(e){e.refresh();e=e.traverseNextNode(false,null,true)}}searchableView(){return this._searchableView}supportsCaseSensitiveSearch(){return true}supportsRegexSearch(){return false}searchCanceled(){this._searchableElement.searchCanceled()}performSearch(e,t,i){this._searchableElement.performSearch(e,t,i)}jumpToNextSearchResult(){this._searchableElement.jumpToNextSearchResult()}jumpToPreviousSearchResult(){this._searchableElement.jumpToPreviousSearchResult()}linkifier(){return this._linkifier}_ensureTextViewCreated(){if(this._textView)return;this._textView=new UI.SimpleView(ls`Call tree`);this._textView.registerRequiredCSS("profiler/profilesPanel.css");this.populateTextView(this._textView)}populateTextView(e){}createFlameChartDataProvider(){throw"Not implemented"}_ensureFlameChartCreated(){if(this._flameChart)return;this._dataProvider=this.createFlameChartDataProvider();this._flameChart=new Profiler.CPUProfileFlameChart(this._searchableView,this._dataProvider);this._flameChart.addEventListener(PerfUI.FlameChart.Events.EntrySelected,this._onEntrySelected.bind(this))}_onEntrySelected(e){const t=e.data;const i=this._dataProvider._entryNodes[t];const r=this._profileHeader._debuggerModel;if(!i||!i.scriptId||!r)return;const s=r.scriptForId(i.scriptId);if(!s)return;const o=r.createRawLocation(s,i.lineNumber,i.columnNumber);Common.Revealer.reveal(Bindings.debuggerWorkspaceBinding.rawLocationToUILocation(o))}_changeView(){if(!this._profile)return;this._searchableView.closeSearch();if(this._visibleView)this._visibleView.detach();this._viewType.set(this.viewSelectComboBox.selectedOption().value);switch(this._viewType.get()){case Profiler.ProfileView.ViewTypes.Flame:this._ensureFlameChartCreated();this._visibleView=this._flameChart;this._searchableElement=this._flameChart;break;case Profiler.ProfileView.ViewTypes.Tree:this.profileDataGridTree=this._getTopDownProfileDataGridTree();this._sortProfile();this._visibleView=this.dataGrid.asWidget();this._searchableElement=this.profileDataGridTree;break;case Profiler.ProfileView.ViewTypes.Heavy:this.profileDataGridTree=this._getBottomUpProfileDataGridTree();this._sortProfile();this._visibleView=this.dataGrid.asWidget();this._searchableElement=this.profileDataGridTree;break;case Profiler.ProfileView.ViewTypes.Text:this._ensureTextViewCreated();this._visibleView=this._textView;this._searchableElement=this._textView;break}const e=this._viewType.get()===Profiler.ProfileView.ViewTypes.Flame;this.focusButton.setVisible(!e);this.excludeButton.setVisible(!e);this.resetButton.setVisible(!e);this._visibleView.show(this._searchableView.element)}_nodeSelected(e){this.focusButton.setEnabled(e);this.excludeButton.setEnabled(e)}_focusClicked(e){if(!this.dataGrid.selectedNode)return;this.resetButton.setEnabled(true);this.profileDataGridTree.focus(this.dataGrid.selectedNode);this.refresh();this.refreshVisibleData();Host.userMetrics.actionTaken(Host.UserMetrics.Action.CpuProfileNodeFocused)}_excludeClicked(e){const t=this.dataGrid.selectedNode;if(!t)return;t.deselect();this.resetButton.setEnabled(true);this.profileDataGridTree.exclude(t);this.refresh();this.refreshVisibleData();Host.userMetrics.actionTaken(Host.UserMetrics.Action.CpuProfileNodeExcluded)}_resetClicked(e){this.resetButton.setEnabled(false);this.profileDataGridTree.restore();this._linkifier.reset();this.refresh();this.refreshVisibleData()}_sortProfile(){const e=this.dataGrid.isSortOrderAscending();const t=this.dataGrid.sortColumnId();const i=t==="function"?"functionName":t||"";this.profileDataGridTree.sort(Profiler.ProfileDataGridTree.propertyComparator(i,e));this.refresh()}};Profiler.ProfileView._maxLinkLength=30;Profiler.ProfileView.ViewTypes={Flame:"Flame",Tree:"Tree",Heavy:"Heavy",Text:"Text"};Profiler.WritableProfileHeader=class extends Profiler.ProfileHeader{constructor(e,t,i){super(t,i||Common.UIString("Profile %d",t.nextProfileUid()));this._debuggerModel=e;this._tempFile=null}_onChunkTransferred(e){this.updateStatus(Common.UIString("Loading… %d%%",Number.bytesToString(this._jsonifiedProfile.length)))}_onError(e){this.updateStatus(Common.UIString(`File '%s' read error: %s`,e.fileName(),e.error().message))}async write(e){this._jsonifiedProfile+=e}close(){}dispose(){this.removeTempFile()}createSidebarTreeElement(e){return new Profiler.ProfileSidebarTreeElement(e,this,"profile-sidebar-tree-item")}canSaveToFile(){return!this.fromFile()&&this._protocolProfile}async saveToFile(){const e=new Bindings.FileOutputStream;this._fileName=this._fileName||`${this.profileType().typeName()}-${(new Date).toISO8601Compact()}${this.profileType().fileExtension()}`;const t=await e.open(this._fileName);if(!t||!this._tempFile)return;const i=await this._tempFile.read();if(i)await e.write(i);e.close()}async loadFromFile(e){this.updateStatus(Common.UIString("Loading…"),true);const t=new Bindings.ChunkedFileReader(e,1e7,this._onChunkTransferred.bind(this));this._jsonifiedProfile="";const i=await t.read(this);if(!i){this._onError(t);return new Error(Common.UIString("Failed to read file"))}this.updateStatus(Common.UIString("Parsing…"),true);let r=null;try{this._profile=JSON.parse(this._jsonifiedProfile);this.setProfile(this._profile);this.updateStatus(Common.UIString("Loaded"),false)}catch(e){r=e;this.profileType().removeProfile(this)}this._jsonifiedProfile=null;if(this.profileType().profileBeingRecorded()===this)this.profileType().setProfileBeingRecorded(null);return r}setProtocolProfile(e){this.setProfile(e);this._protocolProfile=e;this._tempFile=new Bindings.TempFile;this._tempFile.write([JSON.stringify(e)]);if(this.canSaveToFile())this.dispatchEventToListeners(Profiler.ProfileHeader.Events.ProfileReceived)}};Profiler.ProfileDataGridNode=class extends DataGrid.DataGridNode{constructor(e,t,i){super(null,i);this._searchMatchedSelfColumn=false;this._searchMatchedTotalColumn=false;this._searchMatchedFunctionColumn=false;this.profileNode=e;this.tree=t;this.childrenByCallUID=new Map;this.lastComparator=null;this.callUID=e.callUID;this.self=e.self;this.total=e.total;this.functionName=UI.beautifyFunctionName(e.functionName);this._deoptReason=e.deoptReason||"";this.url=e.url}static sort(e,t,i){for(let r=0;r<e.length;++r){const s=e[r];const o=s.length;for(let r=0;r<o;++r){const o=s[r];if(!i&&(!o.expanded||o.lastComparator===t)){if(o.children.length)o.shouldRefreshChildren=true;continue}o.lastComparator=t;const n=o.children;const a=n.length;if(a){n.sort(t);for(let e=0;e<a;++e)n[e].recalculateSiblings(e);e.push(n)}}}}static merge(e,t,i){e.self+=t.self;if(!i)e.total+=t.total;let r=e.children.slice();e.removeChildren();let s=r.length;for(let o=0;o<s;++o){if(!i||r[o]!==t)e.appendChild(r[o])}r=t.children.slice();s=r.length;for(let t=0;t<s;++t){const i=r[t];const s=e.childrenByCallUID.get(i.callUID);if(s)s.merge(i,false);else e.appendChild(i)}}static populate(e){if(e._populated)return;e._populated=true;e.populateChildren();const t=e.tree.lastComparator;if(t)e.sort(t,true)}createCell(e){let t;switch(e){case"self":t=this._createValueCell(this.self,this.selfPercent);t.classList.toggle("highlight",this._searchMatchedSelfColumn);break;case"total":t=this._createValueCell(this.total,this.totalPercent);t.classList.toggle("highlight",this._searchMatchedTotalColumn);break;case"function":t=this.createTD(e);t.classList.toggle("highlight",this._searchMatchedFunctionColumn);if(this._deoptReason){t.classList.add("not-optimized");const e=UI.Icon.create("smallicon-warning","profile-warn-marker");e.title=Common.UIString("Not optimized: %s",this._deoptReason);t.appendChild(e)}t.createTextChild(this.functionName);if(this.profileNode.scriptId==="0")break;const i=this.tree._formatter.linkifyNode(this);if(!i)break;i.style.maxWidth="75%";t.appendChild(i);break;default:t=super.createCell(e);break}return t}_createValueCell(e,t){const i=createElementWithClass("td","numeric-column");const r=i.createChild("div","profile-multiple-values");r.createChild("span").textContent=this.tree._formatter.formatValue(e,this);r.createChild("span","percent-column").textContent=this.tree._formatter.formatPercent(t,this);return i}sort(e,t){return Profiler.ProfileDataGridNode.sort([[this]],e,t)}insertChild(e,t){super.insertChild(e,t);this.childrenByCallUID.set(e.callUID,e)}removeChild(e){super.removeChild(e);this.childrenByCallUID.delete(e.callUID)}removeChildren(){super.removeChildren();this.childrenByCallUID.clear()}findChild(e){if(!e)return null;return this.childrenByCallUID.get(e.callUID)}get selfPercent(){return this.self/this.tree.total*100}get totalPercent(){return this.total/this.tree.total*100}populate(){Profiler.ProfileDataGridNode.populate(this)}populateChildren(){}save(){if(this._savedChildren)return;this._savedSelf=this.self;this._savedTotal=this.total;this._savedChildren=this.children.slice()}restore(){if(!this._savedChildren)return;this.self=this._savedSelf;this.total=this._savedTotal;this.removeChildren();const e=this._savedChildren;const t=e.length;for(let i=0;i<t;++i){e[i].restore();this.appendChild(e[i])}}merge(e,t){Profiler.ProfileDataGridNode.merge(this,e,t)}};Profiler.ProfileDataGridTree=class{constructor(e,t,i){this.tree=this;this.children=[];this._formatter=e;this._searchableView=t;this.total=i;this.lastComparator=null;this.childrenByCallUID=new Map;this.deepSearch=true}static propertyComparator(e,t){let i=Profiler.ProfileDataGridTree.propertyComparators[t?1:0][e];if(!i){if(t){i=function(t,i){if(t[e]<i[e])return-1;if(t[e]>i[e])return 1;return 0}}else{i=function(t,i){if(t[e]>i[e])return-1;if(t[e]<i[e])return 1;return 0}}Profiler.ProfileDataGridTree.propertyComparators[t?1:0][e]=i}return i}get expanded(){return true}appendChild(e){this.insertChild(e,this.children.length)}insertChild(e,t){this.children.splice(t,0,e);this.childrenByCallUID.set(e.callUID,e)}removeChildren(){this.children=[];this.childrenByCallUID.clear()}populateChildren(){}findChild(e){if(!e)return null;return this.childrenByCallUID.get(e.callUID)}sort(e,t){return Profiler.ProfileDataGridNode.sort([[this]],e,t)}save(){if(this._savedChildren)return;this._savedTotal=this.total;this._savedChildren=this.children.slice()}restore(){if(!this._savedChildren)return;this.children=this._savedChildren;this.total=this._savedTotal;const e=this.children;const t=e.length;for(let i=0;i<t;++i)e[i].restore();this._savedChildren=null}_matchFunction(e){const t=e.query.trim();if(!t.length)return null;const i=t.startsWith(">");const r=t.startsWith("<");let s=t.startsWith("=")||(i||r)&&t.indexOf("=")===1;const o=t.endsWith("%");const n=t.length>2&&t.endsWith("ms");const a=!n&&t.endsWith("s");let l=parseFloat(t);if(i||r||s){if(s&&(i||r))l=parseFloat(t.substring(2));else l=parseFloat(t.substring(1))}const d=a?l*1e3:l;if(!isNaN(l)&&!(i||r))s=true;const h=createPlainTextSearchRegex(t,"i");function c(e){e._searchMatchedSelfColumn=false;e._searchMatchedTotalColumn=false;e._searchMatchedFunctionColumn=false;if(o){if(r){if(e.selfPercent<l)e._searchMatchedSelfColumn=true;if(e.totalPercent<l)e._searchMatchedTotalColumn=true}else if(i){if(e.selfPercent>l)e._searchMatchedSelfColumn=true;if(e.totalPercent>l)e._searchMatchedTotalColumn=true}if(s){if(e.selfPercent===l)e._searchMatchedSelfColumn=true;if(e.totalPercent===l)e._searchMatchedTotalColumn=true}}else if(n||a){if(r){if(e.self<d)e._searchMatchedSelfColumn=true;if(e.total<d)e._searchMatchedTotalColumn=true}else if(i){if(e.self>d)e._searchMatchedSelfColumn=true;if(e.total>d)e._searchMatchedTotalColumn=true}if(s){if(e.self===d)e._searchMatchedSelfColumn=true;if(e.total===d)e._searchMatchedTotalColumn=true}}if(e.functionName.match(h)||e.url&&e.url.match(h))e._searchMatchedFunctionColumn=true;if(e._searchMatchedSelfColumn||e._searchMatchedTotalColumn||e._searchMatchedFunctionColumn){e.refresh();return true}return false}return c}performSearch(e,t,i){this.searchCanceled();const r=this._matchFunction(e);if(!r)return;this._searchResults=[];const s=this.deepSearch;for(let e=this.children[0];e;e=e.traverseNextNode(!s,null,!s)){if(r(e))this._searchResults.push({profileNode:e})}this._searchResultIndex=i?0:this._searchResults.length-1;this._searchableView.updateSearchMatchesCount(this._searchResults.length);this._searchableView.updateCurrentMatchIndex(this._searchResultIndex)}searchCanceled(){if(this._searchResults){for(let e=0;e<this._searchResults.length;++e){const t=this._searchResults[e].profileNode;t._searchMatchedSelfColumn=false;t._searchMatchedTotalColumn=false;t._searchMatchedFunctionColumn=false;t.refresh()}}this._searchResults=[];this._searchResultIndex=-1}jumpToNextSearchResult(){if(!this._searchResults||!this._searchResults.length)return;this._searchResultIndex=(this._searchResultIndex+1)%this._searchResults.length;this._jumpToSearchResult(this._searchResultIndex)}jumpToPreviousSearchResult(){if(!this._searchResults||!this._searchResults.length)return;this._searchResultIndex=(this._searchResultIndex-1+this._searchResults.length)%this._searchResults.length;this._jumpToSearchResult(this._searchResultIndex)}supportsCaseSensitiveSearch(){return true}supportsRegexSearch(){return false}_jumpToSearchResult(e){const t=this._searchResults[e];if(!t)return;const i=t.profileNode;i.revealAndSelect();this._searchableView.updateCurrentMatchIndex(e)}};Profiler.ProfileDataGridTree.propertyComparators=[{},{}];Profiler.ProfileDataGridNode.Formatter=function(){};Profiler.ProfileDataGridNode.Formatter.prototype={formatValue(e,t){},formatPercent(e,t){},linkifyNode(e){}};Profiler.BottomUpProfileDataGridNode=class extends Profiler.ProfileDataGridNode{constructor(e,t){super(e,t,!!e.parent&&!!e.parent.parent);this._remainingNodeInfos=[]}static _sharedPopulate(e){const t=e._remainingNodeInfos;const i=t.length;for(let r=0;r<i;++r){const i=t[r];const s=i.ancestor;const o=i.focusNode;let n=e.findChild(s);if(n){const e=i.totalAccountedFor;n.self+=o.self;if(!e)n.total+=o.total}else{n=new Profiler.BottomUpProfileDataGridNode(s,e.tree);if(s!==o){n.self=o.self;n.total=o.total}e.appendChild(n)}const a=s.parent;if(a&&a.parent){i.ancestor=a;n._remainingNodeInfos.push(i)}}delete e._remainingNodeInfos}_takePropertiesFromProfileDataGridNode(e){this.save();this.self=e.self;this.total=e.total}_keepOnlyChild(e){this.save();this.removeChildren();this.appendChild(e)}_exclude(e){if(this._remainingNodeInfos)this.populate();this.save();const t=this.children;let i=this.children.length;while(i--)t[i]._exclude(e);const r=this.childrenByCallUID.get(e);if(r)this.merge(r,true)}restore(){super.restore();if(!this.children.length)this.setHasChildren(this._willHaveChildren(this.profileNode))}merge(e,t){this.self-=e.self;super.merge(e,t)}populateChildren(){Profiler.BottomUpProfileDataGridNode._sharedPopulate(this)}_willHaveChildren(e){return!!(e.parent&&e.parent.parent)}};Profiler.BottomUpProfileDataGridTree=class extends Profiler.ProfileDataGridTree{constructor(e,t,i,r){super(e,t,r);this.deepSearch=false;let s=0;const o=[[],[i]];const n=new Map;this._remainingNodeInfos=[];for(let e=0;e<o.length;++e){const t=o[e];const i=o[++e];const r=i.length;for(let e=0;e<r;++e){const r=i[e];if(!r.UID)r.UID=++s;if(r.parent){let e=n.get(r.callUID);let i=false;if(!e){e=new Set;n.set(r.callUID,e)}else{const r=t.length;for(let s=0;s<r;++s){if(e.has(t[s].UID)){i=true;break}}}e.add(r.UID);this._remainingNodeInfos.push({ancestor:r,focusNode:r,totalAccountedFor:i})}const a=r.children;if(a.length){o.push(t.concat([r]));o.push(a)}}}Profiler.ProfileDataGridNode.populate(this);return this}focus(e){if(!e)return;this.save();let t=e;let i=e;while(t.parent&&t instanceof Profiler.ProfileDataGridNode){t._takePropertiesFromProfileDataGridNode(e);i=t;t=t.parent;if(t instanceof Profiler.ProfileDataGridNode)t._keepOnlyChild(i)}this.children=[i];this.total=e.total}exclude(e){if(!e)return;this.save();const t=e.callUID;const i=this.childrenByCallUID.get(t);if(i)this.children.remove(i);const r=this.children;const s=r.length;for(let e=0;e<s;++e)r[e]._exclude(t);if(this.lastComparator)this.sort(this.lastComparator,true)}populateChildren(){Profiler.BottomUpProfileDataGridNode._sharedPopulate(this)}};Profiler.TopDownProfileDataGridNode=class extends Profiler.ProfileDataGridNode{constructor(e,t){const i=!!(e.children&&e.children.length);super(e,t,i);this._remainingChildren=e.children}static _sharedPopulate(e){const t=e._remainingChildren;const i=t.length;for(let r=0;r<i;++r){e.appendChild(new Profiler.TopDownProfileDataGridNode(t[r],e.tree))}e._remainingChildren=null}static _excludeRecursively(e,t){if(e._remainingChildren)e.populate();e.save();const i=e.children;let r=e.children.length;while(r--)Profiler.TopDownProfileDataGridNode._excludeRecursively(i[r],t);const s=e.childrenByCallUID.get(t);if(s)Profiler.ProfileDataGridNode.merge(e,s,true)}populateChildren(){Profiler.TopDownProfileDataGridNode._sharedPopulate(this)}};Profiler.TopDownProfileDataGridTree=class extends Profiler.ProfileDataGridTree{constructor(e,t,i,r){super(e,t,r);this._remainingChildren=i.children;Profiler.ProfileDataGridNode.populate(this)}focus(e){if(!e)return;this.save();e.savePosition();this.children=[e];this.total=e.total}exclude(e){if(!e)return;this.save();Profiler.TopDownProfileDataGridNode._excludeRecursively(this,e.callUID);if(this.lastComparator)this.sort(this.lastComparator,true)}restore(){if(!this._savedChildren)return;this.children[0].restorePosition();super.restore()}populateChildren(){Profiler.TopDownProfileDataGridNode._sharedPopulate(this)}};Profiler.ProfileFlameChartDataProvider=class{constructor(){PerfUI.FlameChartDataProvider.call(this);this._colorGenerator=Profiler.ProfileFlameChartDataProvider.colorGenerator()}static colorGenerator(){if(!Profiler.ProfileFlameChartDataProvider._colorGenerator){const e=new Common.Color.Generator({min:30,max:330},{min:50,max:80,count:5},{min:80,max:90,count:3});e.setColorForID("(idle)","hsl(0, 0%, 94%)");e.setColorForID("(program)","hsl(0, 0%, 80%)");e.setColorForID("(garbage collector)","hsl(0, 0%, 80%)");Profiler.ProfileFlameChartDataProvider._colorGenerator=e}return Profiler.ProfileFlameChartDataProvider._colorGenerator}minimumBoundary(){return this._cpuProfile.profileStartTime}totalTime(){return this._cpuProfile.profileHead.total}formatValue(e,t){return Number.preciseMillisToString(e,t)}maxStackDepth(){return this._maxStackDepth}timelineData(){return this._timelineData||this._calculateTimelineData()}_calculateTimelineData(){throw"Not implemented."}prepareHighlightedEntryInfo(e){throw"Not implemented."}canJumpToEntry(e){return this._entryNodes[e].scriptId!=="0"}entryTitle(e){const t=this._entryNodes[e];return UI.beautifyFunctionName(t.functionName)}entryFont(e){if(!this._font){this._font="11px "+Host.fontFamily();this._boldFont="bold "+this._font}const t=this._entryNodes[e];return t.deoptReason?this._boldFont:this._font}entryColor(e){const t=this._entryNodes[e];return this._colorGenerator.colorForID(t.url||(t.scriptId!=="0"?t.scriptId:t.functionName))}decorateEntry(e,t,i,r,s,o,n){return false}forceDecoration(e){return false}textColor(e){return"#333"}};Profiler.CPUProfileFlameChart=class extends UI.VBox{constructor(e,t){super();this.element.id="cpu-flame-chart";this._searchableView=e;this._overviewPane=new Profiler.CPUProfileFlameChart.OverviewPane(t);this._overviewPane.show(this.element);this._mainPane=new PerfUI.FlameChart(t,this._overviewPane);this._mainPane.setBarHeight(15);this._mainPane.setTextBaseline(4);this._mainPane.setTextPadding(2);this._mainPane.show(this.element);this._mainPane.addEventListener(PerfUI.FlameChart.Events.EntrySelected,this._onEntrySelected,this);this._overviewPane.addEventListener(PerfUI.OverviewGrid.Events.WindowChanged,this._onWindowChanged,this);this._dataProvider=t;this._searchResults=[]}focus(){this._mainPane.focus()}_onWindowChanged(e){const t=e.data.windowTimeLeft;const i=e.data.windowTimeRight;this._mainPane.setWindowTimes(t,i,true)}selectRange(e,t){this._overviewPane._selectRange(e,t)}_onEntrySelected(e){this.dispatchEventToListeners(PerfUI.FlameChart.Events.EntrySelected,e.data)}update(){this._overviewPane.update();this._mainPane.update()}performSearch(e,t,i){const r=createPlainTextSearchRegex(e.query,e.caseSensitive?"":"i");const s=this._searchResultIndex!==-1?this._searchResults[this._searchResultIndex]:-1;this._searchResults=[];const o=this._dataProvider._entryNodes.length;for(let e=0;e<o;++e){if(this._dataProvider.entryTitle(e).match(r))this._searchResults.push(e)}if(this._searchResults.length){this._searchResultIndex=this._searchResults.indexOf(s);if(this._searchResultIndex===-1)this._searchResultIndex=i?this._searchResults.length-1:0;this._mainPane.setSelectedEntry(this._searchResults[this._searchResultIndex])}else{this.searchCanceled()}this._searchableView.updateSearchMatchesCount(this._searchResults.length);this._searchableView.updateCurrentMatchIndex(this._searchResultIndex)}searchCanceled(){this._mainPane.setSelectedEntry(-1);this._searchResults=[];this._searchResultIndex=-1}jumpToNextSearchResult(){this._searchResultIndex=(this._searchResultIndex+1)%this._searchResults.length;this._mainPane.setSelectedEntry(this._searchResults[this._searchResultIndex]);this._searchableView.updateCurrentMatchIndex(this._searchResultIndex)}jumpToPreviousSearchResult(){this._searchResultIndex=(this._searchResultIndex-1+this._searchResults.length)%this._searchResults.length;this._mainPane.setSelectedEntry(this._searchResults[this._searchResultIndex]);this._searchableView.updateCurrentMatchIndex(this._searchResultIndex)}supportsCaseSensitiveSearch(){return true}supportsRegexSearch(){return false}};Profiler.CPUProfileFlameChart.OverviewCalculator=class{constructor(e){this._dataProvider=e}_updateBoundaries(e){this._minimumBoundaries=e._dataProvider.minimumBoundary();const t=e._dataProvider.totalTime();this._maximumBoundaries=this._minimumBoundaries+t;this._xScaleFactor=e._overviewContainer.clientWidth/t}computePosition(e){return(e-this._minimumBoundaries)*this._xScaleFactor}formatValue(e,t){return this._dataProvider.formatValue(e-this._minimumBoundaries,t)}maximumBoundary(){return this._maximumBoundaries}minimumBoundary(){return this._minimumBoundaries}zeroTime(){return this._minimumBoundaries}boundarySpan(){return this._maximumBoundaries-this._minimumBoundaries}};Profiler.CPUProfileFlameChart.OverviewPane=class extends UI.VBox{constructor(e){super();this.element.classList.add("cpu-profile-flame-chart-overview-pane");this._overviewContainer=this.element.createChild("div","cpu-profile-flame-chart-overview-container");this._overviewGrid=new PerfUI.OverviewGrid("cpu-profile-flame-chart");this._overviewGrid.element.classList.add("fill");this._overviewCanvas=this._overviewContainer.createChild("canvas","cpu-profile-flame-chart-overview-canvas");this._overviewContainer.appendChild(this._overviewGrid.element);this._overviewCalculator=new Profiler.CPUProfileFlameChart.OverviewCalculator(e);this._dataProvider=e;this._overviewGrid.addEventListener(PerfUI.OverviewGrid.Events.WindowChanged,this._onWindowChanged,this)}windowChanged(e,t){this._selectRange(e,t)}updateRangeSelection(e,t){}updateSelectedGroup(e,t){}_selectRange(e,t){const i=this._dataProvider.minimumBoundary();const r=this._dataProvider.totalTime();this._overviewGrid.setWindow((e-i)/r,(t-i)/r)}_onWindowChanged(e){const t=this._dataProvider.minimumBoundary();const i=this._dataProvider.totalTime();const r={windowTimeLeft:t+this._overviewGrid.windowLeft()*i,windowTimeRight:t+this._overviewGrid.windowRight()*i};this.dispatchEventToListeners(PerfUI.OverviewGrid.Events.WindowChanged,r)}_timelineData(){return this._dataProvider.timelineData()}onResize(){this._scheduleUpdate()}_scheduleUpdate(){if(this._updateTimerId)return;this._updateTimerId=this.element.window().requestAnimationFrame(this.update.bind(this))}update(){this._updateTimerId=0;const e=this._timelineData();if(!e)return;this._resetCanvas(this._overviewContainer.clientWidth,this._overviewContainer.clientHeight-PerfUI.FlameChart.HeaderHeight);this._overviewCalculator._updateBoundaries(this);this._overviewGrid.updateDividers(this._overviewCalculator);this._drawOverviewCanvas()}_drawOverviewCanvas(){const e=this._overviewCanvas.width;const t=this._overviewCanvas.height;const i=this._calculateDrawData(e);const r=this._overviewCanvas.getContext("2d");const s=window.devicePixelRatio;const o=s;const n=1;const a=t/(this._dataProvider.maxStackDepth()*1.1);r.lineWidth=n;r.translate(.5,.5);r.strokeStyle="rgba(20,0,0,0.4)";r.fillStyle="rgba(214,225,254,0.8)";r.moveTo(-n,t+n);r.lineTo(-n,Math.round(t-i[0]*a-o));let l;for(let s=0;s<e;++s){l=Math.round(t-i[s]*a-o);r.lineTo(s,l)}r.lineTo(e+n,l);r.lineTo(e+n,t+n);r.fill();r.stroke();r.closePath()}_calculateDrawData(e){const t=this._dataProvider;const i=this._timelineData();const r=i.entryStartTimes;const s=i.entryTotalTimes;const o=i.entryLevels;const n=r.length;const a=this._dataProvider.minimumBoundary();const l=new Uint8Array(e);const d=e/t.totalTime();for(let e=0;e<n;++e){const t=Math.floor((r[e]-a)*d);const i=Math.floor((r[e]-a+s[e])*d);for(let r=t;r<=i;++r)l[r]=Math.max(l[r],o[e]+1)}return l}_resetCanvas(e,t){const i=window.devicePixelRatio;this._overviewCanvas.width=e*i;this._overviewCanvas.height=t*i;this._overviewCanvas.style.width=e+"px";this._overviewCanvas.style.height=t+"px"}};Profiler.CPUProfileView=class extends Profiler.ProfileView{constructor(e){super();this._profileHeader=e;this.initialize(new Profiler.CPUProfileView.NodeFormatter(this));const t=e.profileModel();this.adjustedTotal=t.profileHead.total;this.adjustedTotal-=t.idleNode?t.idleNode.total:0;this.setProfile(t)}wasShown(){super.wasShown();const e=self.runtime.sharedInstance(PerfUI.LineLevelProfile.Performance);e.reset();e.appendCPUProfile(this._profileHeader.profileModel())}columnHeader(e){switch(e){case"self":return Common.UIString("Self Time");case"total":return Common.UIString("Total Time")}return""}createFlameChartDataProvider(){return new Profiler.CPUFlameChartDataProvider(this._profileHeader.profileModel(),this._profileHeader._cpuProfilerModel)}};Profiler.CPUProfileType=class extends Profiler.ProfileType{constructor(){super(Profiler.CPUProfileType.TypeId,Common.UIString("Record JavaScript CPU Profile"));this._recording=false;Profiler.CPUProfileType.instance=this;SDK.targetManager.addModelListener(SDK.CPUProfilerModel,SDK.CPUProfilerModel.Events.ConsoleProfileFinished,this._consoleProfileFinished,this)}profileBeingRecorded(){return super.profileBeingRecorded()}typeName(){return"CPU"}fileExtension(){return".cpuprofile"}get buttonTooltip(){return this._recording?Common.UIString("Stop CPU profiling"):Common.UIString("Start CPU profiling")}buttonClicked(){if(this._recording){this._stopRecordingProfile();return false}else{this._startRecordingProfile();return true}}get treeItemTitle(){return Common.UIString("CPU PROFILES")}get description(){return Common.UIString("CPU profiles show where the execution time is spent in your page's JavaScript functions.")}_consoleProfileFinished(e){const t=e.data;const i=t.cpuProfile;const r=new Profiler.CPUProfileHeader(t.cpuProfilerModel,this,t.title);r.setProtocolProfile(i);this.addProfile(r)}_startRecordingProfile(){const e=UI.context.flavor(SDK.CPUProfilerModel);if(this.profileBeingRecorded()||!e)return;const t=new Profiler.CPUProfileHeader(e,this);this.setProfileBeingRecorded(t);SDK.targetManager.suspendAllTargets();this.addProfile(t);t.updateStatus(Common.UIString("Recording…"));this._recording=true;e.startRecording();Host.userMetrics.actionTaken(Host.UserMetrics.Action.ProfilesCPUProfileTaken)}async _stopRecordingProfile(){this._recording=false;if(!this.profileBeingRecorded()||!this.profileBeingRecorded()._cpuProfilerModel)return;const e=await this.profileBeingRecorded()._cpuProfilerModel.stopRecording();const t=this.profileBeingRecorded();if(t){console.assert(e);t.setProtocolProfile(e);t.updateStatus("");this.setProfileBeingRecorded(null)}await SDK.targetManager.resumeAllTargets();this.dispatchEventToListeners(Profiler.ProfileType.Events.ProfileComplete,t)}createProfileLoadedFromFile(e){return new Profiler.CPUProfileHeader(null,this,e)}profileBeingRecordedRemoved(){this._stopRecordingProfile()}};Profiler.CPUProfileType.TypeId="CPU";Profiler.CPUProfileHeader=class extends Profiler.WritableProfileHeader{constructor(e,t,i){super(e&&e.debuggerModel(),t,i);this._cpuProfilerModel=e}createView(){return new Profiler.CPUProfileView(this)}protocolProfile(){return this._protocolProfile}profileModel(){return this._profileModel}setProfile(e){const t=this._cpuProfilerModel&&this._cpuProfilerModel.target()||null;this._profileModel=new SDK.CPUProfileDataModel(e,t)}};Profiler.CPUProfileView.NodeFormatter=class{constructor(e){this._profileView=e}formatValue(e){return Common.UIString("%.1f ms",e)}formatPercent(e,t){return t.profileNode===this._profileView.profile().idleNode?"":Common.UIString("%.2f %%",e)}linkifyNode(e){const t=this._profileView._profileHeader._cpuProfilerModel;return this._profileView.linkifier().maybeLinkifyConsoleCallFrame(t?t.target():null,e.profileNode.callFrame,"profile-node-file")}};Profiler.CPUFlameChartDataProvider=class extends Profiler.ProfileFlameChartDataProvider{constructor(e,t){super();this._cpuProfile=e;this._cpuProfilerModel=t}_calculateTimelineData(){const e=[];const t=[];let i=5;function r(){t.push(e.length);e.push(null)}function s(r,s,o,n,a){const l=t.pop();e[l]=new Profiler.CPUFlameChartDataProvider.ChartEntry(r,n,o,a,s);i=Math.max(i,r)}this._cpuProfile.forEachFrame(r,s);const o=new Array(e.length);const n=new Uint16Array(e.length);const a=new Float32Array(e.length);const l=new Float32Array(e.length);const d=new Float64Array(e.length);for(let t=0;t<e.length;++t){const i=e[t];o[t]=i.node;n[t]=i.depth;a[t]=i.duration;d[t]=i.startTime;l[t]=i.selfTime}this._maxStackDepth=i+1;this._timelineData=new PerfUI.FlameChart.TimelineData(n,a,d,null);this._entryNodes=o;this._entrySelfTimes=l;return this._timelineData}prepareHighlightedEntryInfo(e){const t=this._timelineData;const i=this._entryNodes[e];if(!i)return null;const r=[];function s(e,t){r.push({title:e,value:t})}function o(e){if(e===0)return"0";if(e<1e3)return Common.UIString("%.1f ms",e);return Number.secondsToString(e/1e3,true)}const n=UI.beautifyFunctionName(i.functionName);s(Common.UIString("Name"),n);const a=o(this._entrySelfTimes[e]);const l=o(t.entryTotalTimes[e]);s(Common.UIString("Self time"),a);s(Common.UIString("Total time"),l);const d=new Components.Linkifier;const h=d.maybeLinkifyConsoleCallFrame(this._cpuProfilerModel&&this._cpuProfilerModel.target(),i.callFrame);if(h)s(Common.UIString("URL"),h.textContent);d.dispose();s(Common.UIString("Aggregated self time"),Number.secondsToString(i.self/1e3,true));s(Common.UIString("Aggregated total time"),Number.secondsToString(i.total/1e3,true));if(i.deoptReason)s(Common.UIString("Not optimized"),i.deoptReason);return Profiler.ProfileView.buildPopoverTable(r)}};Profiler.CPUFlameChartDataProvider.ChartEntry=class{constructor(e,t,i,r,s){this.depth=e;this.duration=t;this.startTime=i;this.selfTime=r;this.node=s}};Profiler.HeapProfileView=class extends Profiler.ProfileView{constructor(e){super();this._profileHeader=e;this._profileType=e.profileType();const t=[Profiler.ProfileView.ViewTypes.Flame,Profiler.ProfileView.ViewTypes.Heavy,Profiler.ProfileView.ViewTypes.Tree];const i=this._profileType.id===Profiler.SamplingNativeHeapProfileType.TypeId||this._profileType.id===Profiler.SamplingNativeHeapSnapshotType.TypeId;if(i)t.push(Profiler.ProfileView.ViewTypes.Text);this.initialize(new Profiler.HeapProfileView.NodeFormatter(this),t);const r=new Profiler.SamplingHeapProfileModel(e._profile||e.protocolProfile());this.adjustedTotal=r.total;this.setProfile(r);this._selectedSizeText=new UI.ToolbarText;if(Runtime.experiments.isEnabled("samplingHeapProfilerTimeline")){this._timelineOverview=new Profiler.HeapTimelineOverview;this._timelineOverview.addEventListener(Profiler.HeapTimelineOverview.IdsRangeChanged,this._onIdsRangeChanged.bind(this));this._timelineOverview.show(this.element,this.element.firstChild);this._timelineOverview.start();this._profileType.addEventListener(Profiler.SamplingHeapProfileType.Events.StatsUpdate,this._onStatsUpdate,this);this._profileType.once(Profiler.ProfileType.Events.ProfileComplete).then(()=>{this._profileType.removeEventListener(Profiler.SamplingHeapProfileType.Events.StatsUpdate,this._onStatsUpdate,this);this._timelineOverview.stop();this._timelineOverview.updateGrid()})}}syncToolbarItems(){return[...super.syncToolbarItems(),this._selectedSizeText]}_onIdsRangeChanged(e){const t=e.data.minId;const i=e.data.maxId;this._selectedSizeText.setText(ls`Selected size: ${Number.bytesToString(e.data.size)}`);this._setSelectionRange(t,i)}_setSelectionRange(e,t){const i=new Profiler.SamplingHeapProfileModel(this._profileHeader._profile||this._profileHeader.protocolProfile(),e,t);this.adjustedTotal=i.total;this.setProfile(i)}_onStatsUpdate(e){const t=e.data;if(!this._totalTime){this._timestamps=[];this._sizes=[];this._max=[];this._ordinals=[];this._totalTime=3e4;this._lastOrdinal=0}this._sizes.fill(0);this._sizes.push(0);this._timestamps.push(Date.now());this._ordinals.push(this._lastOrdinal+1);this._lastOrdinal=t.samples.reduce((e,t)=>Math.max(e,t.ordinal),this._lastOrdinal);for(const e of t.samples){const t=this._ordinals.upperBound(e.ordinal)-1;this._sizes[t]+=e.size}this._max.push(this._sizes.peekLast());if(this._timestamps.peekLast()-this._timestamps[0]>this._totalTime)this._totalTime*=2;const i={sizes:this._sizes,max:this._max,ids:this._ordinals,timestamps:this._timestamps,totalTime:this._totalTime};this._timelineOverview.setSamples(i)}columnHeader(e){switch(e){case"self":return Common.UIString("Self Size (bytes)");case"total":return Common.UIString("Total Size (bytes)")}return""}createFlameChartDataProvider(){return new Profiler.HeapFlameChartDataProvider(this.profile(),this._profileHeader.heapProfilerModel())}populateTextView(e){const t="+!:|";let i=`Sampling memory profile.\n\nDate/Time:       ${new Date}\n`+`Report Version:  7\n`+`App Version:     ${/Chrom\S*/.exec(navigator.appVersion)[0]||"Unknown"}\n`+`Node Weight:     1 KiB\n`+`Total Size:      ${Math.round(this.profile().root.total/1024)} KiB\n`+`----\n\nCall graph:\n`;const r=this.profile().root.children.sort((e,t)=>t.total-e.total);const s=this.profile().modules.map(e=>Object.assign({address:BigInt(e.baseAddress),endAddress:BigInt(e.baseAddress)+BigInt(e.size)},e));s.sort((e,t)=>e.address>t.address?1:e.address<t.address?-1:0);for(const e of r)o("    ",e!==r.peekLast(),e);i+="\nBinary Images:\n";for(const e of s){const t=/[^\/\\]*$/.exec(e.name)[0];const r="1.0";const s=e.uuid.includes("-")?e.uuid:e.uuid.replace(/(.{8})(.{4})(.{4})(.{4})(.{12}).*/,"$1-$2-$3-$4-$5");i+=`${("0x"+e.address.toString(16)).padStart(18)} - `;i+=`${("0x"+(e.endAddress-BigInt(1)).toString(16)).padStart(18)}`;i+=`  ${t} (${r}) <${s}> ${e.name}\n`}e.contentElement.createChild("pre","profile-text-view monospace").textContent=i;function o(e,r,n){const a=/0x[0-9a-f]*|[0-9]*/.exec(n.functionName)[0]||"";let l;if(a){const e=BigInt(a);const t=s.upperBound(e,(e,t)=>e-t.address);if(t>0&&e<s[t-1].endAddress)l=s[t-1]}const d=(a?n.functionName.substr(a.length+1):n.functionName)||"???";i+=`${e}${Math.round(n.total/1024)}  ${d}  `;if(l){const e=/[^\/\\]*$/.exec(l.name);if(e)i+=`(in ${e})  `;const t=BigInt(a)-l.address;i+=`load address ${l.baseAddress} + 0x${t.toString(16)}  `}if(a)i+=`[${a}]`;i+="\n";const h=r?t[e.length/2%t.length]:" ";const c=e+h+" ";const p=n.children.sort((e,t)=>t.total-e.total);for(const e of p)o(c,e!==p.peekLast(),e)}}};Profiler.SamplingHeapProfileTypeBase=class extends Profiler.ProfileType{constructor(e,t){super(e,t);this._recording=false}profileBeingRecorded(){return super.profileBeingRecorded()}typeName(){return"Heap"}fileExtension(){return".heapprofile"}get buttonTooltip(){return this._recording?ls`Stop heap profiling`:ls`Start heap profiling`}buttonClicked(){if(this._recording)this._stopRecordingProfile();else this._startRecordingProfile();return this._recording}_startRecordingProfile(){const e=UI.context.flavor(SDK.HeapProfilerModel);if(this.profileBeingRecorded()||!e)return;const t=new Profiler.SamplingHeapProfileHeader(e,this);this.setProfileBeingRecorded(t);this.addProfile(t);t.updateStatus(ls`Recording\u2026`);const i=UI.Icon.create("smallicon-warning");i.title=ls`Heap profiler is recording`;UI.inspectorView.setPanelIcon("heap_profiler",i);this._recording=true;this._startSampling()}async _stopRecordingProfile(){this._recording=false;if(!this.profileBeingRecorded()||!this.profileBeingRecorded().heapProfilerModel())return;this.profileBeingRecorded().updateStatus(ls`Stopping\u2026`);const e=await this._stopSampling();const t=this.profileBeingRecorded();if(t){console.assert(e);t.setProtocolProfile(e);t.updateStatus("");this.setProfileBeingRecorded(null)}UI.inspectorView.setPanelIcon("heap_profiler",null);this.dispatchEventToListeners(Profiler.ProfileType.Events.ProfileComplete,t)}createProfileLoadedFromFile(e){return new Profiler.SamplingHeapProfileHeader(null,this,e)}profileBeingRecordedRemoved(){this._stopRecordingProfile()}_startSampling(){throw"Not implemented"}_stopSampling(){throw"Not implemented"}};Profiler.SamplingHeapProfileType=class extends Profiler.SamplingHeapProfileTypeBase{constructor(){super(Profiler.SamplingHeapProfileType.TypeId,ls`Allocation sampling`);Profiler.SamplingHeapProfileType.instance=this;this._updateTimer=null;this._updateIntervalMs=200}get treeItemTitle(){return ls`SAMPLING PROFILES`}get description(){return ls`Record memory allocations using sampling method.
              This profile type has minimal performance overhead and can be used for long running operations.
              It provides good approximation of allocations broken down by JavaScript execution stack.`}hasTemporaryView(){return Runtime.experiments.isEnabled("samplingHeapProfilerTimeline")}_startSampling(){this.profileBeingRecorded().heapProfilerModel().startSampling();if(Runtime.experiments.isEnabled("samplingHeapProfilerTimeline"))this._updateTimer=setTimeout(this._updateStats.bind(this),this._updateIntervalMs)}_stopSampling(){clearTimeout(this._updateTimer);this._updateTimer=null;this.dispatchEventToListeners(Profiler.SamplingHeapProfileType.Events.RecordingStopped);return this.profileBeingRecorded().heapProfilerModel().stopSampling()}async _updateStats(){const e=await this.profileBeingRecorded().heapProfilerModel().getSamplingProfile();if(!this._updateTimer)return;this.dispatchEventToListeners(Profiler.SamplingHeapProfileType.Events.StatsUpdate,e);this._updateTimer=setTimeout(this._updateStats.bind(this),this._updateIntervalMs)}};Profiler.SamplingHeapProfileType.TypeId="SamplingHeap";Profiler.SamplingHeapProfileType.Events={RecordingStopped:Symbol("RecordingStopped"),StatsUpdate:Symbol("StatsUpdate")};Profiler.SamplingNativeHeapProfileType=class extends Profiler.SamplingHeapProfileTypeBase{constructor(){super(Profiler.SamplingNativeHeapProfileType.TypeId,ls`Native memory allocation sampling`);Profiler.SamplingNativeHeapProfileType.instance=this}get treeItemTitle(){return ls`NATIVE SAMPLING PROFILES`}get description(){return ls`Allocation profiles show sampled native memory allocations from the renderer process.`}_startSampling(){this.profileBeingRecorded().heapProfilerModel().startNativeSampling()}_stopSampling(){return this.profileBeingRecorded().heapProfilerModel().stopNativeSampling()}};Profiler.SamplingNativeHeapProfileType.TypeId="SamplingNativeHeapRecording";Profiler.SamplingNativeHeapSnapshotType=class extends Profiler.SamplingHeapProfileTypeBase{constructor(e){super(Profiler.SamplingNativeHeapSnapshotType.TypeId,ls`Native memory allocation snapshot (${e})`)}isInstantProfile(){return true}get treeItemTitle(){return ls`NATIVE SNAPSHOTS`}get description(){return ls`Native memory snapshots show sampled native allocations in the renderer process since start up.
              Chrome has to be started with --memlog=all flag. Check flags at chrome://flags`}buttonClicked(){this._takeSnapshot();return false}async _takeSnapshot(){if(this.profileBeingRecorded())return;const e=UI.context.flavor(SDK.HeapProfilerModel);if(!e)return;const t=new Profiler.SamplingHeapProfileHeader(e,this,ls`Snapshot ${this.nextProfileUid()}`);this.setProfileBeingRecorded(t);this.addProfile(t);t.updateStatus(ls`Snapshotting\u2026`);const i=await this._takeNativeSnapshot(e);const r=this.profileBeingRecorded();if(r){console.assert(i);r.setProtocolProfile(i);r.updateStatus("");this.setProfileBeingRecorded(null)}this.dispatchEventToListeners(Profiler.ProfileType.Events.ProfileComplete,r)}_takeNativeSnapshot(e){throw"Not implemented"}};Profiler.SamplingNativeHeapSnapshotType.TypeId="SamplingNativeHeapSnapshot";Profiler.SamplingNativeHeapSnapshotBrowserType=class extends Profiler.SamplingNativeHeapSnapshotType{constructor(){super(ls`Browser`);Profiler.SamplingNativeHeapSnapshotBrowserType.instance=this}async _takeNativeSnapshot(e){return await e.takeNativeBrowserSnapshot()}};Profiler.SamplingNativeHeapSnapshotRendererType=class extends Profiler.SamplingNativeHeapSnapshotType{constructor(){super(ls`Renderer`);Profiler.SamplingNativeHeapSnapshotRendererType.instance=this}async _takeNativeSnapshot(e){return await e.takeNativeSnapshot()}};Profiler.SamplingHeapProfileHeader=class extends Profiler.WritableProfileHeader{constructor(e,t,i){super(e&&e.debuggerModel(),t,i||Common.UIString("Profile %d",t.nextProfileUid()));this._heapProfilerModel=e;this._protocolProfile={head:{callFrame:{},children:[]}}}createView(){return new Profiler.HeapProfileView(this)}protocolProfile(){return this._protocolProfile}heapProfilerModel(){return this._heapProfilerModel}};Profiler.SamplingHeapProfileNode=class extends SDK.ProfileNode{constructor(e){const t=e.callFrame||{functionName:e["functionName"],scriptId:e["scriptId"],url:e["url"],lineNumber:e["lineNumber"]-1,columnNumber:e["columnNumber"]-1};super(t);this.self=e.selfSize}};Profiler.SamplingHeapProfileModel=class extends SDK.ProfileTreeModel{constructor(e,t,i){super();this.modules=e.modules||[];let r=null;if(t||i){r=new Map;t=t||0;i=i||Infinity;for(const s of e.samples){if(s.ordinal<t||s.ordinal>i)continue;const e=r.get(s.nodeId)||0;r.set(s.nodeId,e+s.size)}}this.initialize(s(e.head));function s(e){const t=new Profiler.SamplingHeapProfileNode(e);const i=[e];const s=[t];while(i.length){const e=i.pop();const t=s.pop();t.children=e.children.map(e=>{const t=new Profiler.SamplingHeapProfileNode(e);if(r)t.self=r.get(e.id)||0;return t});i.pushAll(e.children);s.pushAll(t.children)}o(t);return t}function o(e){e.children=e.children.filter(o);return!!(e.children.length||e.self)}}};Profiler.HeapProfileView.NodeFormatter=class{constructor(e){this._profileView=e}formatValue(e){return Number.withThousandsSeparator(e)}formatPercent(e,t){return Common.UIString("%.2f %%",e)}linkifyNode(e){const t=this._profileView._profileHeader.heapProfilerModel();return this._profileView.linkifier().maybeLinkifyConsoleCallFrame(t?t.target():null,e.profileNode.callFrame,"profile-node-file")}};Profiler.HeapFlameChartDataProvider=class extends Profiler.ProfileFlameChartDataProvider{constructor(e,t){super();this._profile=e;this._heapProfilerModel=t}minimumBoundary(){return 0}totalTime(){return this._profile.root.total}formatValue(e,t){return Common.UIString("%s KB",Number.withThousandsSeparator(e/1e3))}_calculateTimelineData(){function e(t){return t.children.reduce((t,i)=>t+e(i),1)}const t=e(this._profile.root);const i=new Array(t);const r=new Uint16Array(t);const s=new Float32Array(t);const o=new Float64Array(t);let n=0;let a=0;let l=0;let d=0;function h(e){const t=l;i[d]=e;r[d]=n;s[d]=e.total;o[d]=l;++d;++n;e.children.forEach(h);--n;a=Math.max(a,n);l=t+e.total}h(this._profile.root);this._maxStackDepth=a+1;this._entryNodes=i;this._timelineData=new PerfUI.FlameChart.TimelineData(r,s,o,null);return this._timelineData}prepareHighlightedEntryInfo(e){const t=this._entryNodes[e];if(!t)return null;const i=[];function r(e,t){i.push({title:e,value:t})}r(Common.UIString("Name"),UI.beautifyFunctionName(t.functionName));r(Common.UIString("Self size"),Number.bytesToString(t.self));r(Common.UIString("Total size"),Number.bytesToString(t.total));const s=new Components.Linkifier;const o=s.maybeLinkifyConsoleCallFrame(this._heapProfilerModel?this._heapProfilerModel.target():null,t.callFrame);if(o)r(Common.UIString("URL"),o.textContent);s.dispose();return Profiler.ProfileView.buildPopoverTable(i)}};Profiler.HeapProfilerPanel=class extends Profiler.ProfilesPanel{constructor(){const e=Profiler.ProfileTypeRegistry.instance;const t=[e.heapSnapshotProfileType,e.trackingHeapSnapshotProfileType,e.samplingHeapProfileType];if(Runtime.experiments.isEnabled("nativeHeapProfiler")){t.push(e.samplingNativeHeapProfileType);t.push(e.samplingNativeHeapSnapshotRendererType);t.push(e.samplingNativeHeapSnapshotBrowserType)}super("heap_profiler",t,"profiler.heap-toggle-recording")}appendApplicableItems(e,t,i){if(!(i instanceof SDK.RemoteObject))return;if(!this.isShowing())return;const r=i;if(!r.objectId)return;const s=r.objectId;const o=Profiler.ProfileTypeRegistry.instance.heapSnapshotProfileType.getProfiles();if(!o.length)return;const n=r.runtimeModel().heapProfilerModel();if(!n)return;function a(e){n.snapshotObjectIdForObjectId(s).then(t=>{if(this.isShowing()&&t)this.showObject(t,e)})}t.revealSection().appendItem(Common.UIString("Reveal in Summary view"),a.bind(this,"Summary"))}handleAction(e,t){const i=UI.context.flavor(Profiler.HeapProfilerPanel);console.assert(i&&i instanceof Profiler.HeapProfilerPanel);i.toggleRecord();return true}wasShown(){UI.context.setFlavor(Profiler.HeapProfilerPanel,this)}willHide(){UI.context.setFlavor(Profiler.HeapProfilerPanel,null)}showObject(e,t){const i=Profiler.ProfileTypeRegistry.instance;const r=i.heapSnapshotProfileType.getProfiles();for(let i=0;i<r.length;i++){const s=r[i];if(s.maxJSObjectId>=e){this.showProfile(s);const i=this.viewForProfile(s);i.selectLiveObject(t,e);break}}}};Profiler.HeapSnapshotWorkerProxy=class extends Common.Object{constructor(e){super();this._eventHandler=e;this._nextObjectId=1;this._nextCallId=1;this._callbacks=new Map;this._previousCallbacks=new Set;this._worker=new Common.Worker("heap_snapshot_worker");this._worker.onmessage=this._messageReceived.bind(this)}createLoader(e,t){const i=this._nextObjectId++;const r=new Profiler.HeapSnapshotLoaderProxy(this,i,e,t);this._postMessage({callId:this._nextCallId++,disposition:"create",objectId:i,methodName:"HeapSnapshotWorker.HeapSnapshotLoader"});return r}dispose(){this._worker.terminate();if(this._interval)clearInterval(this._interval)}disposeObject(e){this._postMessage({callId:this._nextCallId++,disposition:"dispose",objectId:e})}evaluateForTest(e,t){const i=this._nextCallId++;this._callbacks.set(i,t);this._postMessage({callId:i,disposition:"evaluateForTest",source:e})}callFactoryMethod(e,t,i,r){const s=this._nextCallId++;const o=Array.prototype.slice.call(arguments,4);const n=this._nextObjectId++;function a(t){e(t?new r(this,n):null)}if(e){this._callbacks.set(s,a.bind(this));this._postMessage({callId:s,disposition:"factory",objectId:t,methodName:i,methodArguments:o,newObjectId:n});return null}else{this._postMessage({callId:s,disposition:"factory",objectId:t,methodName:i,methodArguments:o,newObjectId:n});return new r(this,n)}}callMethod(e,t,i){const r=this._nextCallId++;const s=Array.prototype.slice.call(arguments,3);if(e)this._callbacks.set(r,e);this._postMessage({callId:r,disposition:"method",objectId:t,methodName:i,methodArguments:s})}startCheckingForLongRunningCalls(){if(this._interval)return;this._checkLongRunningCalls();this._interval=setInterval(this._checkLongRunningCalls.bind(this),300)}_checkLongRunningCalls(){for(const e of this._previousCallbacks){if(!this._callbacks.has(e))this._previousCallbacks.delete(e)}const e=!!this._previousCallbacks.size;this.dispatchEventToListeners(Profiler.HeapSnapshotWorkerProxy.Events.Wait,e);for(const e of this._callbacks.keysArray())this._previousCallbacks.add(e)}_messageReceived(e){const t=e.data;if(t.eventName){if(this._eventHandler)this._eventHandler(t.eventName,t.data);return}if(t.error){if(t.errorMethodName){Common.console.error(Common.UIString("An error occurred when a call to method '%s' was requested",t.errorMethodName))}Common.console.error(t["errorCallStack"]);this._callbacks.delete(t.callId);return}if(!this._callbacks.has(t.callId))return;const i=this._callbacks.get(t.callId);this._callbacks.delete(t.callId);i(t.result)}_postMessage(e){this._worker.postMessage(e)}};Profiler.HeapSnapshotWorkerProxy.Events={Wait:Symbol("Wait")};Profiler.HeapSnapshotProxyObject=class{constructor(e,t){this._worker=e;this._objectId=t}_callWorker(e,t){t.splice(1,0,this._objectId);return this._worker[e].apply(this._worker,t)}dispose(){this._worker.disposeObject(this._objectId)}disposeWorker(){this._worker.dispose()}callFactoryMethod(e,t,i,r){return this._callWorker("callFactoryMethod",Array.prototype.slice.call(arguments,0))}_callMethodPromise(e,t){const i=Array.prototype.slice.call(arguments);return new Promise(e=>this._callWorker("callMethod",[e,...i]))}};Profiler.HeapSnapshotLoaderProxy=class extends Profiler.HeapSnapshotProxyObject{constructor(e,t,i,r){super(e,t);this._profileUid=i;this._snapshotReceivedCallback=r}write(e){return this._callMethodPromise("write",e)}async close(){await this._callMethodPromise("close");const e=await new Promise(e=>this.callFactoryMethod(e,"buildSnapshot",Profiler.HeapSnapshotProxy));this.dispose();e.setProfileUid(this._profileUid);await e.updateStaticData();this._snapshotReceivedCallback(e)}};Profiler.HeapSnapshotProxy=class extends Profiler.HeapSnapshotProxyObject{constructor(e,t){super(e,t);this._staticData=null}search(e,t){return this._callMethodPromise("search",e,t)}aggregatesWithFilter(e){return this._callMethodPromise("aggregatesWithFilter",e)}aggregatesForDiff(){return this._callMethodPromise("aggregatesForDiff")}calculateSnapshotDiff(e,t){return this._callMethodPromise("calculateSnapshotDiff",e,t)}nodeClassName(e){return this._callMethodPromise("nodeClassName",e)}createEdgesProvider(e){return this.callFactoryMethod(null,"createEdgesProvider",Profiler.HeapSnapshotProviderProxy,e)}createRetainingEdgesProvider(e){return this.callFactoryMethod(null,"createRetainingEdgesProvider",Profiler.HeapSnapshotProviderProxy,e)}createAddedNodesProvider(e,t){return this.callFactoryMethod(null,"createAddedNodesProvider",Profiler.HeapSnapshotProviderProxy,e,t)}createDeletedNodesProvider(e){return this.callFactoryMethod(null,"createDeletedNodesProvider",Profiler.HeapSnapshotProviderProxy,e)}createNodesProvider(e){return this.callFactoryMethod(null,"createNodesProvider",Profiler.HeapSnapshotProviderProxy,e)}createNodesProviderForClass(e,t){return this.callFactoryMethod(null,"createNodesProviderForClass",Profiler.HeapSnapshotProviderProxy,e,t)}allocationTracesTops(){return this._callMethodPromise("allocationTracesTops")}allocationNodeCallers(e){return this._callMethodPromise("allocationNodeCallers",e)}allocationStack(e){return this._callMethodPromise("allocationStack",e)}dispose(){throw new Error("Should never be called")}get nodeCount(){return this._staticData.nodeCount}get rootNodeIndex(){return this._staticData.rootNodeIndex}async updateStaticData(){this._staticData=await this._callMethodPromise("updateStaticData")}getStatistics(){return this._callMethodPromise("getStatistics")}getLocation(e){return this._callMethodPromise("getLocation",e)}getSamples(){return this._callMethodPromise("getSamples")}get totalSize(){return this._staticData.totalSize}get uid(){return this._profileUid}setProfileUid(e){this._profileUid=e}maxJSObjectId(){return this._staticData.maxJSObjectId}};Profiler.HeapSnapshotProviderProxy=class extends Profiler.HeapSnapshotProxyObject{constructor(e,t){super(e,t)}nodePosition(e){return this._callMethodPromise("nodePosition",e)}isEmpty(){return this._callMethodPromise("isEmpty")}serializeItemsRange(e,t){return this._callMethodPromise("serializeItemsRange",e,t)}sortAndRewind(e){return this._callMethodPromise("sortAndRewind",e)}};Profiler.HeapSnapshotSortableDataGrid=class extends DataGrid.DataGrid{constructor(e,t){super(t);this._dataDisplayDelegate=e;const i=[["distance",ls`Distance from window object`],["shallowSize",ls`Size of the object itself in bytes`],["retainedSize",ls`Size of the object plus the graph it retains in bytes`]];for(const e of i){const t=this.headerTableHeader(e[0]);if(t)t.setAttribute("title",e[1])}this._recursiveSortingDepth=0;this._highlightedNode=null;this._populatedAndSorted=false;this._nameFilter=null;this._nodeFilter=new HeapSnapshotModel.NodeFilter;this.addEventListener(Profiler.HeapSnapshotSortableDataGrid.Events.SortingComplete,this._sortingComplete,this);this.addEventListener(DataGrid.DataGrid.Events.SortingChanged,this.sortingChanged,this)}dataDisplayDelegate(){return this._dataDisplayDelegate}nodeFilter(){return this._nodeFilter}setNameFilter(e){this._nameFilter=e}defaultPopulateCount(){return 100}_disposeAllNodes(){const e=this.topLevelNodes();for(let t=0,i=e.length;t<i;++t)e[t].dispose()}wasShown(){if(this._nameFilter){this._nameFilter.addEventListener(UI.ToolbarInput.Event.TextChanged,this._onNameFilterChanged,this);this.updateVisibleNodes(true)}if(this._populatedAndSorted)this.dispatchEventToListeners(Profiler.HeapSnapshotSortableDataGrid.Events.ContentShown,this)}_sortingComplete(){this.removeEventListener(Profiler.HeapSnapshotSortableDataGrid.Events.SortingComplete,this._sortingComplete,this);this._populatedAndSorted=true;this.dispatchEventToListeners(Profiler.HeapSnapshotSortableDataGrid.Events.ContentShown,this)}willHide(){if(this._nameFilter)this._nameFilter.removeEventListener(UI.ToolbarInput.Event.TextChanged,this._onNameFilterChanged,this);this._clearCurrentHighlight()}populateContextMenu(e,t){const i=t.target.enclosingNodeOrSelfWithNodeName("td");if(!i)return;const r=i.heapSnapshotNode;e.revealSection().appendItem(ls`Reveal in Summary view`,()=>{this._dataDisplayDelegate.showObject(r.snapshotNodeId,ls`Summary`)})}resetSortingCache(){delete this._lastSortColumnId;delete this._lastSortAscending}topLevelNodes(){return this.rootNode().children}revealObjectByHeapSnapshotId(e){return Promise.resolve(null)}highlightNode(e){this._clearCurrentHighlight();this._highlightedNode=e;UI.runCSSAnimationOnce(this._highlightedNode.element(),"highlighted-row")}_clearCurrentHighlight(){if(!this._highlightedNode)return;this._highlightedNode.element().classList.remove("highlighted-row");this._highlightedNode=null}resetNameFilter(){this._nameFilter.setValue("")}_onNameFilterChanged(){this.updateVisibleNodes(true)}sortingChanged(){const e=this.isSortOrderAscending();const t=this.sortColumnId();if(this._lastSortColumnId===t&&this._lastSortAscending===e)return;this._lastSortColumnId=t;this._lastSortAscending=e;const i=this._sortFields(t,e);function r(e,t){let r=e[i[0]];let s=t[i[0]];let o=r<s?-1:r>s?1:0;if(!i[1])o=-o;if(o!==0)return o;r=e[i[2]];s=t[i[2]];o=r<s?-1:r>s?1:0;if(!i[3])o=-o;return o}this._performSorting(r)}_performSorting(e){this.recursiveSortingEnter();const t=this.allChildren(this.rootNode());this.rootNode().removeChildren();t.sort(e);for(let e=0,i=t.length;e<i;++e){const i=t[e];this.appendChildAfterSorting(i);if(i.expanded)i.sort()}this.recursiveSortingLeave()}appendChildAfterSorting(e){const t=e.revealed;this.rootNode().appendChild(e);e.revealed=t}recursiveSortingEnter(){++this._recursiveSortingDepth}recursiveSortingLeave(){if(!this._recursiveSortingDepth)return;if(--this._recursiveSortingDepth)return;this.updateVisibleNodes(true);this.dispatchEventToListeners(Profiler.HeapSnapshotSortableDataGrid.Events.SortingComplete)}updateVisibleNodes(e){}allChildren(e){return e.children}insertChild(e,t,i){e.insertChild(t,i)}removeChildByIndex(e,t){e.removeChild(e.children[t])}removeAllChildren(e){e.removeChildren()}};Profiler.HeapSnapshotSortableDataGrid.Events={ContentShown:Symbol("ContentShown"),SortingComplete:Symbol("SortingComplete")};Profiler.HeapSnapshotViewportDataGrid=class extends Profiler.HeapSnapshotSortableDataGrid{constructor(e,t){super(e,t);this.scrollContainer.addEventListener("scroll",this._onScroll.bind(this),true);this._topPaddingHeight=0;this._bottomPaddingHeight=0}topLevelNodes(){return this.allChildren(this.rootNode())}appendChildAfterSorting(e){}updateVisibleNodes(e){const t=40;const i=this.scrollContainer.scrollHeight;let r=this.scrollContainer.scrollTop;let s=i-r-this.scrollContainer.offsetHeight;r=Math.max(0,r-t);s=Math.max(0,s-t);let o=i-r-s;if(!e&&r>=this._topPaddingHeight&&s>=this._bottomPaddingHeight)return;const n=500;r-=n;o+=2*n;const a=this.selectedNode;this.rootNode().removeChildren();this._topPaddingHeight=0;this._bottomPaddingHeight=0;this._addVisibleNodes(this.rootNode(),r,r+o);this.setVerticalPadding(this._topPaddingHeight,this._bottomPaddingHeight);if(a){if(a.parent)a.select(true);else this.selectedNode=a}}_addVisibleNodes(e,t,i){if(!e.expanded)return 0;const r=this.allChildren(e);let s=0;const o=this._nameFilter?this._nameFilter.value().toLowerCase():"";let n=0;for(;n<r.length;++n){const e=r[n];if(o&&e.filteredOut&&e.filteredOut(o))continue;const i=s+this._nodeHeight(e);if(i>t)break;s=i}let a=s;for(;n<r.length&&a<i;++n){const s=r[n];if(o&&s.filteredOut&&s.filteredOut(o))continue;const l=s.hasChildren();s.removeChildren();s.setHasChildren(l);e.appendChild(s);a+=s.nodeSelfHeight();a+=this._addVisibleNodes(s,t-a,i-a)}let l=0;for(;n<r.length;++n){const e=r[n];if(o&&e.filteredOut&&e.filteredOut(o))continue;l+=this._nodeHeight(e)}this._topPaddingHeight+=s;this._bottomPaddingHeight+=l;return a+l}_nodeHeight(e){let t=e.nodeSelfHeight();if(!e.expanded)return t;const i=this.allChildren(e);for(let e=0;e<i.length;e++)t+=this._nodeHeight(i[e]);return t}revealTreeNode(e){const t=this._calculateOffset(e);const i=e.peekLast();const r=this.scrollContainer.scrollTop;const s=r+this.scrollContainer.offsetHeight;if(t>=r&&t<s)return Promise.resolve(i);const o=40;this.scrollContainer.scrollTop=Math.max(0,t-o);return new Promise(e=>{console.assert(!this._scrollToResolveCallback);this._scrollToResolveCallback=e.bind(null,i);this.scrollContainer.window().requestAnimationFrame(()=>{if(!this._scrollToResolveCallback)return;this._scrollToResolveCallback();this._scrollToResolveCallback=null})})}_calculateOffset(e){let t=this.rootNode();let i=0;for(let r=0;r<e.length;++r){const s=e[r];const o=this.allChildren(t);for(let e=0;e<o.length;++e){const t=o[e];if(s===t){i+=s.nodeSelfHeight();break}i+=this._nodeHeight(t)}t=s}return i-e.peekLast().nodeSelfHeight()}allChildren(e){return e._allChildren||(e._allChildren=[])}appendNode(e,t){this.allChildren(e).push(t)}insertChild(e,t,i){this.allChildren(e).splice(i,0,t)}removeChildByIndex(e,t){this.allChildren(e).splice(t,1)}removeAllChildren(e){e._allChildren=[]}removeTopLevelNodes(){this._disposeAllNodes();this.rootNode().removeChildren();this.rootNode()._allChildren=[]}_isScrolledIntoView(e){const t=this.scrollContainer.scrollTop;const i=t+this.scrollContainer.clientHeight;const r=e.offsetTop;const s=r+e.offsetHeight;return s<=i&&r>=t}onResize(){super.onResize();this.updateVisibleNodes(false)}_onScroll(e){this.updateVisibleNodes(false);if(this._scrollToResolveCallback){this._scrollToResolveCallback();this._scrollToResolveCallback=null}}};Profiler.HeapSnapshotContainmentDataGrid=class extends Profiler.HeapSnapshotSortableDataGrid{constructor(e,t){t=t||[{id:"object",title:ls`Object`,disclosure:true,sortable:true},{id:"distance",title:ls`Distance`,width:"70px",sortable:true,fixedWidth:true},{id:"shallowSize",title:ls`Shallow Size`,width:"110px",sortable:true,fixedWidth:true},{id:"retainedSize",title:ls`Retained Size`,width:"110px",sortable:true,fixedWidth:true,sort:DataGrid.DataGrid.Order.Descending}];super(e,t)}setDataSource(e,t){this.snapshot=e;const i={nodeIndex:t||e.rootNodeIndex};const r={node:i};this.setRootNode(this._createRootNode(e,r));this.rootNode().sort()}_createRootNode(e,t){return new Profiler.HeapSnapshotObjectNode(this,e,t,null)}sortingChanged(){const e=this.rootNode();if(e.hasChildren())e.sort()}};Profiler.HeapSnapshotRetainmentDataGrid=class extends Profiler.HeapSnapshotContainmentDataGrid{constructor(e){const t=[{id:"object",title:ls`Object`,disclosure:true,sortable:true},{id:"distance",title:ls`Distance`,width:"70px",sortable:true,fixedWidth:true,sort:DataGrid.DataGrid.Order.Ascending},{id:"shallowSize",title:ls`Shallow Size`,width:"110px",sortable:true,fixedWidth:true},{id:"retainedSize",title:ls`Retained Size`,width:"110px",sortable:true,fixedWidth:true}];super(e,t)}_createRootNode(e,t){return new Profiler.HeapSnapshotRetainingObjectNode(this,e,t,null)}_sortFields(e,t){return{object:["_name",t,"_count",false],count:["_count",t,"_name",true],shallowSize:["_shallowSize",t,"_name",true],retainedSize:["_retainedSize",t,"_name",true],distance:["_distance",t,"_name",true]}[e]}reset(){this.rootNode().removeChildren();this.resetSortingCache()}setDataSource(e,t){super.setDataSource(e,t);this.rootNode().expand()}};Profiler.HeapSnapshotRetainmentDataGrid.Events={ExpandRetainersComplete:Symbol("ExpandRetainersComplete")};Profiler.HeapSnapshotConstructorsDataGrid=class extends Profiler.HeapSnapshotViewportDataGrid{constructor(e){const t=[{id:"object",title:ls`Constructor`,disclosure:true,sortable:true},{id:"distance",title:ls`Distance`,width:"70px",sortable:true,fixedWidth:true},{id:"shallowSize",title:ls`Shallow Size`,width:"110px",sortable:true,fixedWidth:true},{id:"retainedSize",title:ls`Retained Size`,width:"110px",sort:DataGrid.DataGrid.Order.Descending,sortable:true,fixedWidth:true}];super(e,t);this._profileIndex=-1;this._objectIdToSelect=null}_sortFields(e,t){return{object:["_name",t,"_retainedSize",false],distance:["_distance",t,"_retainedSize",false],shallowSize:["_shallowSize",t,"_name",true],retainedSize:["_retainedSize",t,"_name",true]}[e]}async revealObjectByHeapSnapshotId(e){if(!this.snapshot){this._objectIdToSelect=e;return null}const t=await this.snapshot.nodeClassName(parseInt(e,10));if(!t)return null;const i=this.topLevelNodes().find(e=>e._name===t);if(!i)return null;const r=await i.populateNodeBySnapshotObjectId(parseInt(e,10));return r.length?this.revealTreeNode(r):null}clear(){this._nextRequestedFilter=null;this._lastFilter=null;this.removeTopLevelNodes()}setDataSource(e){this.snapshot=e;if(this._profileIndex===-1)this._populateChildren();if(this._objectIdToSelect){this.revealObjectByHeapSnapshotId(this._objectIdToSelect);this._objectIdToSelect=null}}setSelectionRange(e,t){this._nodeFilter=new HeapSnapshotModel.NodeFilter(e,t);this._populateChildren(this._nodeFilter)}setAllocationNodeId(e){this._nodeFilter=new HeapSnapshotModel.NodeFilter;this._nodeFilter.allocationNodeId=e;this._populateChildren(this._nodeFilter)}_aggregatesReceived(e,t){this._filterInProgress=null;if(this._nextRequestedFilter){this.snapshot.aggregatesWithFilter(this._nextRequestedFilter).then(this._aggregatesReceived.bind(this,this._nextRequestedFilter));this._filterInProgress=this._nextRequestedFilter;this._nextRequestedFilter=null}this.removeTopLevelNodes();this.resetSortingCache();for(const i in t){this.appendNode(this.rootNode(),new Profiler.HeapSnapshotConstructorNode(this,i,t[i],e))}this.sortingChanged();this._lastFilter=e}async _populateChildren(e){const t=e||new HeapSnapshotModel.NodeFilter;if(this._filterInProgress){this._nextRequestedFilter=this._filterInProgress.equals(t)?null:t;return}if(this._lastFilter&&this._lastFilter.equals(t))return;this._filterInProgress=t;const i=await this.snapshot.aggregatesWithFilter(t);this._aggregatesReceived(t,i)}filterSelectIndexChanged(e,t){this._profileIndex=t;this._nodeFilter=undefined;if(t!==-1){const i=t>0?e[t-1].maxJSObjectId:0;const r=e[t].maxJSObjectId;this._nodeFilter=new HeapSnapshotModel.NodeFilter(i,r)}this._populateChildren(this._nodeFilter)}};Profiler.HeapSnapshotDiffDataGrid=class extends Profiler.HeapSnapshotViewportDataGrid{constructor(e){const t=[{id:"object",title:ls`Constructor`,disclosure:true,sortable:true},{id:"addedCount",title:ls`# New`,width:"75px",sortable:true,fixedWidth:true},{id:"removedCount",title:ls`# Deleted`,width:"75px",sortable:true,fixedWidth:true},{id:"countDelta",title:ls`# Delta`,width:"65px",sortable:true,fixedWidth:true},{id:"addedSize",title:ls`Alloc. Size`,width:"75px",sortable:true,fixedWidth:true,sort:DataGrid.DataGrid.Order.Descending},{id:"removedSize",title:ls`Freed Size`,width:"75px",sortable:true,fixedWidth:true},{id:"sizeDelta",title:ls`Size Delta`,width:"75px",sortable:true,fixedWidth:true}];super(e,t)}defaultPopulateCount(){return 50}_sortFields(e,t){return{object:["_name",t,"_count",false],addedCount:["_addedCount",t,"_name",true],removedCount:["_removedCount",t,"_name",true],countDelta:["_countDelta",t,"_name",true],addedSize:["_addedSize",t,"_name",true],removedSize:["_removedSize",t,"_name",true],sizeDelta:["_sizeDelta",t,"_name",true]}[e]}setDataSource(e){this.snapshot=e}setBaseDataSource(e){this.baseSnapshot=e;this.removeTopLevelNodes();this.resetSortingCache();if(this.baseSnapshot===this.snapshot){this.dispatchEventToListeners(Profiler.HeapSnapshotSortableDataGrid.Events.SortingComplete);return}this._populateChildren()}async _populateChildren(){const e=await this.baseSnapshot.aggregatesForDiff();const t=await this.snapshot.calculateSnapshotDiff(this.baseSnapshot.uid,e);for(const e in t){const i=t[e];this.appendNode(this.rootNode(),new Profiler.HeapSnapshotDiffNode(this,e,i))}this.sortingChanged()}};Profiler.AllocationDataGrid=class extends Profiler.HeapSnapshotViewportDataGrid{constructor(e,t){const i=[{id:"liveCount",title:ls`Live Count`,width:"75px",sortable:true,fixedWidth:true},{id:"count",title:ls`Count`,width:"65px",sortable:true,fixedWidth:true},{id:"liveSize",title:ls`Live Size`,width:"75px",sortable:true,fixedWidth:true},{id:"size",title:ls`Size`,width:"75px",sortable:true,fixedWidth:true,sort:DataGrid.DataGrid.Order.Descending},{id:"name",title:ls`Function`,disclosure:true,sortable:true}];super(t,i);this._heapProfilerModel=e;this._linkifier=new Components.Linkifier}heapProfilerModel(){return this._heapProfilerModel}dispose(){this._linkifier.reset()}async setDataSource(e){this.snapshot=e;this._topNodes=await this.snapshot.allocationTracesTops();this._populateChildren()}_populateChildren(){this.removeTopLevelNodes();const e=this.rootNode();const t=this._topNodes;for(const i of t)this.appendNode(e,new Profiler.AllocationGridNode(this,i));this.updateVisibleNodes(true)}sortingChanged(){this._topNodes.sort(this._createComparator());this.rootNode().removeChildren();this._populateChildren()}_createComparator(){const e=this.sortColumnId();const t=this.sortOrder()===DataGrid.DataGrid.Order.Ascending?+1:-1;function i(i,r){if(i[e]>r[e])return t;if(i[e]<r[e])return-t;return 0}return i}};Profiler.HeapSnapshotGridNode=class extends DataGrid.DataGridNode{constructor(e,t){super(null,t);this._dataGrid=e;this._instanceCount=0;this._savedChildren=null;this._retrievedChildrenRanges=[];this._providerObject=null;this._reachableFromWindow=false}static createComparator(e){return{fieldName1:e[0],ascending1:e[1],fieldName2:e[2],ascending2:e[3]}}heapSnapshotDataGrid(){return this._dataGrid}createProvider(){throw new Error("Not implemented.")}retainersDataSource(){return null}_provider(){if(!this._providerObject)this._providerObject=this.createProvider();return this._providerObject}createCell(e){const t=super.createCell(e);if(this._searchMatched)t.classList.add("highlight");return t}collapse(){super.collapse();this._dataGrid.updateVisibleNodes(true)}expand(){super.expand();this._dataGrid.updateVisibleNodes(true)}dispose(){if(this._providerObject)this._providerObject.dispose();for(let e=this.children[0];e;e=e.traverseNextNode(true,this,true)){if(e.dispose)e.dispose()}}queryObjectContent(e,t){}_toPercentString(e){return e.toFixed(0)+" %"}_toUIDistance(e){const t=HeapSnapshotModel.baseSystemDistance;return e>=0&&e<t?Common.UIString("%d",e):Common.UIString("−")}allChildren(){return this._dataGrid.allChildren(this)}removeChildByIndex(e){this._dataGrid.removeChildByIndex(this,e)}childForPosition(e){let t=0;for(let i=0;i<this._retrievedChildrenRanges.length;i++){const r=this._retrievedChildrenRanges[i];if(r.from<=e&&e<r.to){const i=t+e-r.from;return this.allChildren()[i]}t+=r.to-r.from+1}return null}_createValueCell(e){const t=UI.html`<td class="numeric-column" />`;if(this.dataGrid.snapshot.totalSize!==0){const i=UI.html`<div><span>${this.data[e]}</span></div>`;const r=e+"-percent";if(r in this.data){i.appendChild(UI.html`<span class="percent-column">${this.data[r]}</span>`);i.classList.add("profile-multiple-values")}t.appendChild(i)}return t}populate(){if(this._populated)return;this._populated=true;this._provider().sortAndRewind(this.comparator()).then(()=>this._populateChildren())}expandWithoutPopulate(){this._populated=true;this.expand();return this._provider().sortAndRewind(this.comparator())}_populateChildren(e,t){let i;const r=new Promise(e=>i=e);e=e||0;t=t||e+this._dataGrid.defaultPopulateCount();let s=e;o.call(this);return r;function o(){if(s>=t)return;const e=Math.min(s+this._dataGrid.defaultPopulateCount(),t);this._provider().serializeItemsRange(s,e).then(l.bind(this));s=e}function n(e,t){if(this._savedChildren){const i=this._childHashForEntity(e);if(i in this._savedChildren){this._dataGrid.insertChild(this,this._savedChildren[i],t);return}}this._dataGrid.insertChild(this,this._createChildNode(e),t)}function a(e,t,i){const r=new DataGrid.ShowMoreDataGridNode(this._populateChildren.bind(this),e,t,this._dataGrid.defaultPopulateCount());this._dataGrid.insertChild(this,r,i)}function l(e){let r=0;let l=e.startPosition;const d=e.items;let h=0;if(!this._retrievedChildrenRanges.length){if(e.startPosition>0){this._retrievedChildrenRanges.push({from:0,to:0});a.call(this,0,e.startPosition,h++)}this._retrievedChildrenRanges.push({from:e.startPosition,to:e.endPosition});for(let e=0,t=d.length;e<t;++e)n.call(this,d[e],h++);if(e.endPosition<e.totalLength)a.call(this,e.endPosition,e.totalLength,h++)}else{let t=0;let i=false;let s;while(t<this._retrievedChildrenRanges.length){s=this._retrievedChildrenRanges[t];if(s.to>=l){i=true;break}h+=s.to-s.from;if(s.to<e.totalLength)h+=1;++t}if(!i||e.startPosition<s.from){this.allChildren()[h-1].setEndPosition(e.startPosition);a.call(this,e.startPosition,i?s.from:e.totalLength,h);s={from:e.startPosition,to:e.startPosition};if(!i)t=this._retrievedChildrenRanges.length;this._retrievedChildrenRanges.splice(t,0,s)}else{h+=l-s.from}while(s.to<e.endPosition){const i=s.to-l;h+=i;r+=i;l=s.to;const o=this._retrievedChildrenRanges[t+1];let a=o?o.from:e.totalLength;if(a>e.endPosition)a=e.endPosition;while(l<a){n.call(this,d[r++],h++);++l}if(o&&a===o.from){s.to=o.to;this.removeChildByIndex(h);this._retrievedChildrenRanges.splice(t+1,1)}else{s.to=a;if(a===e.totalLength)this.removeChildByIndex(h);else this.allChildren()[h].setStartPosition(e.endPosition)}}}this._instanceCount+=d.length;if(s<t){o.call(this);return}if(this.expanded)this._dataGrid.updateVisibleNodes(true);i();this.dispatchEventToListeners(Profiler.HeapSnapshotGridNode.Events.PopulateComplete)}}_saveChildren(){this._savedChildren=null;const e=this.allChildren();for(let t=0,i=e.length;t<i;++t){const i=e[t];if(!i.expanded)continue;if(!this._savedChildren)this._savedChildren={};this._savedChildren[this._childHashForNode(i)]=i}}async sort(){this._dataGrid.recursiveSortingEnter();await this._provider().sortAndRewind(this.comparator());this._saveChildren();this._dataGrid.removeAllChildren(this);this._retrievedChildrenRanges=[];const e=this._instanceCount;this._instanceCount=0;await this._populateChildren(0,e);for(const e of this.allChildren()){if(e.expanded)e.sort()}this._dataGrid.recursiveSortingLeave()}};Profiler.HeapSnapshotGridNode.Events={PopulateComplete:Symbol("PopulateComplete")};Profiler.HeapSnapshotGridNode.ChildrenProvider=function(){};Profiler.HeapSnapshotGridNode.ChildrenProvider.prototype={dispose(){},nodePosition(e){},isEmpty(){},serializeItemsRange(e,t){},sortAndRewind(e){}};Profiler.HeapSnapshotGenericObjectNode=class extends Profiler.HeapSnapshotGridNode{constructor(e,t){super(e,false);if(!t)return;this._name=t.name;this._type=t.type;this._distance=t.distance;this._shallowSize=t.selfSize;this._retainedSize=t.retainedSize;this.snapshotNodeId=t.id;this.snapshotNodeIndex=t.nodeIndex;if(this._type==="string"){this._reachableFromWindow=true}else if(this._type==="object"&&this._name.startsWith("Window")){this._name=this.shortenWindowURL(this._name,false);this._reachableFromWindow=true}else if(t.canBeQueried){this._reachableFromWindow=true}if(t.detachedDOMTreeNode)this.detachedDOMTreeNode=true;const i=e.snapshot;const r=this._shallowSize/i.totalSize*100;const s=this._retainedSize/i.totalSize*100;this.data={distance:this._toUIDistance(this._distance),shallowSize:Number.withThousandsSeparator(this._shallowSize),retainedSize:Number.withThousandsSeparator(this._retainedSize),"shallowSize-percent":this._toPercentString(r),"retainedSize-percent":this._toPercentString(s)}}retainersDataSource(){return{snapshot:this._dataGrid.snapshot,snapshotNodeIndex:this.snapshotNodeIndex}}createCell(e){const t=e!=="object"?this._createValueCell(e):this._createObjectCell();if(this._searchMatched)t.classList.add("highlight");return t}_createObjectCell(){let e=this._name;let t="object";switch(this._type){case"concatenated string":case"string":e=`"${e}"`;t="string";break;case"regexp":e=`/${e}/`;t="string";break;case"closure":e=`${e}()`;t="function";break;case"bigint":t="bigint";break;case"number":t="number";break;case"hidden":t="null";break;case"array":e=e?`${e}[]`:ls`(internal array)[]`;break}return this._createObjectCellWithValue(t,e)}_createObjectCellWithValue(e,t){const i=UI.Fragment.build`
        <td class="object-column disclosure">
          <div class="source-code event-properties" style="overflow: visible" $="container">
            <span class="value object-value-${e}">${t}</span>
            <span class="object-value-id">@${this.snapshotNodeId}</span>
          </div>
        </td>`;const r=i.$("container");this._prefixObjectCell(r);if(this._reachableFromWindow){r.appendChild(UI.html`<span class="heap-object-tag" title="${ls`User object reachable from window`}">🗖</span>`)}if(this.detachedDOMTreeNode)r.appendChild(UI.html`<span class="heap-object-tag" title="${ls`Detached from DOM tree`}">✀</span>`);this._appendSourceLocation(r);const s=i.element();if(this.depth)s.style.setProperty("padding-left",this.depth*this.dataGrid.indentWidth+"px");s.heapSnapshotNode=this;return s}_prefixObjectCell(e){}async _appendSourceLocation(e){const t=UI.html`<span class="heap-object-source-link" />`;e.appendChild(t);const i=await this._dataGrid.dataDisplayDelegate().linkifyObject(this.snapshotNodeIndex);if(i)t.appendChild(i);else t.remove()}async queryObjectContent(e,t){const i=e.runtimeModel();let r;if(this._type==="string")r=i.createRemoteObjectFromPrimitiveValue(this._name);else r=await e.objectForSnapshotObjectId(String(this.snapshotNodeId),t);return r||i.createRemoteObjectFromPrimitiveValue(ls`Preview is not available`)}async updateHasChildren(){const e=await this._provider().isEmpty();this.setHasChildren(!e)}shortenWindowURL(e,t){const i=e.indexOf("/");const r=t?e.indexOf("@"):e.length;if(i===-1||r===-1)return e;const s=e.substring(i+1,r).trimLeft();let o=s.trimURL();if(o.length>40)o=o.trimMiddle(40);return e.substr(0,i+2)+o+e.substr(r)}};Profiler.HeapSnapshotObjectNode=class extends Profiler.HeapSnapshotGenericObjectNode{constructor(e,t,i,r){super(e,i.node);this._referenceName=i.name;this._referenceType=i.type;this._edgeIndex=i.edgeIndex;this._snapshot=t;this._parentObjectNode=r;this._cycledWithAncestorGridNode=this._findAncestorWithSameSnapshotNodeId();if(!this._cycledWithAncestorGridNode)this.updateHasChildren();const s=this.data;s["count"]="";s["addedCount"]="";s["removedCount"]="";s["countDelta"]="";s["addedSize"]="";s["removedSize"]="";s["sizeDelta"]=""}retainersDataSource(){return{snapshot:this._snapshot,snapshotNodeIndex:this.snapshotNodeIndex}}createProvider(){return this._snapshot.createEdgesProvider(this.snapshotNodeIndex)}_findAncestorWithSameSnapshotNodeId(){let e=this._parentObjectNode;while(e){if(e.snapshotNodeId===this.snapshotNodeId)return e;e=e._parentObjectNode}return null}_createChildNode(e){return new Profiler.HeapSnapshotObjectNode(this._dataGrid,this._snapshot,e,this)}_childHashForEntity(e){return e.edgeIndex}_childHashForNode(e){return e._edgeIndex}comparator(){const e=this._dataGrid.isSortOrderAscending();const t=this._dataGrid.sortColumnId();const i={object:["!edgeName",e,"retainedSize",false],count:["!edgeName",true,"retainedSize",false],shallowSize:["selfSize",e,"!edgeName",true],retainedSize:["retainedSize",e,"!edgeName",true],distance:["distance",e,"_name",true]}[t]||["!edgeName",true,"retainedSize",false];return Profiler.HeapSnapshotGridNode.createComparator(i)}_prefixObjectCell(e){let t=this._referenceName||"(empty)";let i="name";switch(this._referenceType){case"context":i="object-value-number";break;case"internal":case"hidden":case"weak":i="object-value-null";break;case"element":t=`[${t}]`;break}if(this._cycledWithAncestorGridNode)e.classList.add("cycled-ancessor-node");e.prepend(UI.html`<span class="${i}">${t}</span>
                        <span class="grayed">${this._edgeNodeSeparator()}</span>`)}_edgeNodeSeparator(){return"::"}};Profiler.HeapSnapshotRetainingObjectNode=class extends Profiler.HeapSnapshotObjectNode{constructor(e,t,i,r){super(e,t,i,r)}createProvider(){return this._snapshot.createRetainingEdgesProvider(this.snapshotNodeIndex)}_createChildNode(e){return new Profiler.HeapSnapshotRetainingObjectNode(this._dataGrid,this._snapshot,e,this)}_edgeNodeSeparator(){return ls`in`}expand(){this._expandRetainersChain(20)}_expandRetainersChain(e){if(!this._populated){this.once(Profiler.HeapSnapshotGridNode.Events.PopulateComplete).then(()=>this._expandRetainersChain(e));this.populate();return}super.expand();if(--e>0&&this.children.length>0){const t=this.children[0];if(t._distance>1){t._expandRetainersChain(e);return}}this._dataGrid.dispatchEventToListeners(Profiler.HeapSnapshotRetainmentDataGrid.Events.ExpandRetainersComplete)}};Profiler.HeapSnapshotInstanceNode=class extends Profiler.HeapSnapshotGenericObjectNode{constructor(e,t,i,r){super(e,i);this._baseSnapshotOrSnapshot=t;this._isDeletedNode=r;this.updateHasChildren();const s=this.data;s["count"]="";s["countDelta"]="";s["sizeDelta"]="";if(this._isDeletedNode){s["addedCount"]="";s["addedSize"]="";s["removedCount"]="•";s["removedSize"]=Number.withThousandsSeparator(this._shallowSize)}else{s["addedCount"]="•";s["addedSize"]=Number.withThousandsSeparator(this._shallowSize);s["removedCount"]="";s["removedSize"]=""}}retainersDataSource(){return{snapshot:this._baseSnapshotOrSnapshot,snapshotNodeIndex:this.snapshotNodeIndex}}createProvider(){return this._baseSnapshotOrSnapshot.createEdgesProvider(this.snapshotNodeIndex)}_createChildNode(e){return new Profiler.HeapSnapshotObjectNode(this._dataGrid,this._baseSnapshotOrSnapshot,e,null)}_childHashForEntity(e){return e.edgeIndex}_childHashForNode(e){return e._edgeIndex}comparator(){const e=this._dataGrid.isSortOrderAscending();const t=this._dataGrid.sortColumnId();const i={object:["!edgeName",e,"retainedSize",false],distance:["distance",e,"retainedSize",false],count:["!edgeName",true,"retainedSize",false],addedSize:["selfSize",e,"!edgeName",true],removedSize:["selfSize",e,"!edgeName",true],shallowSize:["selfSize",e,"!edgeName",true],retainedSize:["retainedSize",e,"!edgeName",true]}[t]||["!edgeName",true,"retainedSize",false];return Profiler.HeapSnapshotGridNode.createComparator(i)}};Profiler.HeapSnapshotConstructorNode=class extends Profiler.HeapSnapshotGridNode{constructor(e,t,i,r){super(e,i.count>0);this._name=t;this._nodeFilter=r;this._distance=i.distance;this._count=i.count;this._shallowSize=i.self;this._retainedSize=i.maxRet;const s=e.snapshot;const o=this._retainedSize/s.totalSize*100;const n=this._shallowSize/s.totalSize*100;this.data={object:t,count:Number.withThousandsSeparator(this._count),distance:this._toUIDistance(this._distance),shallowSize:Number.withThousandsSeparator(this._shallowSize),retainedSize:Number.withThousandsSeparator(this._retainedSize),"shallowSize-percent":this._toPercentString(n),"retainedSize-percent":this._toPercentString(o)}}createProvider(){return this._dataGrid.snapshot.createNodesProviderForClass(this._name,this._nodeFilter)}async populateNodeBySnapshotObjectId(e){this._dataGrid.resetNameFilter();await this.expandWithoutPopulate();const t=await this._provider().nodePosition(e);if(t===-1){this.collapse();return[]}await this._populateChildren(t,null);const i=this.childForPosition(t);return i?[this,i]:[]}filteredOut(e){return this._name.toLowerCase().indexOf(e)===-1}createCell(e){const t=e==="object"?super.createCell(e):this._createValueCell(e);if(e==="object"&&this._count>1)t.appendChild(UI.html`<span class="objects-count">×${this._count}</span>`);if(this._searchMatched)t.classList.add("highlight");return t}_createChildNode(e){return new Profiler.HeapSnapshotInstanceNode(this._dataGrid,this._dataGrid.snapshot,e,false)}comparator(){const e=this._dataGrid.isSortOrderAscending();const t=this._dataGrid.sortColumnId();const i={object:["name",e,"id",true],distance:["distance",e,"retainedSize",false],shallowSize:["selfSize",e,"id",true],retainedSize:["retainedSize",e,"id",true]}[t];return Profiler.HeapSnapshotGridNode.createComparator(i)}_childHashForEntity(e){return e.id}_childHashForNode(e){return e.snapshotNodeId}};Profiler.HeapSnapshotDiffNodesProvider=class{constructor(e,t,i,r){this._addedNodesProvider=e;this._deletedNodesProvider=t;this._addedCount=i;this._removedCount=r}dispose(){this._addedNodesProvider.dispose();this._deletedNodesProvider.dispose()}nodePosition(e){throw new Error("Unreachable")}isEmpty(){return Promise.resolve(false)}async serializeItemsRange(e,t){let i;let r;if(e<this._addedCount){i=await this._addedNodesProvider.serializeItemsRange(e,t);for(const e of i.items)e.isAddedNotRemoved=true;if(i.endPosition>=t){i.totalLength=this._addedCount+this._removedCount;return i}r=i;i=await this._deletedNodesProvider.serializeItemsRange(0,t-i.endPosition)}else{r=new HeapSnapshotModel.ItemsRange(0,0,0,[]);i=await this._deletedNodesProvider.serializeItemsRange(e-this._addedCount,t-this._addedCount)}if(!r.items.length)r.startPosition=this._addedCount+i.startPosition;for(const e of i.items)e.isAddedNotRemoved=false;r.items.pushAll(i.items);r.endPosition=this._addedCount+i.endPosition;r.totalLength=this._addedCount+this._removedCount;return r}async sortAndRewind(e){await this._addedNodesProvider.sortAndRewind(e);await this._deletedNodesProvider.sortAndRewind(e)}};Profiler.HeapSnapshotDiffNode=class extends Profiler.HeapSnapshotGridNode{constructor(e,t,i){super(e,true);this._name=t;this._addedCount=i.addedCount;this._removedCount=i.removedCount;this._countDelta=i.countDelta;this._addedSize=i.addedSize;this._removedSize=i.removedSize;this._sizeDelta=i.sizeDelta;this._deletedIndexes=i.deletedIndexes;this.data={object:t,addedCount:Number.withThousandsSeparator(this._addedCount),removedCount:Number.withThousandsSeparator(this._removedCount),countDelta:this._signForDelta(this._countDelta)+Number.withThousandsSeparator(Math.abs(this._countDelta)),addedSize:Number.withThousandsSeparator(this._addedSize),removedSize:Number.withThousandsSeparator(this._removedSize),sizeDelta:this._signForDelta(this._sizeDelta)+Number.withThousandsSeparator(Math.abs(this._sizeDelta))}}createProvider(){const e=this._dataGrid;return new Profiler.HeapSnapshotDiffNodesProvider(e.snapshot.createAddedNodesProvider(e.baseSnapshot.uid,this._name),e.baseSnapshot.createDeletedNodesProvider(this._deletedIndexes),this._addedCount,this._removedCount)}createCell(e){const t=super.createCell(e);if(e!=="object")t.classList.add("numeric-column");return t}_createChildNode(e){if(e.isAddedNotRemoved)return new Profiler.HeapSnapshotInstanceNode(this._dataGrid,this._dataGrid.snapshot,e,false);else return new Profiler.HeapSnapshotInstanceNode(this._dataGrid,this._dataGrid.baseSnapshot,e,true)}_childHashForEntity(e){return e.id}_childHashForNode(e){return e.snapshotNodeId}comparator(){const e=this._dataGrid.isSortOrderAscending();const t=this._dataGrid.sortColumnId();const i={object:["name",e,"id",true],addedCount:["name",true,"id",true],removedCount:["name",true,"id",true],countDelta:["name",true,"id",true],addedSize:["selfSize",e,"id",true],removedSize:["selfSize",e,"id",true],sizeDelta:["selfSize",e,"id",true]}[t];return Profiler.HeapSnapshotGridNode.createComparator(i)}filteredOut(e){return this._name.toLowerCase().indexOf(e)===-1}_signForDelta(e){if(e===0)return"";if(e>0)return"+";else return"−"}};Profiler.AllocationGridNode=class extends Profiler.HeapSnapshotGridNode{constructor(e,t){super(e,t.hasChildren);this._populated=false;this._allocationNode=t;this.data={liveCount:Number.withThousandsSeparator(t.liveCount),count:Number.withThousandsSeparator(t.count),liveSize:Number.withThousandsSeparator(t.liveSize),size:Number.withThousandsSeparator(t.size),name:t.name}}populate(){if(this._populated)return;this._doPopulate()}async _doPopulate(){this._populated=true;const e=await this._dataGrid.snapshot.allocationNodeCallers(this._allocationNode.id);const t=e.nodesWithSingleCaller;let i=this;const r=this._dataGrid;for(const e of t){const t=new Profiler.AllocationGridNode(r,e);r.appendNode(i,t);i=t;i._populated=true;if(this.expanded)i.expand()}const s=e.branchingCallers;s.sort(this._dataGrid._createComparator());for(const e of s)r.appendNode(i,new Profiler.AllocationGridNode(r,e));r.updateVisibleNodes(true)}expand(){super.expand();if(this.children.length===1)this.children[0].expand()}createCell(e){if(e!=="name")return this._createValueCell(e);const t=super.createCell(e);const i=this._allocationNode;const r=this._dataGrid.heapProfilerModel();if(i.scriptId){const e=this._dataGrid._linkifier;const s=e.linkifyScriptLocation(r?r.target():null,String(i.scriptId),i.scriptName,i.line-1,i.column-1,"profile-node-file");s.style.maxWidth="75%";t.insertBefore(s,t.firstChild)}return t}allocationNodeId(){return this._allocationNode.id}};Profiler.HeapSnapshotView=class extends UI.SimpleView{constructor(e,t){super(Common.UIString("Heap Snapshot"));this.element.classList.add("heap-snapshot-view");this._profile=t;this._linkifier=new Components.Linkifier;const i=t.profileType();i.addEventListener(Profiler.HeapSnapshotProfileType.SnapshotReceived,this._onReceiveSnapshot,this);i.addEventListener(Profiler.ProfileType.Events.RemoveProfileHeader,this._onProfileHeaderRemoved,this);const r=i.id===Profiler.TrackingHeapSnapshotProfileType.TypeId;if(r)this._createOverview();this._parentDataDisplayDelegate=e;this._searchableView=new UI.SearchableView(this);this._searchableView.show(this.element);this._splitWidget=new UI.SplitWidget(false,true,"heapSnapshotSplitViewState",200,200);this._splitWidget.show(this._searchableView.element);this._containmentDataGrid=new Profiler.HeapSnapshotContainmentDataGrid(this);this._containmentDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode,this._selectionChanged,this);this._containmentWidget=this._containmentDataGrid.asWidget();this._containmentWidget.setMinimumSize(50,25);this._statisticsView=new Profiler.HeapSnapshotStatisticsView;this._constructorsDataGrid=new Profiler.HeapSnapshotConstructorsDataGrid(this);this._constructorsDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode,this._selectionChanged,this);this._constructorsWidget=this._constructorsDataGrid.asWidget();this._constructorsWidget.setMinimumSize(50,25);this._diffDataGrid=new Profiler.HeapSnapshotDiffDataGrid(this);this._diffDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode,this._selectionChanged,this);this._diffWidget=this._diffDataGrid.asWidget();this._diffWidget.setMinimumSize(50,25);if(r){this._allocationDataGrid=new Profiler.AllocationDataGrid(t.heapProfilerModel(),this);this._allocationDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode,this._onSelectAllocationNode,this);this._allocationWidget=this._allocationDataGrid.asWidget();this._allocationWidget.setMinimumSize(50,25);this._allocationStackView=new Profiler.HeapAllocationStackView(t.heapProfilerModel());this._allocationStackView.setMinimumSize(50,25);this._tabbedPane=new UI.TabbedPane}this._retainmentDataGrid=new Profiler.HeapSnapshotRetainmentDataGrid(this);this._retainmentWidget=this._retainmentDataGrid.asWidget();this._retainmentWidget.setMinimumSize(50,21);this._retainmentWidget.element.classList.add("retaining-paths-view");let s;if(this._allocationStackView){this._tabbedPane=new UI.TabbedPane;this._tabbedPane.appendTab("retainers",Common.UIString("Retainers"),this._retainmentWidget);this._tabbedPane.appendTab("allocation-stack",Common.UIString("Allocation stack"),this._allocationStackView);s=this._tabbedPane.headerElement();this._objectDetailsView=this._tabbedPane}else{const e=createElementWithClass("div","heap-snapshot-view-resizer");const t=e.createChild("div","title");const i=t.createChild("span");i.textContent=Common.UIString("Retainers");s=e;this._objectDetailsView=new UI.VBox;this._objectDetailsView.element.appendChild(e);this._retainmentWidget.show(this._objectDetailsView.element)}this._splitWidget.hideDefaultResizer();this._splitWidget.installResizer(s);this._retainmentDataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode,this._inspectedObjectChanged,this);this._retainmentDataGrid.reset();this._perspectives=[];this._comparisonPerspective=new Profiler.HeapSnapshotView.ComparisonPerspective;this._perspectives.push(new Profiler.HeapSnapshotView.SummaryPerspective);if(t.profileType()!==Profiler.ProfileTypeRegistry.instance.trackingHeapSnapshotProfileType)this._perspectives.push(this._comparisonPerspective);this._perspectives.push(new Profiler.HeapSnapshotView.ContainmentPerspective);if(this._allocationWidget)this._perspectives.push(new Profiler.HeapSnapshotView.AllocationPerspective);this._perspectives.push(new Profiler.HeapSnapshotView.StatisticsPerspective);this._perspectiveSelect=new UI.ToolbarComboBox(this._onSelectedPerspectiveChanged.bind(this));this._updatePerspectiveOptions();this._baseSelect=new UI.ToolbarComboBox(this._changeBase.bind(this));this._baseSelect.setVisible(false);this._updateBaseOptions();this._filterSelect=new UI.ToolbarComboBox(this._changeFilter.bind(this));this._filterSelect.setVisible(false);this._updateFilterOptions();this._classNameFilter=new UI.ToolbarInput("Class filter");this._classNameFilter.setVisible(false);this._constructorsDataGrid.setNameFilter(this._classNameFilter);this._diffDataGrid.setNameFilter(this._classNameFilter);this._selectedSizeText=new UI.ToolbarText;this._popoverHelper=new UI.PopoverHelper(this.element,this._getPopoverRequest.bind(this));this._popoverHelper.setDisableOnClick(true);this._popoverHelper.setHasPadding(true);this.element.addEventListener("scroll",this._popoverHelper.hidePopover.bind(this._popoverHelper),true);this._currentPerspectiveIndex=0;this._currentPerspective=this._perspectives[0];this._currentPerspective.activate(this);this._dataGrid=this._currentPerspective.masterGrid(this);this._populate();this._searchThrottler=new Common.Throttler(0);this.element.addEventListener("contextmenu",this._handleContextMenuEvent.bind(this),true);for(const e of this._profiles())e.addEventListener(Profiler.ProfileHeader.Events.ProfileTitleChanged,this._updateControls,this)}_createOverview(){const e=this._profile.profileType();this._trackingOverviewGrid=new Profiler.HeapTimelineOverview;this._trackingOverviewGrid.addEventListener(Profiler.HeapTimelineOverview.IdsRangeChanged,this._onIdsRangeChanged.bind(this));if(!this._profile.fromFile()&&e.profileBeingRecorded()===this._profile){e.addEventListener(Profiler.TrackingHeapSnapshotProfileType.HeapStatsUpdate,this._onHeapStatsUpdate,this);e.addEventListener(Profiler.TrackingHeapSnapshotProfileType.TrackingStopped,this._onStopTracking,this);this._trackingOverviewGrid.start()}}_onStopTracking(){this._profile.profileType().removeEventListener(Profiler.TrackingHeapSnapshotProfileType.HeapStatsUpdate,this._onHeapStatsUpdate,this);this._profile.profileType().removeEventListener(Profiler.TrackingHeapSnapshotProfileType.TrackingStopped,this._onStopTracking,this);if(this._trackingOverviewGrid)this._trackingOverviewGrid.stop()}_onHeapStatsUpdate(e){const t=e.data;if(t)this._trackingOverviewGrid.setSamples(e.data)}searchableView(){return this._searchableView}showProfile(e){return this._parentDataDisplayDelegate.showProfile(e)}showObject(e,t){if(e<=this._profile.maxJSObjectId)this.selectLiveObject(t,e);else this._parentDataDisplayDelegate.showObject(e,t)}async linkifyObject(e){const t=this._profile.heapProfilerModel();if(!t)return null;const i=await this._profile.getLocation(e);if(!i)return null;const r=t.runtimeModel().debuggerModel();const s=r.createRawLocationByScriptId(String(i.scriptId),i.lineNumber,i.columnNumber);if(!s)return null;const o=s.script()&&s.script().sourceURL;return o&&this._linkifier?this._linkifier.linkifyRawLocation(s,o):null}async _populate(){const e=await this._profile._loadPromise;this._retrieveStatistics(e);this._dataGrid.setDataSource(e);if(this._profile.profileType().id===Profiler.TrackingHeapSnapshotProfileType.TypeId&&this._profile.fromFile()){const t=await e.getSamples();if(t){console.assert(t.timestamps.length);const e=new Profiler.HeapTimelineOverview.Samples;e.sizes=t.sizes;e.ids=t.lastAssignedIds;e.timestamps=t.timestamps;e.max=t.sizes;e.totalTime=Math.max(t.timestamps.peekLast(),1e4);this._trackingOverviewGrid.setSamples(e)}}const t=this._profiles();const i=t.indexOf(this._profile);this._baseSelect.setSelectedIndex(Math.max(0,i-1));if(this._trackingOverviewGrid)this._trackingOverviewGrid.updateGrid()}async _retrieveStatistics(e){const t=await e.getStatistics();this._statisticsView.setTotal(t.total);this._statisticsView.addRecord(t.code,Common.UIString("Code"),"#f77");this._statisticsView.addRecord(t.strings,Common.UIString("Strings"),"#5e5");this._statisticsView.addRecord(t.jsArrays,Common.UIString("JS Arrays"),"#7af");this._statisticsView.addRecord(t.native,Common.UIString("Typed Arrays"),"#fc5");this._statisticsView.addRecord(t.system,Common.UIString("System Objects"),"#98f");return t}_onIdsRangeChanged(e){const t=e.data.minId;const i=e.data.maxId;this._selectedSizeText.setText(Common.UIString("Selected size: %s",Number.bytesToString(e.data.size)));if(this._constructorsDataGrid.snapshot)this._constructorsDataGrid.setSelectionRange(t,i)}syncToolbarItems(){const e=[this._perspectiveSelect,this._classNameFilter];if(this._profile.profileType()!==Profiler.ProfileTypeRegistry.instance.trackingHeapSnapshotProfileType)e.push(this._baseSelect,this._filterSelect);e.push(this._selectedSizeText);return e}willHide(){this._currentSearchResultIndex=-1;this._popoverHelper.hidePopover()}supportsCaseSensitiveSearch(){return true}supportsRegexSearch(){return false}searchCanceled(){this._currentSearchResultIndex=-1;this._searchResults=[]}_selectRevealedNode(e){if(e)e.select()}_handleContextMenuEvent(e){const t=new UI.ContextMenu(e);if(this._dataGrid)this._dataGrid.populateContextMenu(t,e);t.show()}performSearch(e,t,i){const r=new HeapSnapshotModel.SearchConfig(e.query.trim(),e.caseSensitive,e.isRegex,t,i||false);this._searchThrottler.schedule(this._performSearch.bind(this,r))}async _performSearch(e){this.searchCanceled();if(!this._currentPerspective.supportsSearch())return;this.currentQuery=e;const t=e.query.trim();if(!t)return;if(t.charAt(0)==="@"){const e=parseInt(t.substring(1),10);if(isNaN(e))return;const i=await this._dataGrid.revealObjectByHeapSnapshotId(String(e));this._selectRevealedNode(i);return}this._searchResults=await this._profile._snapshotProxy.search(this.currentQuery,this._dataGrid.nodeFilter());this._searchableView.updateSearchMatchesCount(this._searchResults.length);if(this._searchResults.length)this._currentSearchResultIndex=e.jumpBackwards?this._searchResults.length-1:0;await this._jumpToSearchResult(this._currentSearchResultIndex)}jumpToNextSearchResult(){if(!this._searchResults.length)return;this._currentSearchResultIndex=(this._currentSearchResultIndex+1)%this._searchResults.length;this._searchThrottler.schedule(this._jumpToSearchResult.bind(this,this._currentSearchResultIndex))}jumpToPreviousSearchResult(){if(!this._searchResults.length)return;this._currentSearchResultIndex=(this._currentSearchResultIndex+this._searchResults.length-1)%this._searchResults.length;this._searchThrottler.schedule(this._jumpToSearchResult.bind(this,this._currentSearchResultIndex))}async _jumpToSearchResult(e){this._searchableView.updateCurrentMatchIndex(e);if(e===-1)return;const t=await this._dataGrid.revealObjectByHeapSnapshotId(String(this._searchResults[e]));this._selectRevealedNode(t)}refreshVisibleData(){if(!this._dataGrid)return;let e=this._dataGrid.rootNode().children[0];while(e){e.refresh();e=e.traverseNextNode(false,null,true)}}_changeBase(){if(this._baseProfile===this._profiles()[this._baseSelect.selectedIndex()])return;this._baseProfile=this._profiles()[this._baseSelect.selectedIndex()];const e=this._dataGrid;if(e.snapshot)this._baseProfile._loadPromise.then(e.setBaseDataSource.bind(e));if(!this.currentQuery||!this._searchResults)return;this.performSearch(this.currentQuery,false)}_changeFilter(){const e=this._filterSelect.selectedIndex()-1;this._dataGrid.filterSelectIndexChanged(this._profiles(),e);if(!this.currentQuery||!this._searchResults)return;this.performSearch(this.currentQuery,false)}_profiles(){return this._profile.profileType().getProfiles()}_selectionChanged(e){const t=e.data;this._setSelectedNodeForDetailsView(t);this._inspectedObjectChanged(e)}_onSelectAllocationNode(e){const t=e.data;this._constructorsDataGrid.setAllocationNodeId(t.allocationNodeId());this._setSelectedNodeForDetailsView(null)}_inspectedObjectChanged(e){const t=e.data;const i=this._profile.heapProfilerModel();if(i&&t instanceof Profiler.HeapSnapshotGenericObjectNode)i.addInspectedHeapObject(String(t.snapshotNodeId))}_setSelectedNodeForDetailsView(e){const t=e&&e.retainersDataSource();if(t){this._retainmentDataGrid.setDataSource(t.snapshot,t.snapshotNodeIndex);if(this._allocationStackView)this._allocationStackView.setAllocatedObject(t.snapshot,t.snapshotNodeIndex)}else{if(this._allocationStackView)this._allocationStackView.clear();this._retainmentDataGrid.reset()}}_changePerspectiveAndWait(e){const t=this._perspectives.findIndex(t=>t.title()===e);if(t===-1||this._currentPerspectiveIndex===t)return Promise.resolve();const i=this._perspectives[t].masterGrid(this).once(Profiler.HeapSnapshotSortableDataGrid.Events.ContentShown);const r=this._perspectiveSelect.options().find(e=>e.value===t);this._perspectiveSelect.select(r);this._changePerspective(t);return i}async _updateDataSourceAndView(){const e=this._dataGrid;if(!e||e.snapshot)return;const t=await this._profile._loadPromise;if(this._dataGrid!==e)return;if(e.snapshot!==t)e.setDataSource(t);if(e!==this._diffDataGrid)return;if(!this._baseProfile)this._baseProfile=this._profiles()[this._baseSelect.selectedIndex()];const i=await this._baseProfile._loadPromise;if(this._diffDataGrid.baseSnapshot!==i)this._diffDataGrid.setBaseDataSource(i)}_onSelectedPerspectiveChanged(e){this._changePerspective(e.target.selectedOptions[0].value)}_changePerspective(e){if(e===this._currentPerspectiveIndex)return;this._currentPerspectiveIndex=e;this._currentPerspective.deactivate(this);const t=this._perspectives[e];this._currentPerspective=t;this._dataGrid=t.masterGrid(this);t.activate(this);this.refreshVisibleData();if(this._dataGrid)this._dataGrid.updateWidths();this._updateDataSourceAndView();if(!this.currentQuery||!this._searchResults)return;this.performSearch(this.currentQuery,false)}async selectLiveObject(e,t){await this._changePerspectiveAndWait(e);const i=await this._dataGrid.revealObjectByHeapSnapshotId(t);if(i)i.select();else Common.console.error("Cannot find corresponding heap snapshot node")}_getPopoverRequest(e){const t=e.target.enclosingNodeOrSelfWithNodeName("span");const i=e.target.enclosingNodeOrSelfWithNodeName("tr");const r=this._profile.heapProfilerModel();if(!i||!t||!r)return null;const s=i._dataGridNode;let o;return{box:t.boxInWindow(),show:async e=>{const t=await s.queryObjectContent(r,"popover");if(!t)return false;o=await ObjectUI.ObjectPopoverHelper.buildObjectPopover(t,e);if(!o){r.runtimeModel().releaseObjectGroup("popover");return false}return true},hide:()=>{r.runtimeModel().releaseObjectGroup("popover");o.dispose()}}}_updatePerspectiveOptions(){const e=this._profiles().length>1;this._perspectiveSelect.removeOptions();this._perspectives.forEach((t,i)=>{if(e||t!==this._comparisonPerspective)this._perspectiveSelect.createOption(t.title(),"",String(i))})}_updateBaseOptions(){const e=this._profiles();const t=this._baseSelect.selectedIndex();this._baseSelect.removeOptions();for(const t of e)this._baseSelect.createOption(t.title);if(t>-1)this._baseSelect.setSelectedIndex(t)}_updateFilterOptions(){const e=this._profiles();const t=this._filterSelect.selectedIndex();this._filterSelect.removeOptions();this._filterSelect.createOption(Common.UIString("All objects"));for(let t=0;t<e.length;++t){let i;if(!t)i=Common.UIString("Objects allocated before %s",e[t].title);else i=Common.UIString("Objects allocated between %s and %s",e[t-1].title,e[t].title);this._filterSelect.createOption(i)}if(t>-1)this._filterSelect.setSelectedIndex(t)}_updateControls(){this._updatePerspectiveOptions();this._updateBaseOptions();this._updateFilterOptions()}_onReceiveSnapshot(e){this._updateControls();const t=e.data;t.addEventListener(Profiler.ProfileHeader.Events.ProfileTitleChanged,this._updateControls,this)}_onProfileHeaderRemoved(e){const t=e.data;t.removeEventListener(Profiler.ProfileHeader.Events.ProfileTitleChanged,this._updateControls,this);if(this._profile===t){this.detach();this._profile.profileType().removeEventListener(Profiler.HeapSnapshotProfileType.SnapshotReceived,this._onReceiveSnapshot,this);this._profile.profileType().removeEventListener(Profiler.ProfileType.Events.RemoveProfileHeader,this._onProfileHeaderRemoved,this);this.dispose()}else{this._updateControls()}}dispose(){this._linkifier.dispose();this._popoverHelper.dispose();if(this._allocationStackView){this._allocationStackView.clear();this._allocationDataGrid.dispose()}this._onStopTracking();if(this._trackingOverviewGrid){this._trackingOverviewGrid.removeEventListener(Profiler.HeapTimelineOverview.IdsRangeChanged,this._onIdsRangeChanged.bind(this))}}};Profiler.HeapSnapshotView.Perspective=class{constructor(e){this._title=e}activate(e){}deactivate(e){e._baseSelect.setVisible(false);e._filterSelect.setVisible(false);e._classNameFilter.setVisible(false);if(e._trackingOverviewGrid)e._trackingOverviewGrid.detach();if(e._allocationWidget)e._allocationWidget.detach();if(e._statisticsView)e._statisticsView.detach();e._splitWidget.detach();e._splitWidget.detachChildWidgets()}masterGrid(e){return null}title(){return this._title}supportsSearch(){return false}};Profiler.HeapSnapshotView.SummaryPerspective=class extends Profiler.HeapSnapshotView.Perspective{constructor(){super(Common.UIString("Summary"))}activate(e){e._splitWidget.setMainWidget(e._constructorsWidget);e._splitWidget.setSidebarWidget(e._objectDetailsView);e._splitWidget.show(e._searchableView.element);e._filterSelect.setVisible(true);e._classNameFilter.setVisible(true);if(!e._trackingOverviewGrid)return;e._trackingOverviewGrid.show(e._searchableView.element,e._splitWidget.element);e._trackingOverviewGrid.update();e._trackingOverviewGrid.updateGrid()}masterGrid(e){return e._constructorsDataGrid}supportsSearch(){return true}};Profiler.HeapSnapshotView.ComparisonPerspective=class extends Profiler.HeapSnapshotView.Perspective{constructor(){super(Common.UIString("Comparison"))}activate(e){e._splitWidget.setMainWidget(e._diffWidget);e._splitWidget.setSidebarWidget(e._objectDetailsView);e._splitWidget.show(e._searchableView.element);e._baseSelect.setVisible(true);e._classNameFilter.setVisible(true)}masterGrid(e){return e._diffDataGrid}supportsSearch(){return true}};Profiler.HeapSnapshotView.ContainmentPerspective=class extends Profiler.HeapSnapshotView.Perspective{constructor(){super(Common.UIString("Containment"))}activate(e){e._splitWidget.setMainWidget(e._containmentWidget);e._splitWidget.setSidebarWidget(e._objectDetailsView);e._splitWidget.show(e._searchableView.element)}masterGrid(e){return e._containmentDataGrid}};Profiler.HeapSnapshotView.AllocationPerspective=class extends Profiler.HeapSnapshotView.Perspective{constructor(){super(Common.UIString("Allocation"));this._allocationSplitWidget=new UI.SplitWidget(false,true,"heapSnapshotAllocationSplitViewState",200,200);this._allocationSplitWidget.setSidebarWidget(new UI.VBox)}activate(e){this._allocationSplitWidget.setMainWidget(e._allocationWidget);e._splitWidget.setMainWidget(e._constructorsWidget);e._splitWidget.setSidebarWidget(e._objectDetailsView);const t=new UI.VBox;const i=createElementWithClass("div","heap-snapshot-view-resizer");const r=i.createChild("div","title").createChild("span");r.textContent=Common.UIString("Live objects");this._allocationSplitWidget.hideDefaultResizer();this._allocationSplitWidget.installResizer(i);t.element.appendChild(i);e._splitWidget.show(t.element);this._allocationSplitWidget.setSidebarWidget(t);this._allocationSplitWidget.show(e._searchableView.element);e._constructorsDataGrid.clear();const s=e._allocationDataGrid.selectedNode;if(s)e._constructorsDataGrid.setAllocationNodeId(s.allocationNodeId())}deactivate(e){this._allocationSplitWidget.detach();super.deactivate(e)}masterGrid(e){return e._allocationDataGrid}};Profiler.HeapSnapshotView.StatisticsPerspective=class extends Profiler.HeapSnapshotView.Perspective{constructor(){super(Common.UIString("Statistics"))}activate(e){e._statisticsView.show(e._searchableView.element)}masterGrid(e){return null}};Profiler.HeapSnapshotProfileType=class extends Profiler.ProfileType{constructor(e,t){super(e||Profiler.HeapSnapshotProfileType.TypeId,t||ls`Heap snapshot`);SDK.targetManager.observeModels(SDK.HeapProfilerModel,this);SDK.targetManager.addModelListener(SDK.HeapProfilerModel,SDK.HeapProfilerModel.Events.ResetProfiles,this._resetProfiles,this);SDK.targetManager.addModelListener(SDK.HeapProfilerModel,SDK.HeapProfilerModel.Events.AddHeapSnapshotChunk,this._addHeapSnapshotChunk,this);SDK.targetManager.addModelListener(SDK.HeapProfilerModel,SDK.HeapProfilerModel.Events.ReportHeapSnapshotProgress,this._reportHeapSnapshotProgress,this)}modelAdded(e){e.enable()}modelRemoved(e){}getProfiles(){return super.getProfiles()}fileExtension(){return".heapsnapshot"}get buttonTooltip(){return Common.UIString("Take heap snapshot")}isInstantProfile(){return true}buttonClicked(){this._takeHeapSnapshot();Host.userMetrics.actionTaken(Host.UserMetrics.Action.ProfilesHeapProfileTaken);return false}get treeItemTitle(){return Common.UIString("HEAP SNAPSHOTS")}get description(){return Common.UIString("Heap snapshot profiles show memory distribution among your page's JavaScript objects and related DOM nodes.")}createProfileLoadedFromFile(e){return new Profiler.HeapProfileHeader(null,this,e)}async _takeHeapSnapshot(){if(this.profileBeingRecorded())return;const e=UI.context.flavor(SDK.HeapProfilerModel);if(!e)return;let t=new Profiler.HeapProfileHeader(e,this);this.setProfileBeingRecorded(t);this.addProfile(t);t.updateStatus(Common.UIString("Snapshotting…"));await e.takeHeapSnapshot(true);t=this.profileBeingRecorded();t.title=Common.UIString("Snapshot %d",t.uid);t._finishLoad();this.setProfileBeingRecorded(null);this.dispatchEventToListeners(Profiler.ProfileType.Events.ProfileComplete,t)}_addHeapSnapshotChunk(e){if(!this.profileBeingRecorded())return;const t=e.data;this.profileBeingRecorded().transferChunk(t)}_reportHeapSnapshotProgress(e){const t=this.profileBeingRecorded();if(!t)return;const i=e.data;t.updateStatus(Common.UIString("%.0f%%",i.done/i.total*100),true);if(i.finished)t._prepareToLoad()}_resetProfiles(e){const t=e.data;for(const e of this.getProfiles()){if(e.heapProfilerModel()===t)this.removeProfile(e)}}_snapshotReceived(e){if(this.profileBeingRecorded()===e)this.setProfileBeingRecorded(null);this.dispatchEventToListeners(Profiler.HeapSnapshotProfileType.SnapshotReceived,e)}};Profiler.HeapSnapshotProfileType.TypeId="HEAP";Profiler.HeapSnapshotProfileType.SnapshotReceived="SnapshotReceived";Profiler.TrackingHeapSnapshotProfileType=class extends Profiler.HeapSnapshotProfileType{constructor(){super(Profiler.TrackingHeapSnapshotProfileType.TypeId,ls`Allocation instrumentation on timeline`);this._recordAllocationStacksSetting=Common.settings.createSetting("recordAllocationStacks",false);this._customContent=null}modelAdded(e){super.modelAdded(e);e.addEventListener(SDK.HeapProfilerModel.Events.HeapStatsUpdate,this._heapStatsUpdate,this);e.addEventListener(SDK.HeapProfilerModel.Events.LastSeenObjectId,this._lastSeenObjectId,this)}modelRemoved(e){super.modelRemoved(e);e.removeEventListener(SDK.HeapProfilerModel.Events.HeapStatsUpdate,this._heapStatsUpdate,this);e.removeEventListener(SDK.HeapProfilerModel.Events.LastSeenObjectId,this._lastSeenObjectId,this)}_heapStatsUpdate(e){if(!this._profileSamples)return;const t=e.data;let i;for(let e=0;e<t.length;e+=3){i=t[e];const r=t[e+2];this._profileSamples.sizes[i]=r;if(!this._profileSamples.max[i])this._profileSamples.max[i]=r}}_lastSeenObjectId(e){const t=this._profileSamples;if(!t)return;const i=e.data;const r=Math.max(t.ids.length,t.max.length-1);t.ids[r]=i.lastSeenObjectId;if(!t.max[r]){t.max[r]=0;t.sizes[r]=0}t.timestamps[r]=i.timestamp;if(t.totalTime<i.timestamp-t.timestamps[0])t.totalTime*=2;this.dispatchEventToListeners(Profiler.TrackingHeapSnapshotProfileType.HeapStatsUpdate,this._profileSamples);this.profileBeingRecorded().updateStatus(null,true)}hasTemporaryView(){return true}get buttonTooltip(){return this._recording?ls`Stop recording heap profile`:ls`Start recording heap profile`}isInstantProfile(){return false}buttonClicked(){return this._toggleRecording()}_startRecordingProfile(){if(this.profileBeingRecorded())return;const e=this._addNewProfile();if(!e)return;e.startTrackingHeapObjects(this._recordAllocationStacksSetting.get())}customContent(){const e=UI.SettingsUI.createSettingCheckbox(ls`Record allocation stacks (extra performance overhead)`,this._recordAllocationStacksSetting,true);this._customContent=e;return e}setCustomContentEnabled(e){this._customContent.checkboxElement.disabled=!e}_addNewProfile(){const e=UI.context.flavor(SDK.HeapProfilerModel);if(!e)return null;this.setProfileBeingRecorded(new Profiler.HeapProfileHeader(e,this,undefined));this._profileSamples=new Profiler.HeapTimelineOverview.Samples;this.profileBeingRecorded()._profileSamples=this._profileSamples;this._recording=true;this.addProfile(this.profileBeingRecorded());this.profileBeingRecorded().updateStatus(Common.UIString("Recording…"));this.dispatchEventToListeners(Profiler.TrackingHeapSnapshotProfileType.TrackingStarted);return e}async _stopRecordingProfile(){this.profileBeingRecorded().updateStatus(Common.UIString("Snapshotting…"));const e=this.profileBeingRecorded().heapProfilerModel().stopTrackingHeapObjects(true);this._recording=false;this.dispatchEventToListeners(Profiler.TrackingHeapSnapshotProfileType.TrackingStopped);await e;const t=this.profileBeingRecorded();if(!t)return;t._finishLoad();this._profileSamples=null;this.setProfileBeingRecorded(null);this.dispatchEventToListeners(Profiler.ProfileType.Events.ProfileComplete,t)}_toggleRecording(){if(this._recording)this._stopRecordingProfile();else this._startRecordingProfile();return this._recording}fileExtension(){return".heaptimeline"}get treeItemTitle(){return ls`ALLOCATION TIMELINES`}get description(){return ls`
        Allocation timelines show instrumented JavaScript memory allocations over time.
        Once profile is recorded you can select a time interval to see objects that
        were allocated within it and still alive by the end of recording.
        Use this profile type to isolate memory leaks.`}_resetProfiles(e){const t=this._recording;this.setProfileBeingRecorded(null);super._resetProfiles(e);this._profileSamples=null;if(t)this._addNewProfile()}profileBeingRecordedRemoved(){this._stopRecordingProfile();this._profileSamples=null}};Profiler.TrackingHeapSnapshotProfileType.TypeId="HEAP-RECORD";Profiler.TrackingHeapSnapshotProfileType.HeapStatsUpdate="HeapStatsUpdate";Profiler.TrackingHeapSnapshotProfileType.TrackingStarted="TrackingStarted";Profiler.TrackingHeapSnapshotProfileType.TrackingStopped="TrackingStopped";Profiler.HeapProfileHeader=class extends Profiler.ProfileHeader{constructor(e,t,i){super(t,i||Common.UIString("Snapshot %d",t.nextProfileUid()));this._heapProfilerModel=e;this.maxJSObjectId=-1;this._workerProxy=null;this._receiver=null;this._snapshotProxy=null;this._loadPromise=new Promise(e=>this._fulfillLoad=e);this._totalNumberOfChunks=0;this._bufferedWriter=null;this._tempFile=null}heapProfilerModel(){return this._heapProfilerModel}getLocation(e){return this._snapshotProxy.getLocation(e)}createSidebarTreeElement(e){return new Profiler.ProfileSidebarTreeElement(e,this,"heap-snapshot-sidebar-tree-item")}createView(e){return new Profiler.HeapSnapshotView(e,this)}_prepareToLoad(){console.assert(!this._receiver,"Already loading");this._setupWorker();this.updateStatus(Common.UIString("Loading…"),true)}_finishLoad(){if(!this._wasDisposed)this._receiver.close();if(!this._bufferedWriter)return;this._didWriteToTempFile(this._bufferedWriter)}_didWriteToTempFile(e){if(this._wasDisposed){if(e)e.remove();return}this._tempFile=e;if(!e)this._failedToCreateTempFile=true;if(this._onTempFileReady){this._onTempFileReady();this._onTempFileReady=null}}_setupWorker(){function e(e){this.updateStatus(null,e.data)}console.assert(!this._workerProxy,"HeapSnapshotWorkerProxy already exists");this._workerProxy=new Profiler.HeapSnapshotWorkerProxy(this._handleWorkerEvent.bind(this));this._workerProxy.addEventListener(Profiler.HeapSnapshotWorkerProxy.Events.Wait,e,this);this._receiver=this._workerProxy.createLoader(this.uid,this._snapshotReceived.bind(this))}_handleWorkerEvent(e,t){if(HeapSnapshotModel.HeapSnapshotProgressEvent.BrokenSnapshot===e){const e=t;Common.console.error(e);return}if(HeapSnapshotModel.HeapSnapshotProgressEvent.Update!==e)return;const i=t;this.updateStatus(i)}dispose(){if(this._workerProxy)this._workerProxy.dispose();this.removeTempFile();this._wasDisposed=true}_didCompleteSnapshotTransfer(){if(!this._snapshotProxy)return;this.updateStatus(Number.bytesToString(this._snapshotProxy.totalSize),false)}transferChunk(e){if(!this._bufferedWriter)this._bufferedWriter=new Bindings.TempFile;this._bufferedWriter.write([e]);++this._totalNumberOfChunks;this._receiver.write(e)}_snapshotReceived(e){if(this._wasDisposed)return;this._receiver=null;this._snapshotProxy=e;this.maxJSObjectId=e.maxJSObjectId();this._didCompleteSnapshotTransfer();this._workerProxy.startCheckingForLongRunningCalls();this.notifySnapshotReceived()}notifySnapshotReceived(){this._fulfillLoad(this._snapshotProxy);this.profileType()._snapshotReceived(this);if(this.canSaveToFile())this.dispatchEventToListeners(Profiler.ProfileHeader.Events.ProfileReceived)}canSaveToFile(){return!this.fromFile()&&!!this._snapshotProxy}saveToFile(){const e=new Bindings.FileOutputStream;this._fileName=this._fileName||"Heap-"+(new Date).toISO8601Compact()+this.profileType().fileExtension();e.open(this._fileName).then(t.bind(this));async function t(i){if(!i)return;if(this._failedToCreateTempFile){Common.console.error("Failed to open temp file with heap snapshot");e.close();return}if(this._tempFile){const t=await this._tempFile.copyToOutputStream(e,this._onChunkTransferred.bind(this));if(t)Common.console.error("Failed to read heap snapshot from temp file: "+t.message);this._didCompleteSnapshotTransfer();return}this._onTempFileReady=t.bind(this,i);this._updateSaveProgress(0,1)}}_onChunkTransferred(e){this._updateSaveProgress(e.loadedSize(),e.fileSize())}_updateSaveProgress(e,t){const i=((t&&e/t)*100).toFixed(0);this.updateStatus(Common.UIString("Saving… %d%%",i))}async loadFromFile(e){this.updateStatus(Common.UIString("Loading…"),true);this._setupWorker();const t=new Bindings.ChunkedFileReader(e,1e7);const i=await t.read(this._receiver);if(!i)this.updateStatus(t.error().message);return i?null:t.error()}};Profiler.HeapSnapshotStatisticsView=class extends UI.VBox{constructor(){super();this.element.classList.add("heap-snapshot-statistics-view");this._pieChart=new PerfUI.PieChart({chartName:ls`Heap memory usage`,size:150,formatter:Profiler.HeapSnapshotStatisticsView._valueFormatter,showLegend:true});this._pieChart.element.classList.add("heap-snapshot-stats-pie-chart");this.element.appendChild(this._pieChart.element)}static _valueFormatter(e){return Common.UIString("%s KB",Number.withThousandsSeparator(Math.round(e/1024)))}setTotal(e){this._pieChart.setTotal(e)}addRecord(e,t,i){this._pieChart.addSlice(e,i,t)}};Profiler.HeapAllocationStackView=class extends UI.Widget{constructor(e){super();this._heapProfilerModel=e;this._linkifier=new Components.Linkifier}async setAllocatedObject(e,t){this.clear();const i=await e.allocationStack(t);if(!i){const e=this.element.createChild("div","no-heap-allocation-stack");e.createTextChild(Common.UIString("Stack was not recorded for this object because it had been allocated before this profile recording started."));return}const r=this.element.createChild("div","heap-allocation-stack");for(const e of i){const t=r.createChild("div","stack-frame");const i=t.createChild("div");i.textContent=UI.beautifyFunctionName(e.functionName);if(!e.scriptId)continue;const s=this._linkifier.linkifyScriptLocation(this._heapProfilerModel?this._heapProfilerModel.target():null,String(e.scriptId),e.scriptName,e.line-1,e.column-1);t.appendChild(s)}}clear(){this.element.removeChildren();this._linkifier.reset()}};Profiler.HeapTimelineOverview=class extends UI.VBox{constructor(){super();this.element.id="heap-recording-view";this.element.classList.add("heap-tracking-overview");this._overviewContainer=this.element.createChild("div","heap-overview-container");this._overviewGrid=new PerfUI.OverviewGrid("heap-recording");this._overviewGrid.element.classList.add("fill");this._overviewCanvas=this._overviewContainer.createChild("canvas","heap-recording-overview-canvas");this._overviewContainer.appendChild(this._overviewGrid.element);this._overviewCalculator=new Profiler.HeapTimelineOverview.OverviewCalculator;this._overviewGrid.addEventListener(PerfUI.OverviewGrid.Events.WindowChanged,this._onWindowChanged,this);this._windowLeft=0;this._windowRight=1;this._overviewGrid.setWindow(this._windowLeft,this._windowRight);this._yScale=new Profiler.HeapTimelineOverview.SmoothScale;this._xScale=new Profiler.HeapTimelineOverview.SmoothScale;this._profileSamples=new Profiler.HeapTimelineOverview.Samples}start(){this._running=true;const e=()=>{this.update();if(this._running)this.element.window().requestAnimationFrame(e)};e()}stop(){this._running=false}setSamples(e){this._profileSamples=e;if(!this._running)this.update()}_drawOverviewCanvas(e,t){if(!this._profileSamples)return;const i=this._profileSamples;const r=i.sizes;const s=i.max;const o=i.timestamps;const n=o[0];const a=this._xScale.nextScale(e/i.totalTime);let l=0;function d(e,t){let i=0;let r=0;for(let s=1;s<o.length;++s){const l=Math.floor((o[s]-n)*a);if(l!==r){if(i)t(r,i);i=0;r=l}i+=e[s]}t(r,i)}function h(e,t){l=Math.max(l,t)}d(r,h);const c=this._yScale.nextScale(l?t/(l*1.1):0);this._overviewCanvas.width=e*window.devicePixelRatio;this._overviewCanvas.height=t*window.devicePixelRatio;this._overviewCanvas.style.width=e+"px";this._overviewCanvas.style.height=t+"px";const p=this._overviewCanvas.getContext("2d");p.scale(window.devicePixelRatio,window.devicePixelRatio);if(this._running){p.beginPath();p.lineWidth=2;p.strokeStyle="rgba(192, 192, 192, 0.6)";const e=(Date.now()-n)*a;p.moveTo(e,t-1);p.lineTo(e,0);p.stroke();p.closePath()}let f;let u;const m=14;if(c){const i=(t-m)/c;u=Math.pow(1024,Math.floor(Math.log(i)/Math.log(1024)));u*=Math.pow(10,Math.floor(Math.log(i/u)/Math.LN10));if(u*5<=i)u*=5;f=Math.round(t-u*c-.5)+.5;p.beginPath();p.lineWidth=1;p.strokeStyle="rgba(0, 0, 0, 0.2)";p.moveTo(0,f);p.lineTo(e,f);p.stroke();p.closePath()}function _(e,i){p.moveTo(e,t-1);p.lineTo(e,Math.round(t-i*c-1))}p.beginPath();p.lineWidth=2;p.strokeStyle="rgba(192, 192, 192, 0.6)";d(s,_);p.stroke();p.closePath();p.beginPath();p.lineWidth=2;p.strokeStyle="rgba(0, 0, 192, 0.8)";d(r,_);p.stroke();p.closePath();if(u){const e=Number.bytesToString(u);const t=4;const i=0;const r=f-.5;const s=2*t+p.measureText(e).width;p.beginPath();p.textBaseline="bottom";p.font="10px "+window.getComputedStyle(this.element,null).getPropertyValue("font-family");p.fillStyle="rgba(255, 255, 255, 0.75)";p.fillRect(i,r-m,s,m);p.fillStyle="rgb(64, 64, 64)";p.fillText(e,i+t,r);p.fill();p.closePath()}}onResize(){this._updateOverviewCanvas=true;this._scheduleUpdate()}_onWindowChanged(){if(!this._updateGridTimerId)this._updateGridTimerId=setTimeout(this.updateGrid.bind(this),10)}_scheduleUpdate(){if(this._updateTimerId)return;this._updateTimerId=setTimeout(this.update.bind(this),10)}_updateBoundaries(){this._windowLeft=this._overviewGrid.windowLeft();this._windowRight=this._overviewGrid.windowRight();this._windowWidth=this._windowRight-this._windowLeft}update(){this._updateTimerId=null;if(!this.isShowing())return;this._updateBoundaries();this._overviewCalculator._updateBoundaries(this);this._overviewGrid.updateDividers(this._overviewCalculator);this._drawOverviewCanvas(this._overviewContainer.clientWidth,this._overviewContainer.clientHeight-20)}updateGrid(){this._updateGridTimerId=0;this._updateBoundaries();const e=this._profileSamples.ids;if(!e.length)return;const t=this._profileSamples.timestamps;const i=this._profileSamples.sizes;const r=t[0];const s=this._profileSamples.totalTime;const o=r+s*this._windowLeft;const n=r+s*this._windowRight;const a=t.lowerBound(o);const l=t.upperBound(n);let d=0;for(let e=a;e<=l;++e)d+=i[e];const h=a>0?e[a-1]:0;const c=l<e.length?e[l]:Infinity;this.dispatchEventToListeners(Profiler.HeapTimelineOverview.IdsRangeChanged,{minId:h,maxId:c,size:d})}};Profiler.HeapTimelineOverview.IdsRangeChanged=Symbol("IdsRangeChanged");Profiler.HeapTimelineOverview.SmoothScale=class{constructor(){this._lastUpdate=0;this._currentScale=0}nextScale(e){e=e||this._currentScale;if(this._currentScale){const t=Date.now();const i=t-this._lastUpdate;this._lastUpdate=t;const r=20;const s=Math.pow(r,i/1e3);const o=e/this._currentScale;this._currentScale*=Number.constrain(o,1/s,s)}else{this._currentScale=e}return this._currentScale}};Profiler.HeapTimelineOverview.Samples=class{constructor(){this.sizes=[];this.ids=[];this.timestamps=[];this.max=[];this.totalTime=3e4}};Profiler.HeapTimelineOverview.OverviewCalculator=class{_updateBoundaries(e){this._minimumBoundaries=0;this._maximumBoundaries=e._profileSamples.totalTime;this._xScaleFactor=e._overviewContainer.clientWidth/this._maximumBoundaries}computePosition(e){return(e-this._minimumBoundaries)*this._xScaleFactor}formatValue(e,t){return Number.secondsToString(e/1e3,!!t)}maximumBoundary(){return this._maximumBoundaries}minimumBoundary(){return this._minimumBoundaries}zeroTime(){return this._minimumBoundaries}boundarySpan(){return this._maximumBoundaries-this._minimumBoundaries}};Profiler.IsolateSelector=class extends UI.VBox{constructor(){super(false);this._items=new UI.ListModel;this._list=new UI.ListControl(this._items,this,UI.ListMode.NonViewport);UI.ARIAUtils.markAsListBox(this._list.element);this._list.element.tabIndex=0;UI.ARIAUtils.setAccessibleName(this._list.element,ls`JavaScript VM instances`);this.contentElement.appendChild(this._list.element);this._itemByIsolate=new Map;this._totalElement=createElementWithClass("div","profile-memory-usage-item hbox");this._totalValueDiv=this._totalElement.createChild("div","profile-memory-usage-item-size");this._totalTrendDiv=this._totalElement.createChild("div","profile-memory-usage-item-trend");this._totalElement.createChild("div").textContent=ls`Total JS heap size`;const e=Math.round(SDK.IsolateManager.MemoryTrendWindowMs/6e4);this._totalTrendDiv.title=ls`Total page JS heap size change trend over the last ${e} minutes.`;this._totalValueDiv.title=ls`Total page JS heap size across all VM instances.`;SDK.isolateManager.observeIsolates(this);SDK.targetManager.addEventListener(SDK.TargetManager.Events.NameChanged,this._targetChanged,this);SDK.targetManager.addEventListener(SDK.TargetManager.Events.InspectedURLChanged,this._targetChanged,this)}wasShown(){SDK.isolateManager.addEventListener(SDK.IsolateManager.Events.MemoryChanged,this._heapStatsChanged,this)}willHide(){SDK.isolateManager.removeEventListener(SDK.IsolateManager.Events.MemoryChanged,this._heapStatsChanged,this)}isolateAdded(e){const t=new Profiler.IsolateSelector.ListItem(e);const i=t.model().target()===SDK.targetManager.mainTarget()?0:this._items.length;this._items.insert(i,t);this._itemByIsolate.set(e,t);if(this._items.length===1)this._list.selectItem(t);this._update()}isolateChanged(e){const t=this._itemByIsolate.get(e);t.updateTitle();this._update()}isolateRemoved(e){const t=this._itemByIsolate.get(e);this._items.remove(this._items.indexOf(t));this._itemByIsolate.delete(e);this._update()}_targetChanged(e){const t=e.data;const i=t.model(SDK.RuntimeModel);if(!i)return;const r=SDK.isolateManager.isolateByModel(i);const s=r&&this._itemByIsolate.get(r);if(s)s.updateTitle()}_heapStatsChanged(e){const t=e.data;const i=this._itemByIsolate.get(t);if(i)i.updateStats();this._updateTotal()}_updateTotal(){let e=0;let t=0;for(const i of SDK.isolateManager.isolates()){e+=i.usedHeapSize();t+=i.usedHeapSizeGrowRate()}this._totalValueDiv.textContent=Number.bytesToString(e);Profiler.IsolateSelector._formatTrendElement(t,this._totalTrendDiv)}static _formatTrendElement(e,t){const i=e*1e3;const r=1024;if(Math.abs(i)<r)return;const s=Number.bytesToString(Math.abs(i));const o=i>0?ls`\u2B06${s}/s`:ls`\u2B07${s}/s`;t.classList.toggle("increasing",i>0);t.textContent=o}totalMemoryElement(){return this._totalElement}createElementForItem(e){return e.element}heightForItem(e){}isItemSelectable(e){return true}selectedItemChanged(e,t,i,r){if(i)i.classList.remove("selected");if(r)r.classList.add("selected");const s=t&&t.model();UI.context.setFlavor(SDK.HeapProfilerModel,s&&s.heapProfilerModel());UI.context.setFlavor(SDK.CPUProfilerModel,s&&s.target().model(SDK.CPUProfilerModel))}_update(){this._updateTotal();this._list.invalidateRange(0,this._items.length)}};Profiler.IsolateSelector.ListItem=class{constructor(e){this._isolate=e;const t=Math.round(SDK.IsolateManager.MemoryTrendWindowMs/6e4);this.element=createElementWithClass("div","profile-memory-usage-item hbox");UI.ARIAUtils.markAsOption(this.element);this._heapDiv=this.element.createChild("div","profile-memory-usage-item-size");this._heapDiv.title=ls`Heap size in use by live JS objects.`;this._trendDiv=this.element.createChild("div","profile-memory-usage-item-trend");this._trendDiv.title=ls`Heap size change trend over the last ${t} minutes.`;this._nameDiv=this.element.createChild("div","profile-memory-usage-item-name");UI.ARIAUtils.setLabelledBy(this.element,[this._nameDiv]);UI.ARIAUtils.setDescribedBy(this.element,[this._heapDiv,this._trendDiv]);this.updateTitle()}model(){return this._isolate.runtimeModel()}updateStats(){this._heapDiv.textContent=Number.bytesToString(this._isolate.usedHeapSize());Profiler.IsolateSelector._formatTrendElement(this._isolate.usedHeapSizeGrowRate(),this._trendDiv)}updateTitle(){const e=new Map;for(const t of this._isolate.models()){const i=t.target();const r=SDK.targetManager.mainTarget()!==i?i.name():"";const s=new Common.ParsedURL(i.inspectedURL());const o=s.isValid?s.domain():"";const n=i.decorateLabel(o&&r?`${o}: ${r}`:r||o||ls`(empty)`);e.set(n,(e.get(n)||0)+1)}this._nameDiv.removeChildren();for(const[t,i]of e){const e=i>1?`${t} (${i})`:t;this._nameDiv.appendChild(UI.html`<div title="${e}">${e}</div>`)}}};Profiler.LiveHeapProfileView=class extends UI.VBox{constructor(){super(true);this._gridNodeByUrl=new Map;this.registerRequiredCSS("profiler/liveHeapProfile.css");this._setting=Common.settings.moduleSetting("memoryLiveHeapProfile");const e=new UI.Toolbar("live-heap-profile-toolbar",this.contentElement);this._toggleRecordAction=UI.actionRegistry.action("live-heap-profile.toggle-recording");this._toggleRecordButton=UI.Toolbar.createActionButton(this._toggleRecordAction);this._toggleRecordButton.setToggled(this._setting.get());e.appendToolbarItem(this._toggleRecordButton);const t=SDK.targetManager.mainTarget();if(t&&t.model(SDK.ResourceTreeModel)){const t=UI.actionRegistry.action("live-heap-profile.start-with-reload");this._startWithReloadButton=UI.Toolbar.createActionButton(t);e.appendToolbarItem(this._startWithReloadButton)}this._dataGrid=this._createDataGrid();this._dataGrid.asWidget().show(this.contentElement);this._currentPollId=0}_createDataGrid(){const e=[{id:"size",title:ls`JS Heap`,width:"72px",fixedWidth:true,sortable:true,align:DataGrid.DataGrid.Align.Right,sort:DataGrid.DataGrid.Order.Descending,tooltip:ls`Allocated JS heap size currently in use`},{id:"isolates",title:ls`VMs`,width:"40px",fixedWidth:true,align:DataGrid.DataGrid.Align.Right,tooltip:ls`Number of VMs sharing the same script source`},{id:"url",title:ls`Script URL`,fixedWidth:false,sortable:true,tooltip:ls`URL of the script source`}];const t=new DataGrid.SortableDataGrid(e);t.setResizeMethod(DataGrid.DataGrid.ResizeMethod.Last);t.element.classList.add("flex-auto");t.element.addEventListener("keydown",this._onKeyDown.bind(this),false);t.addEventListener(DataGrid.DataGrid.Events.OpenedNode,this._revealSourceForSelectedNode,this);t.addEventListener(DataGrid.DataGrid.Events.SortingChanged,this._sortingChanged,this);for(const i of e){const e=t.headerTableHeader(i.id);if(e)e.setAttribute("title",i.tooltip)}return t}wasShown(){this._poll();this._setting.addChangeListener(this._settingChanged,this)}willHide(){++this._currentPollId;this._setting.removeChangeListener(this._settingChanged,this)}_settingChanged(e){this._toggleRecordButton.setToggled(e.data)}async _poll(){const e=this._currentPollId;do{const t=Array.from(SDK.isolateManager.isolates());const i=await Promise.all(t.map(e=>e.heapProfilerModel()&&e.heapProfilerModel().getSamplingProfile()));if(this._currentPollId!==e)return;this._update(t,i);await new Promise(e=>setTimeout(e,3e3))}while(this._currentPollId===e)}_update(e,t){const i=new Map;t.forEach((t,i)=>{if(t)o(e[i],"",t.head)});const r=this._dataGrid.rootNode();const s=new Set;for(const e of i){const t=e[0];const i=e[1].size;const o=e[1].isolates.size;if(!t){console.info(`Node with empty URL: ${i} bytes`);continue}let n=this._gridNodeByUrl.get(t);if(n){n.updateNode(i,o)}else{n=new Profiler.LiveHeapProfileView.GridNode(t,i,o);this._gridNodeByUrl.set(t,n);r.appendChild(n)}s.add(n)}for(const e of r.children.slice()){if(!s.has(e))e.remove();this._gridNodeByUrl.delete(e)}this._sortingChanged();function o(e,t,r){const s=r.callFrame.url||t||n(r)||a(r);r.children.forEach(o.bind(null,e,s));if(!r.selfSize)return;let l=i.get(s);if(!l){l={size:0,isolates:new Set};i.set(s,l)}l.size+=r.selfSize;l.isolates.add(e)}function n(e){const t=e.callFrame.functionName;return t.startsWith("(")&&t!=="(root)"?t:""}function a(e){return Number(e.callFrame.scriptId)?Common.UIString("(Anonymous Script %s)",e.callFrame.scriptId):""}}_onKeyDown(e){if(!isEnterKey(e))return;e.consume(true);this._revealSourceForSelectedNode()}_revealSourceForSelectedNode(){const e=this._dataGrid.selectedNode;if(!e||!e._url)return;const t=Workspace.workspace.uiSourceCodeForURL(e._url);if(t)Common.Revealer.reveal(t)}_sortingChanged(){const e=this._dataGrid.sortColumnId();if(!e)return;const t=(e,t)=>t._url.localeCompare(e._url);const i=(e,t)=>t._size-e._size;const r=e==="url"?t:i;this._dataGrid.sortNodes(r,this._dataGrid.isSortOrderAscending())}_toggleRecording(){const e=!this._setting.get();if(e)this._startRecording(false);else this._stopRecording()}_startRecording(e){this._setting.set(true);if(!e)return;const t=SDK.targetManager.mainTarget();if(!t)return;const i=t.model(SDK.ResourceTreeModel);if(i)i.reloadPage()}async _stopRecording(){this._setting.set(false)}};Profiler.LiveHeapProfileView.GridNode=class extends DataGrid.SortableDataGridNode{constructor(e,t,i){super();this._url=e;this._size=t;this._isolateCount=i}updateNode(e,t){if(this._size===e&&this._isolateCount===t)return;this._size=e;this._isolateCount=t;this.refresh()}createCell(e){const t=this.createTD(e);switch(e){case"url":t.textContent=this._url;break;case"size":t.textContent=Number.withThousandsSeparator(Math.round(this._size/1e3));t.createChild("span","size-units").textContent=ls`KB`;break;case"isolates":t.textContent=this._isolateCount;break}return t}};Profiler.LiveHeapProfileView.ActionDelegate=class{handleAction(e,t){(async()=>{const e="live_heap_profile";await UI.viewManager.showView(e);const i=await UI.viewManager.view(e).widget();this._innerHandleAction(i,t)})();return true}_innerHandleAction(e,t){switch(t){case"live-heap-profile.toggle-recording":e._toggleRecording();break;case"live-heap-profile.start-with-reload":e._startRecording(true);break;default:console.assert(false,`Unknown action: ${t}`)}}};Profiler.ProfileLauncherView=class extends UI.VBox{constructor(e){super();this.registerRequiredCSS("profiler/profileLauncherView.css");this._panel=e;this.element.classList.add("profile-launcher-view");this._contentElement=this.element.createChild("div","profile-launcher-view-content vbox");const t=this._contentElement.createChild("div","vbox");this._selectedProfileTypeSetting=Common.settings.createSetting("selectedProfileType","CPU");this._profileTypeHeaderElement=t.createChild("h1");this._profileTypeSelectorForm=t.createChild("form");UI.ARIAUtils.markAsRadioGroup(this._profileTypeSelectorForm);UI.ARIAUtils.setLabelledBy(this._profileTypeSelectorForm,[this._profileTypeHeaderElement]);const i=this._contentElement.createChild("div","vbox profile-isolate-selector-block");i.createChild("h1").textContent=ls`Select JavaScript VM instance`;const r=new Profiler.IsolateSelector;r.show(i.createChild("div","vbox profile-launcher-target-list"));i.appendChild(r.totalMemoryElement());const s=this._contentElement.createChild("div","hbox profile-launcher-buttons");this._controlButton=UI.createTextButton("",this._controlButtonClicked.bind(this),"",true);this._loadButton=UI.createTextButton(ls`Load`,this._loadButtonClicked.bind(this),"");s.appendChild(this._controlButton);s.appendChild(this._loadButton);this._recordButtonEnabled=true;this._typeIdToOptionElement=new Map}_loadButtonClicked(){this._panel.showLoadFromFileDialog()}_updateControls(){if(this._isEnabled&&this._recordButtonEnabled)this._controlButton.removeAttribute("disabled");else this._controlButton.setAttribute("disabled","");this._controlButton.title=this._recordButtonEnabled?"":UI.anotherProfilerActiveLabel();if(this._isInstantProfile){this._controlButton.classList.remove("running");this._controlButton.classList.add("primary-button");this._controlButton.textContent=Common.UIString("Take snapshot")}else if(this._isProfiling){this._controlButton.classList.add("running");this._controlButton.classList.remove("primary-button");this._controlButton.textContent=Common.UIString("Stop")}else{this._controlButton.classList.remove("running");this._controlButton.classList.add("primary-button");this._controlButton.textContent=Common.UIString("Start")}for(const e of this._typeIdToOptionElement.values())e.disabled=!!this._isProfiling}profileStarted(){this._isProfiling=true;this._updateControls()}profileFinished(){this._isProfiling=false;this._updateControls()}updateProfileType(e,t){this._isInstantProfile=e.isInstantProfile();this._recordButtonEnabled=t;this._isEnabled=e.isEnabled();this._updateControls()}addProfileType(e){const t=UI.createRadioLabel("profile-type",e.name);this._profileTypeSelectorForm.appendChild(t);const i=t.radioElement;this._typeIdToOptionElement.set(e.id,i);i._profileType=e;i.style.hidden=true;i.addEventListener("change",this._profileTypeChanged.bind(this,e),false);const r=this._profileTypeSelectorForm.createChild("p");r.textContent=e.description;UI.ARIAUtils.setDescribedBy(i,[r]);const s=e.customContent();if(s){this._profileTypeSelectorForm.createChild("p").appendChild(s);e.setCustomContentEnabled(false)}if(this._typeIdToOptionElement.size>1)this._profileTypeHeaderElement.textContent=ls`Select profiling type`;else this._profileTypeHeaderElement.textContent=e.name}restoreSelectedProfileType(){let e=this._selectedProfileTypeSetting.get();if(!this._typeIdToOptionElement.has(e)){e=this._typeIdToOptionElement.keys().next().value;this._selectedProfileTypeSetting.set(e)}this._typeIdToOptionElement.get(e).checked=true;const t=this._typeIdToOptionElement.get(e)._profileType;for(const[t,i]of this._typeIdToOptionElement){const r=t===e;i._profileType.setCustomContentEnabled(r)}this.dispatchEventToListeners(Profiler.ProfileLauncherView.Events.ProfileTypeSelected,t)}_controlButtonClicked(){this._panel.toggleRecord()}_profileTypeChanged(e){const t=this._selectedProfileTypeSetting.get();const i=this._typeIdToOptionElement.get(t)._profileType;i.setCustomContentEnabled(false);e.setCustomContentEnabled(true);this.dispatchEventToListeners(Profiler.ProfileLauncherView.Events.ProfileTypeSelected,e);this._isInstantProfile=e.isInstantProfile();this._isEnabled=e.isEnabled();this._updateControls();this._selectedProfileTypeSetting.set(e.id)}};Profiler.ProfileLauncherView.Events={ProfileTypeSelected:Symbol("ProfileTypeSelected")};Profiler.ProfileTypeRegistry=class{constructor(){this.cpuProfileType=new Profiler.CPUProfileType;this.heapSnapshotProfileType=new Profiler.HeapSnapshotProfileType;this.samplingHeapProfileType=new Profiler.SamplingHeapProfileType;this.samplingNativeHeapProfileType=new Profiler.SamplingNativeHeapProfileType;this.samplingNativeHeapSnapshotBrowserType=new Profiler.SamplingNativeHeapSnapshotBrowserType;this.samplingNativeHeapSnapshotRendererType=new Profiler.SamplingNativeHeapSnapshotRendererType;this.trackingHeapSnapshotProfileType=new Profiler.TrackingHeapSnapshotProfileType}};Profiler.ProfileTypeRegistry.instance=new Profiler.ProfileTypeRegistry;Runtime.cachedResources["profiler/heapProfiler.css"]='/*\n * Copyright (C) 2009 Google Inc. All rights reserved.\n * Copyright (C) 2010 Apple Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n.heap-snapshot-view {\n    overflow: hidden;\n}\n\n.heap-snapshot-view .data-grid {\n    border: none;\n}\n\n.heap-snapshot-view .data-grid tr:empty {\n    height: 16px;\n    visibility: hidden;\n}\n\n.heap-snapshot-view .data-grid span.percent-column {\n    width: 35px !important;\n}\n\n.heap-snapshot-view .object-value-object,\n.object-value-node {\n    display: inline;\n    position: static;\n}\n\n.heap-snapshot-view .object-value-string {\n    white-space: nowrap;\n}\n\n.heap-snapshot-view td.object-column .objects-count {\n    margin-left: 10px;\n    font-size: 11px;\n    color: grey;\n}\n\n.heap-snapshot-view tr:not(.selected) .object-value-id {\n    color: grey;\n}\n\n.heap-snapshot-view .data-grid {\n    flex: auto;\n}\n\n.profile-view .heap-tracking-overview {\n    flex: 0 0 80px;\n    height: 80px;\n}\n\n.heap-snapshot-view .retaining-paths-view {\n    overflow: hidden;\n}\n\n.heap-snapshot-view .heap-snapshot-view-resizer {\n    background-image: url(Images/toolbarResizerVertical.png);\n    background-color: #eee;\n    border-bottom: 1px solid rgb(179, 179, 179);\n    background-repeat: no-repeat;\n    background-position: right center, center;\n    flex: 0 0 21px;\n}\n\n.heap-snapshot-view .heap-snapshot-view-resizer .title > span {\n    display: inline-block;\n    padding-top: 3px;\n    vertical-align: middle;\n    margin-left: 4px;\n    margin-right: 8px;\n}\n\n.heap-snapshot-view .heap-snapshot-view-resizer * {\n    pointer-events: none;\n}\n\n.heap-snapshot-view tr:not(.selected) td.object-column span.highlight {\n    background-color: inherit;\n}\n\n.heap-snapshot-view td.object-column > div > span {\n    margin-right: 6px;\n}\n\n.heap-snapshot-view td.object-column span.heap-object-source-link {\n    float: right;\n}\n\n.heap-snapshot-view td.object-column span.heap-object-source-link:empty {\n    animation: fadeInOut 2s infinite;\n}\n\n.heap-snapshot-view td.object-column span.heap-object-source-link:empty:before {\n    content: "\\b7\\b7";\n    font-weight: bold;\n}\n\n@keyframes fadeInOut {\n    0% {\n        transform: rotate(0);\n    }\n    50% {\n        transform: rotate(0.5turn);\n    }\n    100% {\n        transform: rotate(1turn);\n    }\n}\n\n.heap-snapshot-view tr:not(.selected) td.object-column span.heap-object-tag {\n    color: #888;\n}\n\n.heap-snapshot-view td.object-column span.grayed {\n    color: gray;\n}\n\n.cycled-ancessor-node {\n    opacity: 0.6;\n}\n\n#heap-recording-view .profile-view {\n    top: 80px;\n}\n\n.heap-overview-container {\n    overflow: hidden;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 80px;\n}\n\n#heap-recording-overview-grid .resources-dividers-label-bar {\n    pointer-events: auto;\n}\n\n#heap-recording-overview-container {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n}\n\n.heap-recording-overview-canvas {\n    position: absolute;\n    top: 20px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n.heap-snapshot-statistics-view {\n    overflow: auto;\n}\n\n.heap-snapshot-stats-pie-chart {\n    margin: 12px 30px;\n    flex-shrink: 0;\n}\n\n.heap-allocation-stack .stack-frame {\n    display: flex;\n    justify-content: space-between;\n    border-bottom: 1px solid rgb(240, 240, 240);\n    padding: 2px;\n}\n\n.heap-allocation-stack .stack-frame .devtools-link {\n    color: rgb(33%, 33%, 33%);\n}\n\n.no-heap-allocation-stack {\n    padding: 5px;\n}\n';Runtime.cachedResources["profiler/liveHeapProfile.css"]="/*\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.data-grid {\n    border: none;\n}\n\n.data-grid td .size-units {\n    margin-left: 4px;\n    font-size: 75%;\n}\n\n.data-grid tr:not(.selected) td .size-units {\n    color: #999;\n}\n\n.toolbar {\n    border-bottom: 1px solid #ccc;\n}";Runtime.cachedResources["profiler/profileLauncherView.css"]="/*\n * Copyright 2018 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.profile-launcher-view {\n    overflow: auto;\n}\n\n.profile-launcher-view-content {\n    margin: 10px 16px;\n    flex: auto 1 0;\n}\n\n.profile-launcher-view-content h1 {\n    font-size: 15px;\n    font-weight: normal;\n    margin: 6px 0 10px 0;\n}\n\n.profile-launcher-view-content [is=dt-radio] {\n    font-size: 13px;\n}\n\n.profile-launcher-view-content p {\n    color: hsl(0, 0%, 45%);\n    margin-top: 1px;\n    margin-left: 22px;\n}\n\n.profile-launcher-view-content p [is=dt-checkbox] {\n    display: flex;\n}\n\n.profile-launcher-view-content button.running {\n    color: hsl(0, 100%, 58%);\n}\n\n.profile-launcher-view-content button.running:hover {\n    color: hsl(0, 100%, 42%);\n}\n\nbody.inactive .profile-launcher-view-content button.running:not(.toolbar-item) {\n    color: rgb(220, 130, 130);\n}\n\n.profile-launcher-view-content > div {\n    flex: auto 0 0;\n}\n\n.profile-launcher-view-content > .profile-isolate-selector-block {\n    flex: auto 1 0;\n}\n\n.profile-isolate-selector-block button {\n    min-width: 110px;\n}\n\n.profile-launcher-target-list {\n    margin-bottom: 6px;\n    border: 1px solid #ddd;\n    flex: 150px 1 0;\n}\n\n.profile-memory-usage-item {\n    padding: 4px;\n    line-height: 16px;\n    border-left: 3px solid transparent;\n    overflow-x: hidden;\n}\n\n.profile-launcher-target-list .profile-memory-usage-item:hover {\n    background-color: hsla(0, 0%, 0%, 0.05);\n}\n\n.profile-memory-usage-item.selected {\n    border-color: #4285f4;\n    background-color: #4285f420;\n}\n\n.profile-memory-usage-item > div {\n    flex-shrink: 0;\n    margin-right: 12px;\n}\n\n.profile-memory-usage-item-size {\n    width: 60px;\n    text-align: right;\n}\n\n.profile-memory-usage-item-trend {\n    width: 80px;\n    color: green;\n}\n\n.profile-memory-usage-item-trend.increasing {\n    color: red;\n}\n\n.profile-isolate-selector-block > .profile-memory-usage-item {\n    margin-left: 1px;\n    margin-bottom: 4px;\n    font-weight: bolder;\n}\n\n.profile-launcher-buttons {\n    flex-wrap: wrap;\n}\n\n.profile-launcher-buttons button {\n    min-width: 120px;\n    height: 28px;\n    margin: 4px 16px 4px 0;\n}\n";Runtime.cachedResources["profiler/profilesPanel.css"]='/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Anthony Ricaud <rik@webkit.org>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. ("Apple") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* Profiler Style */\n\n#profile-views {\n    flex: auto;\n    position: relative;\n}\n\n.profile-view .data-grid table.data {\n    background: white;\n}\n\n.profile-view .data-grid tr:not(.selected) .highlight {\n    background-color: rgb(255, 230, 179);\n}\n\n.profile-view .data-grid tr:hover td:not(.bottom-filler-td) {\n    background-color: rgba(0, 0, 0, 0.1);\n}\n\n.profile-view .data-grid td.numeric-column {\n    text-align: right;\n}\n\n.profile-view .data-grid div.profile-multiple-values {\n    float: right;\n}\n\n.profile-view .data-grid span.percent-column {\n    color: #999;\n    width: 50px;\n    display: inline-block;\n}\n\n.profile-view .data-grid tr.selected span {\n    color: inherit;\n}\n\n.profiles-toolbar {\n    background-color: var(--toolbar-bg-color);\n    border-bottom: 1px solid #ccc;\n    flex-shrink: 0;\n}\n\n.profiles-tree-sidebar {\n    flex: auto;\n    overflow: hidden;\n}\n\n.profiles-sidebar-tree-box {\n    overflow-y: auto;\n}\n\n.profile-view {\n    display: flex;\n    overflow: hidden;\n}\n\n.profile-view .data-grid {\n    border: none;\n    flex: auto;\n}\n\n.profile-view .data-grid th.self-column,\n.profile-view .data-grid th.total-column {\n    text-align: center;\n}\n\n.profile-node-file {\n    float: right;\n    color: gray;\n}\n\n.profile-warn-marker {\n    vertical-align: -1px;\n    margin-right: 2px;\n}\n\n.data-grid tr.selected .profile-node-file {\n    color: rgb(33%, 33%, 33%);\n}\n\n.data-grid:focus tr.selected .profile-node-file {\n    color: white;\n}\n\n.highlighted-row {\n    -webkit-animation: row_highlight 2s 0s;\n}\n\n@-webkit-keyframes row_highlight {\n    from {background-color: rgba(255, 255, 120, 1); }\n    to { background-color: rgba(255, 255, 120, 0); }\n}\n\n.cpu-profile-flame-chart-overview-container {\n    overflow: hidden;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 80px;\n}\n\n#cpu-profile-flame-chart-overview-container {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.3);\n}\n\n.cpu-profile-flame-chart-overview-canvas {\n    position: absolute;\n    top: 20px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n#cpu-profile-flame-chart-overview-grid .resources-dividers-label-bar {\n    pointer-events: auto;\n}\n\n.cpu-profile-flame-chart-overview-pane {\n    flex: 0 0 80px !important;\n}\n\n.profile-text-view {\n    padding: 10px;\n    overflow: auto;\n    margin: 0;\n    user-select: text;\n    cursor: text;\n}\n';Runtime.cachedResources["profiler/profilesSidebarTree.css"]='/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n/* Tree outline overrides */\n\n:host {\n    padding: 0;\n}\n\nol.tree-outline {\n    overflow: auto;\n    flex: auto;\n    padding: 0;\n    margin: 0;\n}\n\n.tree-outline li {\n    height: 36px;\n    padding-right: 5px;\n    margin-top: 1px;\n    line-height: 34px;\n    border-top: 1px solid transparent;\n}\n\n.tree-outline li:not(.parent)::before {\n    display: none;\n}\n\n:host-context(.some-expandable) .tree-outline li:not(.parent) {\n    margin-left: 10px;\n}\n\n.tree-outline li.profiles-tree-section {\n    height: 18px;\n    padding: 0 10px;\n    white-space: nowrap;\n    margin-top: 1px;\n    color: rgb(92, 110, 129);\n    text-shadow: rgba(255, 255, 255, 0.75) 0 1px 0;\n    line-height: 18px;\n}\n\n.tree-outline li.profiles-tree-section::before {\n    display: none;\n}\n\n.tree-outline ol {\n    overflow: hidden;\n}\n\n/* Generic items styling */\n\n.title-container > .save-link {\n    text-decoration: underline;\n    margin-left: auto;\n    display: none;\n}\n\nli.selected .title-container > .save-link {\n    display: block;\n    cursor: pointer;\n}\n\n.tree-outline > .icon {\n    margin-left: 16px;\n}\n\nli .icon {\n    width: 32px;\n    height: 32px;\n    margin-top: 1px;\n    margin-right: 3px;\n    flex: none;\n}\n\nli.wait .icon {\n    content: none;\n}\n\nli.wait .icon::before {\n    display: block;\n    width: 24px;\n    height: 24px;\n    margin: 4px;\n    border: 3px solid grey;\n    border-radius: 12px;\n    clip: rect(0, 15px, 15px, 0);\n    content: "";\n    position: absolute;\n    -webkit-animation: spinner-animation 1s linear infinite;\n    box-sizing: border-box;\n}\n\nli.wait.small .icon::before {\n    width: 14px;\n    height: 14px;\n    margin: 1px;\n    clip: rect(0, 9px, 9px, 0);\n    border-width: 2px;\n}\n\nli.wait.selected .icon::before {\n    border-color: white;\n}\n\n@-webkit-keyframes spinner-animation {\n    from { transform: rotate(0); }\n    to { transform: rotate(360deg); }\n}\n\nli.small {\n    height: 20px;\n}\n\nli.small .icon {\n    width: 16px;\n    height: 16px;\n}\n\nli .titles {\n    display: flex;\n    flex-direction: column;\n    top: 5px;\n    line-height: 12px;\n    padding-bottom: 1px;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    flex: auto;\n}\n\nli .titles > .title-container {\n    display: flex;\n}\n\nli.small .titles {\n    top: 2px;\n    line-height: normal;\n}\n\nli:not(.small) .title::after {\n    content: "\\A";\n    white-space: pre;\n}\n\nli .subtitle {\n    font-size: 80%;\n}\n\nli.small .subtitle {\n    display: none;\n}\n\n/* Heap profiles */\n\n.heap-snapshot-sidebar-tree-item .icon {\n    content: url(Images/profileIcon.png);\n}\n\n.heap-snapshot-sidebar-tree-item.small .icon {\n    content: url(Images/profileSmallIcon.png);\n}\n\n/* Launcher */\n\n.profile-launcher-view-tree-item {\n    margin-left: 0 !important;\n}\n\n.profile-launcher-view-tree-item > .icon {\n    width: 8px !important;\n    visibility: hidden;\n}\n\n/* CPU profiles */\n\n.profile-sidebar-tree-item .icon {\n    content: url(Images/profileIcon.png);\n}\n\n.profile-sidebar-tree-item.small .icon {\n    content: url(Images/profileSmallIcon.png);\n}\n\n.profile-group-sidebar-tree-item .icon {\n    content: url(Images/profileGroupIcon.png);\n}\n';