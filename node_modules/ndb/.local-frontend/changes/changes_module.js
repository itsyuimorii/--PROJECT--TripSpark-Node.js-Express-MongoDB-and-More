self["Changes"]=self["Changes"]||{};Changes.ChangesHighlighter=function(e,t){const i=t.diffRows;const n=t.baselineLines;const s=t.currentLines;const o=CodeMirror.getMode({},t.mimeType);function r(e,t,i){if(t>e.baselineLineNumber){a(e.baselineSyntaxState,e.baselineLineNumber,t,n);e.baselineLineNumber=t}if(i>e.currentLineNumber){a(e.currentSyntaxState,e.currentLineNumber,i,s);e.currentLineNumber=i}}function a(e,t,i,n){let s=t;while(s<i&&s<n.length){const t=new CodeMirror.StringStream(n[s]);if(t.eol()&&o.blankLine)o.blankLine(e);while(!t.eol()){o.token(t,e);t.start=t.pos}s++}}return{startState:function(){return{rowNumber:0,diffTokenIndex:0,currentLineNumber:0,baselineLineNumber:0,currentSyntaxState:CodeMirror.startState(o),baselineSyntaxState:CodeMirror.startState(o),syntaxPosition:0,diffPosition:0,syntaxStyle:"",diffStyle:""}},token:function(e,t){const n=i[t.rowNumber];if(!n){e.next();return""}r(t,n.baselineLineNumber-1,n.currentLineNumber-1);let s="";if(e.pos===0)s+=" line-background-"+n.type+" line-"+n.type;const a=t.diffPosition>=t.syntaxPosition;if(t.diffPosition<=t.syntaxPosition){t.diffPosition+=n.tokens[t.diffTokenIndex].text.length;t.diffStyle=n.tokens[t.diffTokenIndex].className;t.diffTokenIndex++}if(a){if(n.type===Changes.ChangesView.RowType.Deletion||n.type===Changes.ChangesView.RowType.Addition||n.type===Changes.ChangesView.RowType.Equal){t.syntaxStyle=o.token(e,n.type===Changes.ChangesView.RowType.Deletion?t.baselineSyntaxState:t.currentSyntaxState);t.syntaxPosition=e.pos}else{t.syntaxStyle="";t.syntaxPosition=Infinity}}e.pos=Math.min(t.syntaxPosition,t.diffPosition);s+=" "+t.syntaxStyle;s+=" "+t.diffStyle;if(e.eol()){t.rowNumber++;if(n.type===Changes.ChangesView.RowType.Deletion)t.baselineLineNumber++;else t.currentLineNumber++;t.diffPosition=0;t.syntaxPosition=0;t.diffTokenIndex=0}return s},blankLine:function(e){const t=i[e.rowNumber];e.rowNumber++;e.syntaxPosition=0;e.diffPosition=0;e.diffTokenIndex=0;if(!t)return"";let n="";if(o.blankLine){if(t.type===Changes.ChangesView.RowType.Equal||t.type===Changes.ChangesView.RowType.Addition){n=o.blankLine(e.currentSyntaxState);e.currentLineNumber++}else if(t.type===Changes.ChangesView.RowType.Deletion){n=o.blankLine(e.baselineSyntaxState);e.baselineLineNumber++}}return n+" line-background-"+t.type+" line-"+t.type},copyState:function(e){const t=Object.assign({},e);t.currentSyntaxState=CodeMirror.copyState(o,e.currentSyntaxState);t.baselineSyntaxState=CodeMirror.copyState(o,e.baselineSyntaxState);return t}}};Changes.ChangesHighlighter.DiffState;CodeMirror.defineMode("devtools-diff",Changes.ChangesHighlighter);Changes.ChangesView=class extends UI.VBox{constructor(){super(true);this.registerRequiredCSS("changes/changesView.css");const e=new UI.SplitWidget(true,false);const t=new UI.Widget;e.setMainWidget(t);e.show(this.contentElement);this._emptyWidget=new UI.EmptyWidget("");this._emptyWidget.show(t.element);this._workspaceDiff=WorkspaceDiff.workspaceDiff();this._changesSidebar=new Changes.ChangesSidebar(this._workspaceDiff);this._changesSidebar.addEventListener(Changes.ChangesSidebar.Events.SelectedUISourceCodeChanged,this._selectedUISourceCodeChanged,this);e.setSidebarWidget(this._changesSidebar);this._selectedUISourceCode=null;this._diffRows=[];this._maxLineDigits=1;this._editor=new TextEditor.CodeMirrorTextEditor({lineNumbers:true,lineWrapping:false,maxHighlightLength:Infinity});this._editor.setReadOnly(true);this._editor.show(t.element.createChild("div","editor-container"));this._editor.hideWidget();this._editor.element.addEventListener("click",this._click.bind(this),false);this._toolbar=new UI.Toolbar("changes-toolbar",t.element);const i=new UI.ToolbarButton(Common.UIString("Revert all changes"),"largeicon-undo");i.addEventListener(UI.ToolbarButton.Events.Click,this._revert.bind(this));this._toolbar.appendToolbarItem(i);this._diffStats=new UI.ToolbarText("");this._toolbar.appendToolbarItem(this._diffStats);this._toolbar.setEnabled(false);this._hideDiff(ls`No changes`);this._selectedUISourceCodeChanged()}_selectedUISourceCodeChanged(){this._revealUISourceCode(this._changesSidebar.selectedUISourceCode())}_revert(){const e=this._selectedUISourceCode;if(!e)return;this._workspaceDiff.revertToOriginal(e)}_click(e){const t=this._editor.selection();if(!t.isEmpty())return;const i=this._diffRows[t.startLine];Common.Revealer.reveal(this._selectedUISourceCode.uiLocation(i.currentLineNumber-1,t.startColumn),false);e.consume(true)}_revealUISourceCode(e){if(this._selectedUISourceCode===e)return;if(this._selectedUISourceCode)this._workspaceDiff.unsubscribeFromDiffChange(this._selectedUISourceCode,this._refreshDiff,this);if(e&&this.isShowing())this._workspaceDiff.subscribeToDiffChange(e,this._refreshDiff,this);this._selectedUISourceCode=e;this._refreshDiff()}wasShown(){this._refreshDiff()}_refreshDiff(){if(!this.isShowing())return;if(!this._selectedUISourceCode){this._renderDiffRows(null);return}const e=this._selectedUISourceCode;if(!e.contentType().isTextType()){this._hideDiff(ls`Binary data`);return}this._workspaceDiff.requestDiff(e).then(t=>{if(this._selectedUISourceCode!==e)return;this._renderDiffRows(t)})}_hideDiff(e){this._diffStats.setText("");this._toolbar.setEnabled(false);this._editor.hideWidget();this._emptyWidget.text=e;this._emptyWidget.showWidget()}_renderDiffRows(e){this._diffRows=[];if(!e||e.length===1&&e[0][0]===Diff.Diff.Operation.Equal){this._hideDiff(ls`No changes`);return}let t=0;let i=0;let n=0;let s=0;const o=3;const r=[];const a=[];for(let n=0;n<e.length;++n){const s=e[n];switch(s[0]){case Diff.Diff.Operation.Equal:this._diffRows.pushAll(l(s[1],n===0,n===e.length-1));r.pushAll(s[1]);a.pushAll(s[1]);break;case Diff.Diff.Operation.Insert:for(const e of s[1])this._diffRows.push(f(e,Changes.ChangesView.RowType.Addition));t+=s[1].length;a.pushAll(s[1]);break;case Diff.Diff.Operation.Delete:i+=s[1].length;r.pushAll(s[1]);if(e[n+1]&&e[n+1][0]===Diff.Diff.Operation.Insert){n++;this._diffRows.pushAll(c(s[1].join("\n"),e[n][1].join("\n")));t+=e[n][1].length;a.pushAll(e[n][1])}else{for(const e of s[1])this._diffRows.push(f(e,Changes.ChangesView.RowType.Deletion))}break}}this._maxLineDigits=Math.ceil(Math.log10(Math.max(n,s)));let d="";if(t===1)d=ls`${t} insertion (+),`;else d=ls`${t} insertions (+),`;let h="";if(i===1)h=ls`${i} deletion (-)`;else h=ls`${i} deletions (-)`;this._diffStats.setText(`${d} ${h}`);this._toolbar.setEnabled(true);this._emptyWidget.hideWidget();this._editor.operation(()=>{this._editor.showWidget();this._editor.setHighlightMode({name:"devtools-diff",diffRows:this._diffRows,mimeType:this._selectedUISourceCode.mimeType(),baselineLines:r,currentLines:a});this._editor.setText(this._diffRows.map(e=>e.tokens.map(e=>e.text).join("")).join("\n"));this._editor.setLineNumberFormatter(this._lineFormatter.bind(this))});function l(e,t,i){const r=[];if(!t){for(let t=0;t<o&&t<e.length;t++)r.push(f(e[t],Changes.ChangesView.RowType.Equal));if(e.length>o*2+1&&!i){r.push(f(Common.UIString("( … Skipping %d matching lines … )",e.length-o*2),Changes.ChangesView.RowType.Spacer))}}if(!i){const i=Math.max(e.length-o-1,t?0:o);let a=e.length-o-1;if(!t)a-=o;if(a>0){s+=a;n+=a}for(let t=i;t<e.length;t++)r.push(f(e[t],Changes.ChangesView.RowType.Equal))}return r}function c(e,t){const i=Diff.Diff.charDiff(e,t,true);const n=[f("",Changes.ChangesView.RowType.Deletion)];const s=[f("",Changes.ChangesView.RowType.Addition)];for(const e of i){const t=e[1];const i=e[0];const o=i===Diff.Diff.Operation.Equal?"":"inner-diff";const r=t.split("\n");for(let e=0;e<r.length;e++){if(e>0&&i!==Diff.Diff.Operation.Insert)n.push(f("",Changes.ChangesView.RowType.Deletion));if(e>0&&i!==Diff.Diff.Operation.Delete)s.push(f("",Changes.ChangesView.RowType.Addition));if(!r[e])continue;if(i!==Diff.Diff.Operation.Insert)n[n.length-1].tokens.push({text:r[e],className:o});if(i!==Diff.Diff.Operation.Delete)s[s.length-1].tokens.push({text:r[e],className:o})}}return n.concat(s)}function f(e,t){if(t===Changes.ChangesView.RowType.Addition)n++;if(t===Changes.ChangesView.RowType.Deletion)s++;if(t===Changes.ChangesView.RowType.Equal){s++;n++}return{baselineLineNumber:s,currentLineNumber:n,tokens:e?[{text:e,className:"inner-diff"}]:[],type:t}}}_lineFormatter(e){const t=this._diffRows[e-1];let i=t.type===Changes.ChangesView.RowType.Deletion;let n=t.type===Changes.ChangesView.RowType.Addition;if(t.type===Changes.ChangesView.RowType.Equal){i=true;n=true}const s=i?numberToStringWithSpacesPadding(t.baselineLineNumber,this._maxLineDigits):spacesPadding(this._maxLineDigits);const o=n?numberToStringWithSpacesPadding(t.currentLineNumber,this._maxLineDigits):spacesPadding(this._maxLineDigits);return s+spacesPadding(1)+o}};Changes.ChangesView.Row;Changes.ChangesView.RowType={Deletion:"deletion",Addition:"addition",Equal:"equal",Spacer:"spacer"};Changes.ChangesView.DiffUILocationRevealer=class{async reveal(e,t){if(!(e instanceof WorkspaceDiff.DiffUILocation))throw new Error("Internal error: not a diff ui location");const i=self.runtime.sharedInstance(Changes.ChangesView);await UI.viewManager.showView("changes.changes");i._changesSidebar.selectUISourceCode(e.uiSourceCode,t)}};Changes.ChangesSidebar=class extends UI.Widget{constructor(e){super();this._treeoutline=new UI.TreeOutlineInShadow;this._treeoutline.registerRequiredCSS("changes/changesSidebar.css");this._treeoutline.setComparator((e,t)=>e.titleAsText().compareTo(t.titleAsText()));this._treeoutline.addEventListener(UI.TreeOutline.Events.ElementSelected,this._selectionChanged,this);this.element.appendChild(this._treeoutline.element);this._treeElements=new Map;this._workspaceDiff=e;this._workspaceDiff.modifiedUISourceCodes().forEach(this._addUISourceCode.bind(this));this._workspaceDiff.addEventListener(WorkspaceDiff.Events.ModifiedStatusChanged,this._uiSourceCodeMofiedStatusChanged,this)}selectUISourceCode(e,t){const i=this._treeElements.get(e);if(!i)return;i.select(t)}selectedUISourceCode(){return this._treeoutline.selectedTreeElement?this._treeoutline.selectedTreeElement.uiSourceCode:null}_selectionChanged(){this.dispatchEventToListeners(Changes.ChangesSidebar.Events.SelectedUISourceCodeChanged)}_uiSourceCodeMofiedStatusChanged(e){if(e.data.isModified)this._addUISourceCode(e.data.uiSourceCode);else this._removeUISourceCode(e.data.uiSourceCode)}_removeUISourceCode(e){const t=this._treeElements.get(e);this._treeElements.delete(e);if(this._treeoutline.selectedTreeElement===t){const e=t.previousSibling||t.nextSibling;if(e){e.select(true)}else{t.deselect();this._selectionChanged()}}this._treeoutline.removeChild(t);t.dispose()}_addUISourceCode(e){const t=new Changes.ChangesSidebar.UISourceCodeTreeElement(e);this._treeElements.set(e,t);this._treeoutline.appendChild(t);if(!this._treeoutline.selectedTreeElement)t.select(true)}};Changes.ChangesSidebar.Events={SelectedUISourceCodeChanged:Symbol("SelectedUISourceCodeChanged")};Changes.ChangesSidebar.UISourceCodeTreeElement=class extends UI.TreeElement{constructor(e){super();this.uiSourceCode=e;this.listItemElement.classList.add("navigator-"+e.contentType().name()+"-tree-item");let t="largeicon-navigator-file";if(Snippets.isSnippetsUISourceCode(this.uiSourceCode))t="largeicon-navigator-snippet";const i=UI.Icon.create(t,"icon");this.setLeadingIcons([i]);this._eventListeners=[e.addEventListener(Workspace.UISourceCode.Events.TitleChanged,this._updateTitle,this),e.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged,this._updateTitle,this),e.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted,this._updateTitle,this)];this._updateTitle()}_updateTitle(){let e=this.uiSourceCode.displayName();if(this.uiSourceCode.isDirty())e="*"+e;this.title=e;let t=this.uiSourceCode.url();if(this.uiSourceCode.contentType().isFromSourceMap())t=Common.UIString("%s (from source map)",this.uiSourceCode.displayName());this.tooltip=t}dispose(){Common.EventTarget.removeEventListeners(this._eventListeners)}};Runtime.cachedResources["changes/changesView.css"]="/*\n * Copyright (c) 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n[slot=insertion-point-main]{\n    flex-direction: column;\n    display: flex;\n}\n\n[slot=insertion-point-sidebar] {\n    overflow: auto;\n}\n\n.editor-container{\n    flex: 1;\n}\n\n:focus.selected {\n    background-color: var(--selection-bg-color);\n    color: #FFF;\n}\n\n.CodeMirror-lines:not(:active) {\n    cursor: default !important;\n}\n\n.CodeMirror-line:hover {\n    cursor: default !important;\n    background-color: rgba(0,0,255,0.05);\n}\n\n.CodeMirror .CodeMirror-linebackground.spacer {\n    text-align: center;\n    color: rgba(0, 0, 0, 0.5);\n    background-color: rgba(0, 0, 255, 0.1);\n}\n\n.CodeMirror .equal > span > span {\n    opacity: .5;\n}\n\n.CodeMirror .CodeMirror-selectedtext:not(.CodeMirror-persist-highlight) {\n    opacity: 1.0;\n}\n\n.CodeMirror .CodeMirror-linebackground.addition, -theme-preserve {\n    background-color: hsla(144, 55%, 49%, .2);\n}\n\n.CodeMirror .CodeMirror-linebackground.deletion, -theme-preserve {\n    background-color: rgba(255, 0, 0, .2);\n}\n\n.CodeMirror .addition .cm-inner-diff:not(.CodeMirror-selectedtext), -theme-preserve {\n    background-color: hsla(144, 55%, 49%, .3);\n}\n\n.CodeMirror .deletion .cm-inner-diff:not(.CodeMirror-selectedtext), -theme-preserve {\n    background-color: rgba(255, 0, 0, .3);\n}\n\n.changes-toolbar {\n    background-color: var(--toolbar-bg-color);\n    border-top: var(--divider-border);\n}\n";Runtime.cachedResources["changes/changesSidebar.css"]="li .icon {\n  margin: -3px -5px -3px -5px;\n  background: linear-gradient(45deg, hsl(0, 0%, 50%), hsl(0, 0%, 70%));\n}\n\n.tree-outline li {\n  min-height: 20px;\n}\n\n.tree-outline li:hover:not(.selected) .selection {\n  display: block;\n  background-color: rgba(56, 121, 217, 0.1);\n}\n\n.navigator-fs-tree-item .icon{\n  background: linear-gradient(45deg, hsl(28, 75%, 50%), hsl(28, 75%, 70%));\n}\n\n.navigator-sm-script-tree-item .icon,\n.navigator-script-tree-item .icon,\n.navigator-snippet-tree-item .icon {\n  background: linear-gradient(45deg, hsl(48, 70%, 50%), hsl(48, 70%, 70%));\n}\n\n.navigator-sm-stylesheet-tree-item .icon,\n.navigator-stylesheet-tree-item .icon {\n  background: linear-gradient(45deg, hsl(256, 50%, 50%), hsl(256, 50%, 70%));\n}\n\n.navigator-image-tree-item .icon,\n.navigator-font-tree-item .icon {\n  background: linear-gradient(45deg, hsl(109, 33%, 50%), hsl(109, 33%, 70%));\n}";