self["Settings"]=self["Settings"]||{};Settings.SettingsScreen=class extends UI.VBox{constructor(){super(true);this.registerRequiredCSS("settings/settingsScreen.css");this.contentElement.tabIndex=0;this.contentElement.classList.add("settings-window-main");this.contentElement.classList.add("vbox");const t=createElement("div");const e=UI.createShadowRootWithCoreStyles(t,"settings/settingsScreen.css").createChild("div","settings-window-title");UI.ARIAUtils.markAsHeading(e,1);e.textContent=ls`Settings`;this._tabbedLocation=UI.viewManager.createTabbedLocation(()=>Settings.SettingsScreen._showSettingsScreen(),"settings-view");const n=this._tabbedLocation.tabbedPane();n.leftToolbar().appendToolbarItem(new UI.ToolbarItem(t));n.setShrinkableTabs(false);n.makeVerticalTabLayout();const i=new UI.SimpleView(ls`Shortcuts`);UI.shortcutsScreen.createShortcutsTabView().show(i.element);this._tabbedLocation.appendView(i);n.show(this.contentElement);this.element.addEventListener("keydown",this._keyDown.bind(this),false);this._developerModeCounter=0;this.setDefaultFocusedElement(this.contentElement)}static _showSettingsScreen(t){const e=self.runtime.sharedInstance(Settings.SettingsScreen);if(e.isShowing())return;const n=new UI.Dialog(true);n.addCloseButton();e.show(n.contentElement);n.show();e._selectTab(t||"preferences")}resolveLocation(t){return this._tabbedLocation}_selectTab(t){UI.viewManager.showView(t)}_keyDown(t){const e=16;if(t.keyCode===e&&++this._developerModeCounter>5)this.contentElement.classList.add("settings-developer-mode")}};Settings.SettingsTab=class extends UI.VBox{constructor(t,e){super();this.element.classList.add("settings-tab-container");if(e)this.element.id=e;const n=this.element.createChild("header");n.createChild("h1").createTextChild(t);this.containerElement=this.element.createChild("div","settings-container-wrapper").createChild("div","settings-tab settings-content settings-container")}_appendSection(t){const e=this.containerElement.createChild("div","settings-block");if(t){UI.ARIAUtils.markAsGroup(e);const n=e.createChild("div","settings-section-title");n.textContent=t;UI.ARIAUtils.markAsHeading(n,2);UI.ARIAUtils.setLabelledBy(e,[n])}return e}};Settings.GenericSettingsTab=class extends Settings.SettingsTab{constructor(){super(Common.UIString("Preferences"),"preferences-tab-content");const t=["","Appearance","Sources","Elements","Network","Performance","Console","Extensions"];this._nameToSection=new Map;for(const e of t)this._sectionElement(e);self.runtime.extensions("setting").forEach(this._addSetting.bind(this));self.runtime.extensions(UI.SettingUI).forEach(this._addSettingUI.bind(this));this._appendSection().appendChild(UI.createTextButton(Common.UIString("Restore defaults and reload"),e));function e(){Common.settings.clearAll();Components.reload()}}static isSettingVisible(t){const e=t.descriptor();if(!("title"in e))return false;if(!("category"in e))return false;return true}_addSetting(t){if(!Settings.GenericSettingsTab.isSettingVisible(t))return;const e=this._sectionElement(t.descriptor()["category"]);const n=Common.moduleSetting(t.descriptor()["settingName"]);const i=UI.SettingsUI.createControlForSetting(n);if(i)e.appendChild(i)}_addSettingUI(t){const e=t.descriptor();const n=e["category"]||"";t.instance().then(i.bind(this));function i(t){const e=t;const i=e.settingElement();if(i)this._sectionElement(n).appendChild(i)}}_sectionElement(t){let e=this._nameToSection.get(t);if(!e){const n=t&&Common.UIString(t);e=this._appendSection(n);this._nameToSection.set(t,e)}return e}};Settings.ExperimentsSettingsTab=class extends Settings.SettingsTab{constructor(){super(Common.UIString("Experiments"),"experiments-tab-content");const t=Runtime.experiments.allConfigurableExperiments();if(t.length){const e=this._appendSection();e.appendChild(this._createExperimentsWarningSubsection());for(let n=0;n<t.length;++n)e.appendChild(this._createExperimentCheckbox(t[n]))}}_createExperimentsWarningSubsection(){const t=createElement("div");const e=t.createChild("span","settings-experiments-warning-subsection-warning");e.textContent=Common.UIString("WARNING:");t.createTextChild(" ");const n=t.createChild("span","settings-experiments-warning-subsection-message");n.textContent=Common.UIString("These experiments could be dangerous and may require restart.");return t}_createExperimentCheckbox(t){const e=UI.CheckboxLabel.create(Common.UIString(t.title),t.isEnabled());const n=e.checkboxElement;n.name=t.name;function i(){t.setEnabled(n.checked)}n.addEventListener("click",i,false);const s=createElement("p");s.className=t.hidden&&!t.isEnabled()?"settings-experiment-hidden":"";s.appendChild(e);return s}};Settings.SettingsScreen.ActionDelegate=class{handleAction(t,e){switch(e){case"settings.show":Settings.SettingsScreen._showSettingsScreen();return true;case"settings.documentation":InspectorFrontendHost.openInNewTab("https://developers.google.com/web/tools/chrome-devtools/");return true;case"settings.shortcuts":Settings.SettingsScreen._showSettingsScreen(Common.UIString("Shortcuts"));return true}return false}};Settings.SettingsScreen.Revealer=class{reveal(t){console.assert(t instanceof Common.Setting);const e=t;let n=false;self.runtime.extensions("setting").forEach(i);self.runtime.extensions(UI.SettingUI).forEach(s);self.runtime.extensions("view").forEach(o);return n?Promise.resolve():Promise.reject();function i(t){if(!Settings.GenericSettingsTab.isSettingVisible(t))return;if(t.descriptor()["settingName"]===e.name){InspectorFrontendHost.bringToFront();Settings.SettingsScreen._showSettingsScreen();n=true}}function s(t){const i=t.descriptor()["settings"];if(i&&i.indexOf(e.name)!==-1){InspectorFrontendHost.bringToFront();Settings.SettingsScreen._showSettingsScreen();n=true}}function o(t){const i=t.descriptor()["location"];if(i!=="settings-view")return;const s=t.descriptor()["settings"];if(s&&s.indexOf(e.name)!==-1){InspectorFrontendHost.bringToFront();Settings.SettingsScreen._showSettingsScreen(t.descriptor()["id"]);n=true}}}};Settings.FrameworkBlackboxSettingsTab=class extends UI.VBox{constructor(){super(true);this.registerRequiredCSS("settings/frameworkBlackboxSettingsTab.css");const t=this.contentElement.createChild("div","header");t.textContent=ls`Framework Blackboxing`;UI.ARIAUtils.markAsHeading(t,1);this.contentElement.createChild("div","intro").textContent=ls`Debugger will skip through the scripts and will not stop on exceptions thrown by them.`;const e=this.contentElement.createChild("div","blackbox-content-scripts");e.appendChild(UI.SettingsUI.createSettingCheckbox(ls`Blackbox content scripts`,Common.moduleSetting("skipContentScripts"),true));e.title=ls`Blackbox content scripts (extension scripts in the page)`;this._blackboxLabel=Common.UIString("Blackbox");this._disabledLabel=Common.UIString("Disabled");this._list=new UI.ListWidget(this);this._list.element.classList.add("blackbox-list");this._list.registerRequiredCSS("settings/frameworkBlackboxSettingsTab.css");const n=createElementWithClass("div","blackbox-list-empty");n.textContent=Common.UIString("No blackboxed patterns");this._list.setEmptyPlaceholder(n);this._list.show(this.contentElement);const i=UI.createTextButton(Common.UIString("Add pattern..."),this._addButtonClicked.bind(this),"add-button");this.contentElement.appendChild(i);this._setting=Common.moduleSetting("skipStackFramesPattern");this._setting.addChangeListener(this._settingUpdated,this);this.setDefaultFocusedElement(i)}wasShown(){super.wasShown();this._settingUpdated()}_settingUpdated(){this._list.clear();const t=this._setting.getAsArray();for(let e=0;e<t.length;++e)this._list.appendItem(t[e],true)}_addButtonClicked(){this._list.addNewItem(this._setting.getAsArray().length,{pattern:"",disabled:false})}renderItem(t,e){const n=createElementWithClass("div","blackbox-list-item");const i=n.createChild("div","blackbox-pattern");i.textContent=t.pattern;i.title=ls`Blackbox scripts whose names match '${t.pattern}'`;n.createChild("div","blackbox-separator");n.createChild("div","blackbox-behavior").textContent=t.disabled?this._disabledLabel:this._blackboxLabel;if(t.disabled)n.classList.add("blackbox-disabled");return n}removeItemRequested(t,e){const n=this._setting.getAsArray();n.splice(e,1);this._setting.setAsArray(n)}commitEdit(t,e,n){t.pattern=e.control("pattern").value.trim();t.disabled=e.control("behavior").value===this._disabledLabel;const i=this._setting.getAsArray();if(n)i.push(t);this._setting.setAsArray(i)}beginEdit(t){const e=this._createEditor();e.control("pattern").value=t.pattern;e.control("behavior").value=t.disabled?this._disabledLabel:this._blackboxLabel;return e}_createEditor(){if(this._editor)return this._editor;const t=new UI.ListWidget.Editor;this._editor=t;const e=t.contentElement();const n=e.createChild("div","blackbox-edit-row");n.createChild("div","blackbox-pattern").textContent=Common.UIString("Pattern");n.createChild("div","blackbox-separator blackbox-separator-invisible");n.createChild("div","blackbox-behavior").textContent=Common.UIString("Behavior");const i=e.createChild("div","blackbox-edit-row");const s=t.createInput("pattern","text","/framework\\.js$",r.bind(this));UI.ARIAUtils.setAccessibleName(s,ls`Pattern`);i.createChild("div","blackbox-pattern").appendChild(s);i.createChild("div","blackbox-separator blackbox-separator-invisible");const o=t.createSelect("behavior",[this._blackboxLabel,this._disabledLabel],a);UI.ARIAUtils.setAccessibleName(o,ls`Behavior`);i.createChild("div","blackbox-behavior").appendChild(o);return t;function r(t,e,n){const i=n.value.trim();const s=this._setting.getAsArray();for(let t=0;t<s.length;++t){if(t!==e&&s[t].pattern===i)return false}let o;try{o=new RegExp(i)}catch(t){}return!!(i&&o)}function a(t,e,n){return true}}};Runtime.cachedResources["settings/frameworkBlackboxSettingsTab.css"]="/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n    overflow:hidden;\n}\n\n.header {\n    padding: 0 0 6px;\n    border-bottom: 1px solid #EEEEEE;\n    font-size: 18px;\n    font-weight: normal;\n    flex: none;\n}\n\n.intro {\n    margin-top: 10px;\n}\n\n.blackbox-content-scripts {\n    margin-top: 10px;\n    flex: none;\n}\n\n.add-button {\n    margin: 10px 2px;\n    align-self: flex-start;\n    flex: none;\n}\n\n.blackbox-list {\n    margin-top: 10px;\n    max-width: 500px;\n    flex: 0 1 auto;\n    min-height: 30px;\n}\n\n.blackbox-list-empty {\n    flex: auto;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.blackbox-list-item {\n    padding: 3px 5px 3px 5px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    position: relative;\n    flex: auto 1 1;\n}\n\n .blackbox-list-item .blackbox-pattern {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    -webkit-user-select: none;\n    color: #222;\n    overflow: hidden;\n}\n\n.blackbox-pattern {\n    flex: auto;\n    min-width: 100px;\n}\n\n.blackbox-list-item.blackbox-disabled .blackbox-pattern {\n    text-decoration: line-through;\n}\n\n.blackbox-behavior {\n    flex: 0 0 100px;\n    padding-left: 10px;\n}\n\n.blackbox-behavior > select {\n    margin-left: -10px;\n}\n\n.blackbox-separator {\n    flex: 0 0 1px;\n    background-color: rgb(231, 231, 231);\n    height: 30px;\n    margin: 0 4px;\n}\n\n.blackbox-separator-invisible {\n    visibility: hidden;\n    height: 100% !important;\n}\n\n.blackbox-edit-row {\n    flex: none;\n    display: flex;\n    flex-direction: row;\n    margin: 6px 5px;\n    align-items: center;\n}\n\n.blackbox-edit-row input,\n.blackbox-edit-row select {\n    width: 100%;\n    text-align: inherit;\n}\n";Runtime.cachedResources["settings/settingsScreen.css"]="/*\n * Copyright (c) 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.settings-window-main {\n    color: rgb(48, 57, 66);\n    background-color: white;\n    padding: 11px 0 0 0;\n}\n\n.settings-content {\n    overflow-y: auto;\n    overflow-x: hidden;\n    margin: 8px 8px 8px 0;\n    padding: 0 4px;\n    flex: auto;\n}\n\n.settings-footnote {\n    border-top: 1px solid #EEEEEE;\n    margin: 0;\n    padding: 12px;\n}\n\n.settings-container {\n    width: 100%;\n    -webkit-column-width: 288px;\n}\n\n.settings-block {\n    display: block;\n    padding-bottom: 9px;\n    width: 288px;\n    -webkit-column-break-inside: avoid;\n}\n\n.settings-tab.settings-container {\n    -webkit-column-width: 308px;\n}\n\n.settings-tab .settings-block {\n    margin-left: 20px;\n}\n\n.settings-line {\n    padding-bottom: 5px;\n    margin-bottom: 5px;\n}\n\n.settings-key-cell {\n    display: inline-block;\n    width: 153px;\n    white-space: nowrap;\n    text-align: right;\n    vertical-align: middle;\n    padding-right: 6px;\n}\n\n.settings-cell {\n    display: inline-block;\n    width: 135px;\n    vertical-align: middle;\n}\n\n.settings-section-title {\n    font-size: 120%;\n    text-align: left;\n}\n\n.settings-key {\n    padding: 0.1em 0.6em;\n    border: 1px solid #ccc;\n    font-size: 11px;\n    background-color: #f7f7f7;\n    color: #333;\n    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 0 0 2px #ffffff inset;\n    border-radius: 3px;\n    display: inline-block;\n    margin: 0 0.1em;\n    text-shadow: 0 1px 0 #fff;\n    line-height: 1.5;\n    white-space: nowrap;\n}\n\n.settings-combine-keys,\n.settings-key-delimiter {\n    font-size: 9px;\n}\n\n.settings-combine-keys {\n    margin: 0 0.3em;\n}\n\n.settings-key-delimiter {\n    margin: 0 0.5em;\n    display: none;\n}\n\nfieldset {\n    margin: 0;\n    padding: 0;\n    border: none;\n}\n\n.settings-tab label {\n    padding-right: 4px;\n    display: inline-flex;\n    flex-shrink: 0;\n}\n\n.settings-block p p {\n    padding-left: 30px;\n}\n\n.settings-experiments-warning-subsection-warning {\n    color: rgb(200, 0, 0);\n}\n\n.settings-experiments-warning-subsection-message {\n    color: inherit;\n}\n\n.settings-content input[type=checkbox] {\n    margin: 1px 7px 1px 2px;\n}\n\n.settings-window-title {\n    font-size: 18px;\n    color: rgb(48, 57, 66);\n    padding: 0 0 5px 13px;\n}\n\n.settings-container-wrapper {\n    position: absolute;\n    top: 31px;\n    left: 0px;\n    right: 0;\n    bottom: 0;\n    overflow: auto;\n    padding-top: 9px;\n}\n\n.settings-tab.settings-content {\n    margin: 0;\n    padding: 0;\n}\n\n.settings-tab-container {\n    flex: auto;\n    overflow: hidden;\n}\n\n.settings-tab-container header {\n    padding: 0 0 6px;\n    border-bottom: 1px solid #EEEEEE;\n}\n\n#experiments-tab-content .settings-container {\n    -webkit-column-width: 470px;\n}\n\n#experiments-tab-content .settings-block {\n    width: 470px;\n    margin-left: 0;\n}\n\n.settings-tab-container header > h1 {\n    font-size: 18px;\n    font-weight: normal;\n    margin: 0;\n    padding-bottom: 3px;\n}\n\n.settings-tab .settings-section-title {\n    margin-left: -20px;\n    color: #222;\n}\n\n.settings-tab .settings-block fieldset:disabled label:hover {\n    color: inherit;\n}\n\n.settings-tab .settings-block label:hover {\n    color: #222;\n}\n\n.settings-tab p {\n    margin: 12px 0;\n}\n\n.settings-tab select {\n    margin-left: 10px;\n}\n\n.settings-experiment-hidden {\n    display: none;\n}\n\n.settings-experiment-hidden [is=dt-checkbox] {\n    background-color: #ddd;\n}\n\n.settings-developer-mode .settings-experiment-hidden {\n    display: block;\n}\n";