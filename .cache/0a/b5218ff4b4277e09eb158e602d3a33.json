{"id":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","dependencies":[{"name":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/package.json","includedInParent":true,"mtime":1692653187005},{"name":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/package.json","includedInParent":true,"mtime":1692652810485},{"name":"../internals/function-uncurry-this","loc":{"line":3,"column":26,"index":116},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/string-punycode-to-ascii.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/function-uncurry-this.js"}],"generated":{"js":"'use strict';\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\n\nvar $RangeError = RangeError;\nvar exec = uncurryThis(regexSeparators.exec);\nvar floor = Math.floor;\nvar fromCharCode = String.fromCharCode;\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar join = uncurryThis([].join);\nvar push = uncurryThis([].push);\nvar replace = uncurryThis(''.replace);\nvar split = uncurryThis(''.split);\nvar toLowerCase = uncurryThis(''.toLowerCase);\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  while (counter < length) {\n    var value = charCodeAt(string, counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = charCodeAt(string, counter++);\n      if ((extra & 0xFC00) === 0xDC00) { // Low surrogate.\n        push(output, ((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        push(output, value);\n        counter--;\n      }\n    } else {\n      push(output, value);\n    }\n  }\n  return output;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n */\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  while (delta > baseMinusTMin * tMax >> 1) {\n    delta = floor(delta / baseMinusTMin);\n    k += base;\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\nvar encode = function (input) {\n  var output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  input = ucs2decode(input);\n\n  // Cache the length.\n  var inputLength = input.length;\n\n  // Initialize the state.\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue;\n\n  // Handle the basic code points.\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n    if (currentValue < 0x80) {\n      push(output, fromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n  var handledCPCount = basicLength; // number of code points that have been handled;\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    push(output, delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n    var handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw $RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        throw $RangeError(OVERFLOW_ERROR);\n      }\n      if (currentValue === n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n        var k = base;\n        while (true) {\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          push(output, fromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n          k += base;\n        }\n\n        push(output, fromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n        delta = 0;\n        handledCPCount++;\n      }\n    }\n\n    delta++;\n    n++;\n  }\n  return join(output, '');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = split(replace(toLowerCase(input), regexSeparators, '\\u002E'), '.');\n  var i, label;\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    push(encoded, exec(regexNonASCII, label) ? 'xn--' + encode(label) : label);\n  }\n  return join(encoded, '.');\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/core-js/internals/string-punycode-to-ascii.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}}],"sources":{"../../node_modules/core-js/internals/string-punycode-to-ascii.js":"'use strict';\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\n\nvar $RangeError = RangeError;\nvar exec = uncurryThis(regexSeparators.exec);\nvar floor = Math.floor;\nvar fromCharCode = String.fromCharCode;\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar join = uncurryThis([].join);\nvar push = uncurryThis([].push);\nvar replace = uncurryThis(''.replace);\nvar split = uncurryThis(''.split);\nvar toLowerCase = uncurryThis(''.toLowerCase);\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  while (counter < length) {\n    var value = charCodeAt(string, counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = charCodeAt(string, counter++);\n      if ((extra & 0xFC00) === 0xDC00) { // Low surrogate.\n        push(output, ((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        push(output, value);\n        counter--;\n      }\n    } else {\n      push(output, value);\n    }\n  }\n  return output;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n */\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  while (delta > baseMinusTMin * tMax >> 1) {\n    delta = floor(delta / baseMinusTMin);\n    k += base;\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\nvar encode = function (input) {\n  var output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  input = ucs2decode(input);\n\n  // Cache the length.\n  var inputLength = input.length;\n\n  // Initialize the state.\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue;\n\n  // Handle the basic code points.\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n    if (currentValue < 0x80) {\n      push(output, fromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n  var handledCPCount = basicLength; // number of code points that have been handled;\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    push(output, delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n    var handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw $RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        throw $RangeError(OVERFLOW_ERROR);\n      }\n      if (currentValue === n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n        var k = base;\n        while (true) {\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          push(output, fromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n          k += base;\n        }\n\n        push(output, fromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n        delta = 0;\n        handledCPCount++;\n      }\n    }\n\n    delta++;\n    n++;\n  }\n  return join(output, '');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = split(replace(toLowerCase(input), regexSeparators, '\\u002E'), '.');\n  var i, label;\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    push(encoded, exec(regexNonASCII, label) ? 'xn--' + encode(label) : label);\n  }\n  return join(encoded, '.');\n};\n"},"lineCount":182}},"error":null,"hash":"266af3323183bd06638be4f4d15b6b2e","cacheData":{"env":{}}}