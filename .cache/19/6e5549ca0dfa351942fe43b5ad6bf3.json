{"id":"../../node_modules/core-js/modules/es.string.to-well-formed.js","dependencies":[{"name":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/package.json","includedInParent":true,"mtime":1692653187005},{"name":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/package.json","includedInParent":true,"mtime":1692652810485},{"name":"../internals/export","loc":{"line":2,"column":16,"index":30},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/modules/es.string.to-well-formed.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/export.js"},{"name":"../internals/function-call","loc":{"line":3,"column":19,"index":73},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/modules/es.string.to-well-formed.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/function-call.js"},{"name":"../internals/function-uncurry-this","loc":{"line":4,"column":26,"index":130},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/modules/es.string.to-well-formed.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/function-uncurry-this.js"},{"name":"../internals/require-object-coercible","loc":{"line":5,"column":37,"index":206},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/modules/es.string.to-well-formed.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/require-object-coercible.js"},{"name":"../internals/to-string","loc":{"line":6,"column":23,"index":271},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/modules/es.string.to-well-formed.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/to-string.js"},{"name":"../internals/fails","loc":{"line":7,"column":20,"index":318},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/modules/es.string.to-well-formed.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/fails.js"}],"generated":{"js":"'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\n\nvar $Array = Array;\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar join = uncurryThis([].join);\n// eslint-disable-next-line es/no-string-prototype-iswellformed-towellformed -- safe\nvar $toWellFormed = ''.toWellFormed;\nvar REPLACEMENT_CHARACTER = '\\uFFFD';\n\n// Safari bug\nvar TO_STRING_CONVERSION_BUG = $toWellFormed && fails(function () {\n  return call($toWellFormed, 1) !== '1';\n});\n\n// `String.prototype.toWellFormed` method\n// https://github.com/tc39/proposal-is-usv-string\n$({ target: 'String', proto: true, forced: TO_STRING_CONVERSION_BUG }, {\n  toWellFormed: function toWellFormed() {\n    var S = toString(requireObjectCoercible(this));\n    if (TO_STRING_CONVERSION_BUG) return call($toWellFormed, S);\n    var length = S.length;\n    var result = $Array(length);\n    for (var i = 0; i < length; i++) {\n      var charCode = charCodeAt(S, i);\n      // single UTF-16 code unit\n      if ((charCode & 0xF800) !== 0xD800) result[i] = charAt(S, i);\n      // unpaired surrogate\n      else if (charCode >= 0xDC00 || i + 1 >= length || (charCodeAt(S, i + 1) & 0xFC00) !== 0xDC00) result[i] = REPLACEMENT_CHARACTER;\n      // surrogate pair\n      else {\n        result[i] = charAt(S, i);\n        result[++i] = charAt(S, i);\n      }\n    } return join(result, '');\n  }\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/core-js/modules/es.string.to-well-formed.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"../../node_modules/core-js/modules/es.string.to-well-formed.js":"'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\n\nvar $Array = Array;\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar join = uncurryThis([].join);\n// eslint-disable-next-line es/no-string-prototype-iswellformed-towellformed -- safe\nvar $toWellFormed = ''.toWellFormed;\nvar REPLACEMENT_CHARACTER = '\\uFFFD';\n\n// Safari bug\nvar TO_STRING_CONVERSION_BUG = $toWellFormed && fails(function () {\n  return call($toWellFormed, 1) !== '1';\n});\n\n// `String.prototype.toWellFormed` method\n// https://github.com/tc39/proposal-is-usv-string\n$({ target: 'String', proto: true, forced: TO_STRING_CONVERSION_BUG }, {\n  toWellFormed: function toWellFormed() {\n    var S = toString(requireObjectCoercible(this));\n    if (TO_STRING_CONVERSION_BUG) return call($toWellFormed, S);\n    var length = S.length;\n    var result = $Array(length);\n    for (var i = 0; i < length; i++) {\n      var charCode = charCodeAt(S, i);\n      // single UTF-16 code unit\n      if ((charCode & 0xF800) !== 0xD800) result[i] = charAt(S, i);\n      // unpaired surrogate\n      else if (charCode >= 0xDC00 || i + 1 >= length || (charCodeAt(S, i + 1) & 0xFC00) !== 0xDC00) result[i] = REPLACEMENT_CHARACTER;\n      // surrogate pair\n      else {\n        result[i] = charAt(S, i);\n        result[++i] = charAt(S, i);\n      }\n    } return join(result, '');\n  }\n});\n"},"lineCount":44}},"error":null,"hash":"ad776c26b22a1d7d35926e7216b43ce7","cacheData":{"env":{}}}