{"id":"../../node_modules/core-js/internals/string-trim.js","dependencies":[{"name":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/package.json","includedInParent":true,"mtime":1692653187005},{"name":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/package.json","includedInParent":true,"mtime":1692652810485},{"name":"../internals/function-uncurry-this","loc":{"line":2,"column":26,"index":40},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/string-trim.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/function-uncurry-this.js"},{"name":"../internals/require-object-coercible","loc":{"line":3,"column":37,"index":116},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/string-trim.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/require-object-coercible.js"},{"name":"../internals/to-string","loc":{"line":4,"column":23,"index":181},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/string-trim.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/to-string.js"},{"name":"../internals/whitespaces","loc":{"line":5,"column":26,"index":234},"parent":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/string-trim.js","resolved":"/Users/itsyuimoriispace/Documents/✶ GitHub/Node.js--Express--MongoDB---More--The-Complete-Bootcamp-2023/node_modules/core-js/internals/whitespaces.js"}],"generated":{"js":"'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar ltrim = RegExp('^[' + whitespaces + ']+');\nvar rtrim = RegExp('(^|[^' + whitespaces + '])[' + whitespaces + ']+$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '$1');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/core-js/internals/string-trim.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"../../node_modules/core-js/internals/string-trim.js":"'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar ltrim = RegExp('^[' + whitespaces + ']+');\nvar rtrim = RegExp('(^|[^' + whitespaces + '])[' + whitespaces + ']+$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '$1');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n"},"lineCount":32}},"error":null,"hash":"44ac4d695e9b2229f6730dd518bff478","cacheData":{"env":{}}}